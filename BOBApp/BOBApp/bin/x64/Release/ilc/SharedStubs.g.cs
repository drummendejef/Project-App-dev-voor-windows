#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 64-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The 'McgInterop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace McgInterop
{
	internal unsafe static partial class ForwardComSharedStubs
	{
		// Signature, Windows.Foundation.IUriEscapeStatics.UnescapeComponent, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_string__string__(
					global::System.__ComObject __this, 
					string toUnescape, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_toUnescape = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.HSTRING unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_toUnescape = toUnescape)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_toUnescape;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_toUnescape, toUnescape, &(hstring_header_toUnescape), &(unsafe_toUnescape));
					unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_toUnescape, 
										&(unsafe_value__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					value__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value__retval);
				}
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_value__retval.handle);
			}
		}

		// Signature, Windows.Foundation.IUriRuntimeClassWithAbsoluteCanonicalUri.get_AbsoluteCanonicalUri, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_string__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value__retval);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_value__retval.handle);
			}
		}

		// Signature, Windows.UI.Xaml.Data.IValueConverter.Convert, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_object__Type__object__string__object__(
					global::System.__ComObject __this, 
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Type__Impl.UnsafeType unsafe_targetType;
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_parameter = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.HSTRING unsafe_language = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_returnValue__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object returnValue__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				global::System.Runtime.InteropServices.HSTRING unsafe_targetType__HSTRING__Name;
				int unsafe_targetType__int__Kind;
				global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
									targetType, 
									out unsafe_targetType__HSTRING__Name, 
									out unsafe_targetType__int__Kind
								);
				unsafe_targetType.Name = unsafe_targetType__HSTRING__Name;
				unsafe_targetType.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_targetType__int__Kind;
				unsafe_parameter = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(parameter);
				fixed (char* pBuffer_language = language)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_language;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_language, language, &(hstring_header_language), &(unsafe_language));
					unsafe_returnValue__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_value, 
										unsafe_targetType, 
										unsafe_parameter, 
										unsafe_language, 
										&(unsafe_returnValue__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_returnValue__retval));
				}
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_parameter)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastButton>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastButton__NotificationsExtensions_Toasts__IToastButton *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Toasts.IToastButton Func_uint__NotificationsExtensions_Toasts_IToastButton__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl**);
			global::NotificationsExtensions.Toasts.IToastButton __value__retval = default(global::NotificationsExtensions.Toasts.IToastButton);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Toasts.IToastButton)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Toasts.IToastButton).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastButton>.get_Size, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastButton>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_NotificationsExtensions_Toasts_IToastButton___Windows_Foundation_Collections__IVectorView_A_NotificationsExtensions_Toasts_IToastButton_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.IToastButton> Func__IReadOnlyList_1_NotificationsExtensions_Toasts_IToastButton___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_NotificationsExtensions_Toasts_IToastButton_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_NotificationsExtensions_Toasts_IToastButton_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.IToastButton> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.IToastButton>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.IToastButton>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.IToastButton>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastButton>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastButton__NotificationsExtensions_Toasts__IToastButton *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_NotificationsExtensions_Toasts_IToastButton__out_uint__bool__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.IToastButton value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Toasts.IToastButton).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastButton>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastButton__NotificationsExtensions_Toasts__IToastButton *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__NotificationsExtensions_Toasts_IToastButton__(
					global::System.__ComObject __this, 
					uint index, 
					global::NotificationsExtensions.Toasts.IToastButton value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Toasts.IToastButton).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastButton>.RemoveAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastButton>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastButton__NotificationsExtensions_Toasts__IToastButton *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_NotificationsExtensions_Toasts_IToastButton__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.IToastButton value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Toasts.IToastButton).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastButton>.RemoveAtEnd, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastButton>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Toasts_IToastButton__NotificationsExtensions_Toasts__IToastButton * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_NotificationsExtensions_Toasts_IToastButton__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::NotificationsExtensions.Toasts.IToastButton[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastButton__NotificationsExtensions_Toasts__IToastButton * items
						items[mcgIdx] = (global::NotificationsExtensions.Toasts.IToastButton)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Toasts.IToastButton).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastButton__NotificationsExtensions_Toasts__IToastButton * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastButton>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Toasts_IToastButton__NotificationsExtensions_Toasts__IToastButton * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_NotificationsExtensions_Toasts_IToastButton__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.IToastButton[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::NotificationsExtensions.Toasts.IToastButton).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastButton__NotificationsExtensions_Toasts__IToastButton * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<NotificationsExtensions.Toasts.IToastButton>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_NotificationsExtensions_Toasts_IToastButton___Windows_Foundation_Collections__IIterator_A_NotificationsExtensions_Toasts_IToastButton_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastButton> Func__Collections_IIterator_1_NotificationsExtensions_Toasts_IToastButton___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Toasts_IToastButton_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Toasts_IToastButton_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastButton> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastButton>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastButton>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastButton>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Toasts.IToastButton>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastButton__NotificationsExtensions_Toasts__IToastButton *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Toasts.IToastButton Func_NotificationsExtensions_Toasts_IToastButton__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl**);
			global::NotificationsExtensions.Toasts.IToastButton __value__retval = default(global::NotificationsExtensions.Toasts.IToastButton);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Toasts.IToastButton)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Toasts.IToastButton).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Toasts.IToastButton>.get_HasCurrent, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_bool__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Toasts.IToastButton>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Toasts_IToastButton__NotificationsExtensions_Toasts__IToastButton * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_NotificationsExtensions_Toasts_IToastButton__uint__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.IToastButton[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Toasts.IToastButton__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastButton__NotificationsExtensions_Toasts__IToastButton * items
						items[mcgIdx] = (global::NotificationsExtensions.Toasts.IToastButton)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Toasts.IToastButton).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastButton__NotificationsExtensions_Toasts__IToastButton * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastInput>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastInput__NotificationsExtensions_Toasts__IToastInput *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Toasts.IToastInput Func_uint__NotificationsExtensions_Toasts_IToastInput__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl**);
			global::NotificationsExtensions.Toasts.IToastInput __value__retval = default(global::NotificationsExtensions.Toasts.IToastInput);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Toasts.IToastInput)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Toasts.IToastInput).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastInput>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_NotificationsExtensions_Toasts_IToastInput___Windows_Foundation_Collections__IVectorView_A_NotificationsExtensions_Toasts_IToastInput_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.IToastInput> Func__IReadOnlyList_1_NotificationsExtensions_Toasts_IToastInput___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_NotificationsExtensions_Toasts_IToastInput_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_NotificationsExtensions_Toasts_IToastInput_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.IToastInput> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.IToastInput>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.IToastInput>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.IToastInput>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastInput>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastInput__NotificationsExtensions_Toasts__IToastInput *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_NotificationsExtensions_Toasts_IToastInput__out_uint__bool__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.IToastInput value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Toasts.IToastInput).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastInput>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastInput__NotificationsExtensions_Toasts__IToastInput *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__NotificationsExtensions_Toasts_IToastInput__(
					global::System.__ComObject __this, 
					uint index, 
					global::NotificationsExtensions.Toasts.IToastInput value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Toasts.IToastInput).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastInput>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastInput__NotificationsExtensions_Toasts__IToastInput *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_NotificationsExtensions_Toasts_IToastInput__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.IToastInput value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Toasts.IToastInput).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastInput>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Toasts_IToastInput__NotificationsExtensions_Toasts__IToastInput * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_NotificationsExtensions_Toasts_IToastInput__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::NotificationsExtensions.Toasts.IToastInput[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastInput__NotificationsExtensions_Toasts__IToastInput * items
						items[mcgIdx] = (global::NotificationsExtensions.Toasts.IToastInput)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Toasts.IToastInput).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastInput__NotificationsExtensions_Toasts__IToastInput * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.IToastInput>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Toasts_IToastInput__NotificationsExtensions_Toasts__IToastInput * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_NotificationsExtensions_Toasts_IToastInput__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.IToastInput[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::NotificationsExtensions.Toasts.IToastInput).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastInput__NotificationsExtensions_Toasts__IToastInput * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<NotificationsExtensions.Toasts.IToastInput>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_NotificationsExtensions_Toasts_IToastInput___Windows_Foundation_Collections__IIterator_A_NotificationsExtensions_Toasts_IToastInput_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastInput> Func__Collections_IIterator_1_NotificationsExtensions_Toasts_IToastInput___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Toasts_IToastInput_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Toasts_IToastInput_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastInput> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastInput>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastInput>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastInput>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Toasts.IToastInput>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastInput__NotificationsExtensions_Toasts__IToastInput *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Toasts.IToastInput Func_NotificationsExtensions_Toasts_IToastInput__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl**);
			global::NotificationsExtensions.Toasts.IToastInput __value__retval = default(global::NotificationsExtensions.Toasts.IToastInput);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Toasts.IToastInput)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Toasts.IToastInput).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Toasts.IToastInput>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Toasts_IToastInput__NotificationsExtensions_Toasts__IToastInput * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_NotificationsExtensions_Toasts_IToastInput__uint__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.IToastInput[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Toasts.IToastInput__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastInput__NotificationsExtensions_Toasts__IToastInput * items
						items[mcgIdx] = (global::NotificationsExtensions.Toasts.IToastInput)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Toasts.IToastInput).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastInput__NotificationsExtensions_Toasts__IToastInput * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Data.Xml.Dom.IXmlDocumentIO.LoadXml, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__(
					global::System.__ComObject __this, 
					string xml, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_xml = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_xml = xml)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_xml;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_xml, xml, &(hstring_header_xml), &(unsafe_xml));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_xml
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.ToastSelectionBoxItem>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastSelectionBoxItem__NotificationsExtensions_Toasts__ToastSelectionBoxItem *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Toasts.ToastSelectionBoxItem Func_uint__NotificationsExtensions_Toasts_ToastSelectionBoxItem__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl**);
			global::NotificationsExtensions.Toasts.ToastSelectionBoxItem __value__retval = default(global::NotificationsExtensions.Toasts.ToastSelectionBoxItem);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Toasts.ToastSelectionBoxItem)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass).TypeHandle, 
									typeof(global::NotificationsExtensions.Toasts.ToastSelectionBoxItem).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.ToastSelectionBoxItem>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_NotificationsExtensions_Toasts_ToastSelectionBoxItem___Windows_Foundation_Collections__IVectorView_A_NotificationsExtensions_Toasts_ToastSelectionBoxItem_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.ToastSelectionBoxItem> Func__IReadOnlyList_1_NotificationsExtensions_Toasts_ToastSelectionBoxItem___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_NotificationsExtensions_Toasts_ToastSelectionBoxItem_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_NotificationsExtensions_Toasts_ToastSelectionBoxItem_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.ToastSelectionBoxItem> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.ToastSelectionBoxItem>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.ToastSelectionBoxItem>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.ToastSelectionBoxItem>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.ToastSelectionBoxItem>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastSelectionBoxItem__NotificationsExtensions_Toasts__ToastSelectionBoxItem *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_NotificationsExtensions_Toasts_ToastSelectionBoxItem__out_uint__bool__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.ToastSelectionBoxItem value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.ToastSelectionBoxItem>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastSelectionBoxItem__NotificationsExtensions_Toasts__ToastSelectionBoxItem *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__NotificationsExtensions_Toasts_ToastSelectionBoxItem__(
					global::System.__ComObject __this, 
					uint index, 
					global::NotificationsExtensions.Toasts.ToastSelectionBoxItem value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.ToastSelectionBoxItem>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastSelectionBoxItem__NotificationsExtensions_Toasts__ToastSelectionBoxItem *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_NotificationsExtensions_Toasts_ToastSelectionBoxItem__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.ToastSelectionBoxItem value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.ToastSelectionBoxItem>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Toasts_ToastSelectionBoxItem__NotificationsExtensions_Toasts__ToastSelectionBoxItem * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_NotificationsExtensions_Toasts_ToastSelectionBoxItem__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::NotificationsExtensions.Toasts.ToastSelectionBoxItem[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastSelectionBoxItem__NotificationsExtensions_Toasts__ToastSelectionBoxItem * items
						items[mcgIdx] = (global::NotificationsExtensions.Toasts.ToastSelectionBoxItem)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass).TypeHandle, 
											typeof(global::NotificationsExtensions.Toasts.ToastSelectionBoxItem).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastSelectionBoxItem__NotificationsExtensions_Toasts__ToastSelectionBoxItem * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.ToastSelectionBoxItem>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Toasts_ToastSelectionBoxItem__NotificationsExtensions_Toasts__ToastSelectionBoxItem * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_NotificationsExtensions_Toasts_ToastSelectionBoxItem__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.ToastSelectionBoxItem[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastSelectionBoxItem__NotificationsExtensions_Toasts__ToastSelectionBoxItem * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<NotificationsExtensions.Toasts.ToastSelectionBoxItem>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_NotificationsExtensions_Toasts_ToastSelectionBoxItem___Windows_Foundation_Collections__IIterator_A_NotificationsExtensions_Toasts_ToastSelectionBoxItem_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.ToastSelectionBoxItem> Func__Collections_IIterator_1_NotificationsExtensions_Toasts_ToastSelectionBoxItem___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Toasts_ToastSelectionBoxItem_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Toasts_ToastSelectionBoxItem_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.ToastSelectionBoxItem> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.ToastSelectionBoxItem>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.ToastSelectionBoxItem>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.ToastSelectionBoxItem>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Toasts.ToastSelectionBoxItem>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastSelectionBoxItem__NotificationsExtensions_Toasts__ToastSelectionBoxItem *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Toasts.ToastSelectionBoxItem Func_NotificationsExtensions_Toasts_ToastSelectionBoxItem__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl**);
			global::NotificationsExtensions.Toasts.ToastSelectionBoxItem __value__retval = default(global::NotificationsExtensions.Toasts.ToastSelectionBoxItem);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Toasts.ToastSelectionBoxItem)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass).TypeHandle, 
									typeof(global::NotificationsExtensions.Toasts.ToastSelectionBoxItem).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Toasts.ToastSelectionBoxItem>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Toasts_ToastSelectionBoxItem__NotificationsExtensions_Toasts__ToastSelectionBoxItem * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_NotificationsExtensions_Toasts_ToastSelectionBoxItem__uint__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.ToastSelectionBoxItem[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastSelectionBoxItem__NotificationsExtensions_Toasts__ToastSelectionBoxItem * items
						items[mcgIdx] = (global::NotificationsExtensions.Toasts.ToastSelectionBoxItem)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass).TypeHandle, 
											typeof(global::NotificationsExtensions.Toasts.ToastSelectionBoxItem).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastSelectionBoxItem__NotificationsExtensions_Toasts__ToastSelectionBoxItem * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.ToastImage>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastImage__NotificationsExtensions_Toasts__ToastImage *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Toasts.ToastImage Func_uint__NotificationsExtensions_Toasts_ToastImage__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl**);
			global::NotificationsExtensions.Toasts.ToastImage __value__retval = default(global::NotificationsExtensions.Toasts.ToastImage);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Toasts.ToastImage)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Toasts.IToastImageClass).TypeHandle, 
									typeof(global::NotificationsExtensions.Toasts.ToastImage).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.ToastImage>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_NotificationsExtensions_Toasts_ToastImage___Windows_Foundation_Collections__IVectorView_A_NotificationsExtensions_Toasts_ToastImage_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.ToastImage> Func__IReadOnlyList_1_NotificationsExtensions_Toasts_ToastImage___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_NotificationsExtensions_Toasts_ToastImage_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_NotificationsExtensions_Toasts_ToastImage_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.ToastImage> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.ToastImage>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.ToastImage>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Toasts.ToastImage>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.ToastImage>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastImage__NotificationsExtensions_Toasts__ToastImage *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_NotificationsExtensions_Toasts_ToastImage__out_uint__bool__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.ToastImage value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Toasts.IToastImageClass).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.ToastImage>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastImage__NotificationsExtensions_Toasts__ToastImage *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__NotificationsExtensions_Toasts_ToastImage__(
					global::System.__ComObject __this, 
					uint index, 
					global::NotificationsExtensions.Toasts.ToastImage value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Toasts.IToastImageClass).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.ToastImage>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastImage__NotificationsExtensions_Toasts__ToastImage *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_NotificationsExtensions_Toasts_ToastImage__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.ToastImage value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Toasts.IToastImageClass).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.ToastImage>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Toasts_ToastImage__NotificationsExtensions_Toasts__ToastImage * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_NotificationsExtensions_Toasts_ToastImage__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::NotificationsExtensions.Toasts.ToastImage[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastImage__NotificationsExtensions_Toasts__ToastImage * items
						items[mcgIdx] = (global::NotificationsExtensions.Toasts.ToastImage)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Toasts.IToastImageClass).TypeHandle, 
											typeof(global::NotificationsExtensions.Toasts.ToastImage).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastImage__NotificationsExtensions_Toasts__ToastImage * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Toasts.ToastImage>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Toasts_ToastImage__NotificationsExtensions_Toasts__ToastImage * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_NotificationsExtensions_Toasts_ToastImage__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.ToastImage[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::NotificationsExtensions.Toasts.IToastImageClass).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastImage__NotificationsExtensions_Toasts__ToastImage * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<NotificationsExtensions.Toasts.ToastImage>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_NotificationsExtensions_Toasts_ToastImage___Windows_Foundation_Collections__IIterator_A_NotificationsExtensions_Toasts_ToastImage_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.ToastImage> Func__Collections_IIterator_1_NotificationsExtensions_Toasts_ToastImage___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Toasts_ToastImage_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Toasts_ToastImage_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.ToastImage> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.ToastImage>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.ToastImage>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.ToastImage>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Toasts.ToastImage>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastImage__NotificationsExtensions_Toasts__ToastImage *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Toasts.ToastImage Func_NotificationsExtensions_Toasts_ToastImage__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl**);
			global::NotificationsExtensions.Toasts.ToastImage __value__retval = default(global::NotificationsExtensions.Toasts.ToastImage);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Toasts.ToastImage)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Toasts.IToastImageClass).TypeHandle, 
									typeof(global::NotificationsExtensions.Toasts.ToastImage).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Toasts.ToastImage>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Toasts_ToastImage__NotificationsExtensions_Toasts__ToastImage * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_NotificationsExtensions_Toasts_ToastImage__uint__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.ToastImage[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastImage__NotificationsExtensions_Toasts__ToastImage * items
						items[mcgIdx] = (global::NotificationsExtensions.Toasts.ToastImage)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Toasts.IToastImageClass).TypeHandle, 
											typeof(global::NotificationsExtensions.Toasts.ToastImage).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastImage__NotificationsExtensions_Toasts__ToastImage * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.ITileAdaptiveChild>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileAdaptiveChild__NotificationsExtensions_Tiles__ITileAdaptiveChild *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.ITileAdaptiveChild Func_uint__NotificationsExtensions_Tiles_ITileAdaptiveChild__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl**);
			global::NotificationsExtensions.Tiles.ITileAdaptiveChild __value__retval = default(global::NotificationsExtensions.Tiles.ITileAdaptiveChild);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Tiles.ITileAdaptiveChild)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Tiles.ITileAdaptiveChild).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.ITileAdaptiveChild>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_NotificationsExtensions_Tiles_ITileAdaptiveChild___Windows_Foundation_Collections__IVectorView_A_NotificationsExtensions_Tiles_ITileAdaptiveChild_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.ITileAdaptiveChild> Func__IReadOnlyList_1_NotificationsExtensions_Tiles_ITileAdaptiveChild___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_NotificationsExtensions_Tiles_ITileAdaptiveChild_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_NotificationsExtensions_Tiles_ITileAdaptiveChild_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.ITileAdaptiveChild> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.ITileAdaptiveChild>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.ITileAdaptiveChild>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.ITileAdaptiveChild>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.ITileAdaptiveChild>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileAdaptiveChild__NotificationsExtensions_Tiles__ITileAdaptiveChild *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_NotificationsExtensions_Tiles_ITileAdaptiveChild__out_uint__bool__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.ITileAdaptiveChild value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Tiles.ITileAdaptiveChild).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.ITileAdaptiveChild>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileAdaptiveChild__NotificationsExtensions_Tiles__ITileAdaptiveChild *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__NotificationsExtensions_Tiles_ITileAdaptiveChild__(
					global::System.__ComObject __this, 
					uint index, 
					global::NotificationsExtensions.Tiles.ITileAdaptiveChild value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Tiles.ITileAdaptiveChild).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.ITileAdaptiveChild>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileAdaptiveChild__NotificationsExtensions_Tiles__ITileAdaptiveChild *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_NotificationsExtensions_Tiles_ITileAdaptiveChild__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.ITileAdaptiveChild value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Tiles.ITileAdaptiveChild).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.ITileAdaptiveChild>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Tiles_ITileAdaptiveChild__NotificationsExtensions_Tiles__ITileAdaptiveChild * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_NotificationsExtensions_Tiles_ITileAdaptiveChild__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::NotificationsExtensions.Tiles.ITileAdaptiveChild[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileAdaptiveChild__NotificationsExtensions_Tiles__ITileAdaptiveChild * items
						items[mcgIdx] = (global::NotificationsExtensions.Tiles.ITileAdaptiveChild)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Tiles.ITileAdaptiveChild).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileAdaptiveChild__NotificationsExtensions_Tiles__ITileAdaptiveChild * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.ITileAdaptiveChild>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Tiles_ITileAdaptiveChild__NotificationsExtensions_Tiles__ITileAdaptiveChild * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_NotificationsExtensions_Tiles_ITileAdaptiveChild__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.ITileAdaptiveChild[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::NotificationsExtensions.Tiles.ITileAdaptiveChild).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileAdaptiveChild__NotificationsExtensions_Tiles__ITileAdaptiveChild * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<NotificationsExtensions.Tiles.ITileAdaptiveChild>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_NotificationsExtensions_Tiles_ITileAdaptiveChild___Windows_Foundation_Collections__IIterator_A_NotificationsExtensions_Tiles_ITileAdaptiveChild_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileAdaptiveChild> Func__Collections_IIterator_1_NotificationsExtensions_Tiles_ITileAdaptiveChild___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Tiles_ITileAdaptiveChild_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Tiles_ITileAdaptiveChild_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileAdaptiveChild> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileAdaptiveChild>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileAdaptiveChild>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileAdaptiveChild>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Tiles.ITileAdaptiveChild>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileAdaptiveChild__NotificationsExtensions_Tiles__ITileAdaptiveChild *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.ITileAdaptiveChild Func_NotificationsExtensions_Tiles_ITileAdaptiveChild__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl**);
			global::NotificationsExtensions.Tiles.ITileAdaptiveChild __value__retval = default(global::NotificationsExtensions.Tiles.ITileAdaptiveChild);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Tiles.ITileAdaptiveChild)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Tiles.ITileAdaptiveChild).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Tiles.ITileAdaptiveChild>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Tiles_ITileAdaptiveChild__NotificationsExtensions_Tiles__ITileAdaptiveChild * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_NotificationsExtensions_Tiles_ITileAdaptiveChild__uint__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.ITileAdaptiveChild[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Tiles.ITileAdaptiveChild__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileAdaptiveChild__NotificationsExtensions_Tiles__ITileAdaptiveChild * items
						items[mcgIdx] = (global::NotificationsExtensions.Tiles.ITileAdaptiveChild)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Tiles.ITileAdaptiveChild).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileAdaptiveChild__NotificationsExtensions_Tiles__ITileAdaptiveChild * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.ITileSubgroupChild>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupChild__NotificationsExtensions_Tiles__ITileSubgroupChild *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.ITileSubgroupChild Func_uint__NotificationsExtensions_Tiles_ITileSubgroupChild__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl**);
			global::NotificationsExtensions.Tiles.ITileSubgroupChild __value__retval = default(global::NotificationsExtensions.Tiles.ITileSubgroupChild);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Tiles.ITileSubgroupChild)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Tiles.ITileSubgroupChild).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.ITileSubgroupChild>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_NotificationsExtensions_Tiles_ITileSubgroupChild___Windows_Foundation_Collections__IVectorView_A_NotificationsExtensions_Tiles_ITileSubgroupChild_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.ITileSubgroupChild> Func__IReadOnlyList_1_NotificationsExtensions_Tiles_ITileSubgroupChild___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_NotificationsExtensions_Tiles_ITileSubgroupChild_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_NotificationsExtensions_Tiles_ITileSubgroupChild_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.ITileSubgroupChild> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.ITileSubgroupChild>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.ITileSubgroupChild>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.ITileSubgroupChild>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.ITileSubgroupChild>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupChild__NotificationsExtensions_Tiles__ITileSubgroupChild *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_NotificationsExtensions_Tiles_ITileSubgroupChild__out_uint__bool__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.ITileSubgroupChild value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Tiles.ITileSubgroupChild).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.ITileSubgroupChild>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupChild__NotificationsExtensions_Tiles__ITileSubgroupChild *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__NotificationsExtensions_Tiles_ITileSubgroupChild__(
					global::System.__ComObject __this, 
					uint index, 
					global::NotificationsExtensions.Tiles.ITileSubgroupChild value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Tiles.ITileSubgroupChild).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.ITileSubgroupChild>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupChild__NotificationsExtensions_Tiles__ITileSubgroupChild *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_NotificationsExtensions_Tiles_ITileSubgroupChild__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.ITileSubgroupChild value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Tiles.ITileSubgroupChild).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.ITileSubgroupChild>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Tiles_ITileSubgroupChild__NotificationsExtensions_Tiles__ITileSubgroupChild * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_NotificationsExtensions_Tiles_ITileSubgroupChild__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::NotificationsExtensions.Tiles.ITileSubgroupChild[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupChild__NotificationsExtensions_Tiles__ITileSubgroupChild * items
						items[mcgIdx] = (global::NotificationsExtensions.Tiles.ITileSubgroupChild)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Tiles.ITileSubgroupChild).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupChild__NotificationsExtensions_Tiles__ITileSubgroupChild * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.ITileSubgroupChild>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Tiles_ITileSubgroupChild__NotificationsExtensions_Tiles__ITileSubgroupChild * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_NotificationsExtensions_Tiles_ITileSubgroupChild__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.ITileSubgroupChild[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::NotificationsExtensions.Tiles.ITileSubgroupChild).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupChild__NotificationsExtensions_Tiles__ITileSubgroupChild * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<NotificationsExtensions.Tiles.ITileSubgroupChild>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_NotificationsExtensions_Tiles_ITileSubgroupChild___Windows_Foundation_Collections__IIterator_A_NotificationsExtensions_Tiles_ITileSubgroupChild_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileSubgroupChild> Func__Collections_IIterator_1_NotificationsExtensions_Tiles_ITileSubgroupChild___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Tiles_ITileSubgroupChild_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Tiles_ITileSubgroupChild_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileSubgroupChild> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileSubgroupChild>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileSubgroupChild>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileSubgroupChild>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Tiles.ITileSubgroupChild>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupChild__NotificationsExtensions_Tiles__ITileSubgroupChild *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.ITileSubgroupChild Func_NotificationsExtensions_Tiles_ITileSubgroupChild__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl**);
			global::NotificationsExtensions.Tiles.ITileSubgroupChild __value__retval = default(global::NotificationsExtensions.Tiles.ITileSubgroupChild);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Tiles.ITileSubgroupChild)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Tiles.ITileSubgroupChild).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Tiles.ITileSubgroupChild>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Tiles_ITileSubgroupChild__NotificationsExtensions_Tiles__ITileSubgroupChild * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_NotificationsExtensions_Tiles_ITileSubgroupChild__uint__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.ITileSubgroupChild[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Tiles.ITileSubgroupChild__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupChild__NotificationsExtensions_Tiles__ITileSubgroupChild * items
						items[mcgIdx] = (global::NotificationsExtensions.Tiles.ITileSubgroupChild)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Tiles.ITileSubgroupChild).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupChild__NotificationsExtensions_Tiles__ITileSubgroupChild * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.TileSubgroup>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileSubgroup__NotificationsExtensions_Tiles__TileSubgroup *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.TileSubgroup Func_uint__NotificationsExtensions_Tiles_TileSubgroup__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl**);
			global::NotificationsExtensions.Tiles.TileSubgroup __value__retval = default(global::NotificationsExtensions.Tiles.TileSubgroup);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Tiles.TileSubgroup)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass).TypeHandle, 
									typeof(global::NotificationsExtensions.Tiles.TileSubgroup).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.TileSubgroup>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_NotificationsExtensions_Tiles_TileSubgroup___Windows_Foundation_Collections__IVectorView_A_NotificationsExtensions_Tiles_TileSubgroup_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.TileSubgroup> Func__IReadOnlyList_1_NotificationsExtensions_Tiles_TileSubgroup___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_NotificationsExtensions_Tiles_TileSubgroup_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_NotificationsExtensions_Tiles_TileSubgroup_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.TileSubgroup> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.TileSubgroup>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.TileSubgroup>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.TileSubgroup>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.TileSubgroup>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileSubgroup__NotificationsExtensions_Tiles__TileSubgroup *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_NotificationsExtensions_Tiles_TileSubgroup__out_uint__bool__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.TileSubgroup value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.TileSubgroup>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileSubgroup__NotificationsExtensions_Tiles__TileSubgroup *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__NotificationsExtensions_Tiles_TileSubgroup__(
					global::System.__ComObject __this, 
					uint index, 
					global::NotificationsExtensions.Tiles.TileSubgroup value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.TileSubgroup>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileSubgroup__NotificationsExtensions_Tiles__TileSubgroup *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_NotificationsExtensions_Tiles_TileSubgroup__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.TileSubgroup value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.TileSubgroup>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Tiles_TileSubgroup__NotificationsExtensions_Tiles__TileSubgroup * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_NotificationsExtensions_Tiles_TileSubgroup__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::NotificationsExtensions.Tiles.TileSubgroup[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileSubgroup__NotificationsExtensions_Tiles__TileSubgroup * items
						items[mcgIdx] = (global::NotificationsExtensions.Tiles.TileSubgroup)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass).TypeHandle, 
											typeof(global::NotificationsExtensions.Tiles.TileSubgroup).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileSubgroup__NotificationsExtensions_Tiles__TileSubgroup * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.TileSubgroup>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Tiles_TileSubgroup__NotificationsExtensions_Tiles__TileSubgroup * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_NotificationsExtensions_Tiles_TileSubgroup__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.TileSubgroup[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileSubgroup__NotificationsExtensions_Tiles__TileSubgroup * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<NotificationsExtensions.Tiles.TileSubgroup>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_NotificationsExtensions_Tiles_TileSubgroup___Windows_Foundation_Collections__IIterator_A_NotificationsExtensions_Tiles_TileSubgroup_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.TileSubgroup> Func__Collections_IIterator_1_NotificationsExtensions_Tiles_TileSubgroup___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Tiles_TileSubgroup_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Tiles_TileSubgroup_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.TileSubgroup> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.TileSubgroup>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.TileSubgroup>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.TileSubgroup>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Tiles.TileSubgroup>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileSubgroup__NotificationsExtensions_Tiles__TileSubgroup *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.TileSubgroup Func_NotificationsExtensions_Tiles_TileSubgroup__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl**);
			global::NotificationsExtensions.Tiles.TileSubgroup __value__retval = default(global::NotificationsExtensions.Tiles.TileSubgroup);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Tiles.TileSubgroup)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass).TypeHandle, 
									typeof(global::NotificationsExtensions.Tiles.TileSubgroup).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Tiles.TileSubgroup>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Tiles_TileSubgroup__NotificationsExtensions_Tiles__TileSubgroup * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_NotificationsExtensions_Tiles_TileSubgroup__uint__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.TileSubgroup[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileSubgroup__NotificationsExtensions_Tiles__TileSubgroup * items
						items[mcgIdx] = (global::NotificationsExtensions.Tiles.TileSubgroup)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass).TypeHandle, 
											typeof(global::NotificationsExtensions.Tiles.TileSubgroup).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileSubgroup__NotificationsExtensions_Tiles__TileSubgroup * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.TileImageSource>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileImageSource__NotificationsExtensions_Tiles__TileImageSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.TileImageSource Func_uint__NotificationsExtensions_Tiles_TileImageSource__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**);
			global::NotificationsExtensions.Tiles.TileImageSource __value__retval = default(global::NotificationsExtensions.Tiles.TileImageSource);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Tiles.TileImageSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass).TypeHandle, 
									typeof(global::NotificationsExtensions.Tiles.TileImageSource).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.TileImageSource>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_NotificationsExtensions_Tiles_TileImageSource___Windows_Foundation_Collections__IVectorView_A_NotificationsExtensions_Tiles_TileImageSource_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.TileImageSource> Func__IReadOnlyList_1_NotificationsExtensions_Tiles_TileImageSource___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_NotificationsExtensions_Tiles_TileImageSource_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_NotificationsExtensions_Tiles_TileImageSource_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.TileImageSource> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.TileImageSource>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.TileImageSource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::NotificationsExtensions.Tiles.TileImageSource>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.TileImageSource>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileImageSource__NotificationsExtensions_Tiles__TileImageSource *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_NotificationsExtensions_Tiles_TileImageSource__out_uint__bool__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.TileImageSource value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.TileImageSource>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileImageSource__NotificationsExtensions_Tiles__TileImageSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__NotificationsExtensions_Tiles_TileImageSource__(
					global::System.__ComObject __this, 
					uint index, 
					global::NotificationsExtensions.Tiles.TileImageSource value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.TileImageSource>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileImageSource__NotificationsExtensions_Tiles__TileImageSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_NotificationsExtensions_Tiles_TileImageSource__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.TileImageSource value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.TileImageSource>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Tiles_TileImageSource__NotificationsExtensions_Tiles__TileImageSource * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_NotificationsExtensions_Tiles_TileImageSource__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::NotificationsExtensions.Tiles.TileImageSource[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileImageSource__NotificationsExtensions_Tiles__TileImageSource * items
						items[mcgIdx] = (global::NotificationsExtensions.Tiles.TileImageSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass).TypeHandle, 
											typeof(global::NotificationsExtensions.Tiles.TileImageSource).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileImageSource__NotificationsExtensions_Tiles__TileImageSource * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<NotificationsExtensions.Tiles.TileImageSource>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Tiles_TileImageSource__NotificationsExtensions_Tiles__TileImageSource * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_NotificationsExtensions_Tiles_TileImageSource__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.TileImageSource[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileImageSource__NotificationsExtensions_Tiles__TileImageSource * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<NotificationsExtensions.Tiles.TileImageSource>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_NotificationsExtensions_Tiles_TileImageSource___Windows_Foundation_Collections__IIterator_A_NotificationsExtensions_Tiles_TileImageSource_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.TileImageSource> Func__Collections_IIterator_1_NotificationsExtensions_Tiles_TileImageSource___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Tiles_TileImageSource_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Tiles_TileImageSource_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.TileImageSource> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.TileImageSource>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.TileImageSource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.TileImageSource>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Tiles.TileImageSource>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileImageSource__NotificationsExtensions_Tiles__TileImageSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.TileImageSource Func_NotificationsExtensions_Tiles_TileImageSource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**);
			global::NotificationsExtensions.Tiles.TileImageSource __value__retval = default(global::NotificationsExtensions.Tiles.TileImageSource);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Tiles.TileImageSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass).TypeHandle, 
									typeof(global::NotificationsExtensions.Tiles.TileImageSource).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Tiles.TileImageSource>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Tiles_TileImageSource__NotificationsExtensions_Tiles__TileImageSource * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_NotificationsExtensions_Tiles_TileImageSource__uint__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.TileImageSource[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileImageSource__NotificationsExtensions_Tiles__TileImageSource * items
						items[mcgIdx] = (global::NotificationsExtensions.Tiles.TileImageSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass).TypeHandle, 
											typeof(global::NotificationsExtensions.Tiles.TileImageSource).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileImageSource__NotificationsExtensions_Tiles__TileImageSource * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_IntPtr__out_IntPtr__IntPtr__(
					global::System.__ComObject __this, 
					global::System.IntPtr outer, 
					out global::System.IntPtr inner, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_inner;
			global::System.IntPtr unsafe_instance__retval;
			global::System.IntPtr instance__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								outer, 
								&(unsafe_inner), 
								&(unsafe_instance__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			instance__retval = unsafe_instance__retval;
			inner = unsafe_inner;
			// Return
			return instance__retval;
		}

		// Signature, Windows.UI.Xaml.IApplicationStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Application__Windows_UI_Xaml__Application *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Application Func_UI_Xaml_Application__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IApplication__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IApplication__Impl.Vtbl**);
			global::Windows.UI.Xaml.Application value__retval = default(global::Windows.UI.Xaml.Application);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Application)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IApplication).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Application).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.ApplicationInitializationCallback.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ApplicationInitializationCallbackParams__Windows_UI_Xaml__ApplicationInitializationCallbackParams *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_ApplicationInitializationCallbackParams__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ApplicationInitializationCallbackParams p, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IApplicationInitializationCallbackParams__Impl.Vtbl** unsafe_p = default(global::Windows.UI.Xaml.IApplicationInitializationCallbackParams__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_p = (global::Windows.UI.Xaml.IApplicationInitializationCallbackParams__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									p, 
									typeof(global::Windows.UI.Xaml.IApplicationInitializationCallbackParams).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_p
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_p)));
				global::System.GC.KeepAlive(p);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationStatics.Start, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_ApplicationInitializationCallback__Windows_UI_Xaml__ApplicationInitializationCallback *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_ApplicationInitializationCallback__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ApplicationInitializationCallback callback, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Vtbl** unsafe_callback = default(global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_callback = (global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									callback, 
									typeof(global::Windows.UI.Xaml.ApplicationInitializationCallback).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget0>(global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_callback
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_callback)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationStatics.LoadComponent, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Primitives_ComponentResourceLocation__Windows_UI_Xaml_Controls_Primitives__ComponentResourceLocation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Uri__int(
					global::System.__ComObject __this, 
					object component, 
					global::System.Uri resourceLocator, 
					int componentResourceLocation, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_component = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_resourceLocator = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_component = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(component);
				if (resourceLocator != null)
					unsafe_resourceLocator = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(resourceLocator);
				else
					unsafe_resourceLocator = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_component, 
									unsafe_resourceLocator, 
									componentResourceLocation
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_component)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_resourceLocator)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.get_Resources, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ResourceDictionary__Windows_UI_Xaml__ResourceDictionary *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ResourceDictionary Func_UI_Xaml_ResourceDictionary__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**);
			global::Windows.UI.Xaml.ResourceDictionary value__retval = default(global::Windows.UI.Xaml.ResourceDictionary);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.ResourceDictionary)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IResourceDictionary).TypeHandle, 
									typeof(global::Windows.UI.Xaml.ResourceDictionary).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.put_Resources, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ResourceDictionary__Windows_UI_Xaml__ResourceDictionary *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_ResourceDictionary__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ResourceDictionary value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IResourceDictionary).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.get_RequestedTheme, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_ApplicationTheme__Windows_UI_Xaml__ApplicationTheme, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ApplicationTheme Func_UI_Xaml_ApplicationTheme__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ApplicationTheme unsafe_value__retval;
			global::Windows.UI.Xaml.ApplicationTheme value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IApplication.put_RequestedTheme, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_ApplicationTheme__Windows_UI_Xaml__ApplicationTheme, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int(
					global::System.__ComObject __this, 
					int value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.UnhandledExceptionEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UnhandledExceptionEventArgs__Windows_UI_Xaml__UnhandledExceptionEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_UnhandledExceptionEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.UnhandledExceptionEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IUnhandledExceptionEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IUnhandledExceptionEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.IUnhandledExceptionEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IUnhandledExceptionEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.add_UnhandledException, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_UnhandledExceptionEventHandler__Windows_UI_Xaml__UnhandledExceptionEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_UnhandledExceptionEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UnhandledExceptionEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.UnhandledExceptionEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget1>(global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.remove_UnhandledException, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.SuspendingEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_SuspendingEventArgs__Windows_ApplicationModel__SuspendingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__ApplicationModel_SuspendingEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.ApplicationModel.SuspendingEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.ApplicationModel.ISuspendingEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.ApplicationModel.ISuspendingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.ApplicationModel.ISuspendingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.ApplicationModel.ISuspendingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.add_Suspending, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_SuspendingEventHandler__Windows_UI_Xaml__SuspendingEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_SuspendingEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.SuspendingEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.SuspendingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget2>(global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.add_Resuming, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_object___Windows_Foundation__EventHandler_A_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_object__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<object> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_System_Object_V___Impl.Vtbl** unsafe_value = default(global::System.EventHandler_A_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.EventHandler_A_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::System.EventHandler<object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget3>(global::System.EventHandler_A_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IDependencyObject.get_Dispatcher, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_CoreDispatcher__Windows_UI_Core__CoreDispatcher *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.CoreDispatcher Func_UI_Core_CoreDispatcher__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.ICoreDispatcher__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Core.ICoreDispatcher__Impl.Vtbl**);
			global::Windows.UI.Core.CoreDispatcher value__retval = default(global::Windows.UI.Core.CoreDispatcher);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Core.CoreDispatcher)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Core.ICoreDispatcher).TypeHandle, 
									typeof(global::Windows.UI.Core.CoreDispatcher).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Core.ICoreDispatcher.RunAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Core_CoreDispatcherPriority__Windows_UI_Core__CoreDispatcherPriority, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Core_DispatchedHandler__Windows_UI_Core__DispatchedHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func_intUI_Core_DispatchedHandler___IAsyncAction__(
					global::System.__ComObject __this, 
					int priority, 
					global::Windows.UI.Core.DispatchedHandler agileCallback, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl** unsafe_agileCallback = default(global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_asyncAction__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction asyncAction__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_agileCallback = (global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									agileCallback, 
									typeof(global::Windows.UI.Core.DispatchedHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget4>(global::Windows.UI.Core.DispatchedHandler__Impl.Invoke)
								);
				unsafe_asyncAction__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									priority, 
									unsafe_agileCallback, 
									&(unsafe_asyncAction__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				asyncAction__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_asyncAction__retval), 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Return
				return asyncAction__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_agileCallback)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncAction__retval)));
			}
		}

		// Signature, Windows.UI.Core.ICoreDispatcherWithTaskPriority.get_CurrentPriority, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Core_CoreDispatcherPriority__Windows_UI_Core__CoreDispatcherPriority, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.CoreDispatcherPriority Func_UI_Core_CoreDispatcherPriority__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.CoreDispatcherPriority unsafe_value__retval;
			global::Windows.UI.Core.CoreDispatcherPriority value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IResourceDictionary.get_Source, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Uri Func_Uri__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			global::System.Uri value__retval = default(global::System.Uri);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					value__retval = global::McgInterop.McgHelpers.WindowsFoundationUri2SystemUri(((global::System.__ComObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_value__retval), 
											typeof(global::Windows.Foundation.IUriRuntimeClass).TypeHandle
										)));
				else
					value__retval = null;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IResourceDictionary.put_Source, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Uri__(
					global::System.__ComObject __this, 
					global::System.Uri value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (value != null)
					unsafe_value = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(value);
				else
					unsafe_value = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IResourceDictionary.get_MergedDictionaries, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_UI_Xaml_ResourceDictionary___Windows_Foundation_Collections__IVector_A_Windows_UI_Xaml_ResourceDictionary_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<global::Windows.UI.Xaml.ResourceDictionary> Func__IList_1_UI_Xaml_ResourceDictionary___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_ResourceDictionary_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_ResourceDictionary_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.ResourceDictionary> value__retval = default(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.ResourceDictionary>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IList<global::Windows.UI.Xaml.ResourceDictionary>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.ResourceDictionary>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IResourceDictionary.get_ThemeDictionaries, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IDictionary_2_object__object___Windows_Foundation_Collections__IMap_A_object_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IDictionary<object, object> Func__IDictionary_2_object__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.IDictionary<object, object> value__retval = default(global::System.Collections.Generic.IDictionary<object, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IDictionary<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IDictionary<object, object>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.ResourceDictionary>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ResourceDictionary__Windows_UI_Xaml__ResourceDictionary *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ResourceDictionary Func_uint__UI_Xaml_ResourceDictionary__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**);
			global::Windows.UI.Xaml.ResourceDictionary __value__retval = default(global::Windows.UI.Xaml.ResourceDictionary);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.ResourceDictionary)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IResourceDictionary).TypeHandle, 
									typeof(global::Windows.UI.Xaml.ResourceDictionary).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.ResourceDictionary>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_ResourceDictionary___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_ResourceDictionary_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.ResourceDictionary> Func__IReadOnlyList_1_UI_Xaml_ResourceDictionary___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_ResourceDictionary_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_ResourceDictionary_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.ResourceDictionary> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.ResourceDictionary>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.ResourceDictionary>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.ResourceDictionary>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.ResourceDictionary>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ResourceDictionary__Windows_UI_Xaml__ResourceDictionary *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_ResourceDictionary__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ResourceDictionary value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IResourceDictionary).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.ResourceDictionary>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ResourceDictionary__Windows_UI_Xaml__ResourceDictionary *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_ResourceDictionary__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.ResourceDictionary value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IResourceDictionary).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.ResourceDictionary>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_ResourceDictionary__Windows_UI_Xaml__ResourceDictionary * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_ResourceDictionary__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.ResourceDictionary[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ResourceDictionary__Windows_UI_Xaml__ResourceDictionary * items
						items[mcgIdx] = (global::Windows.UI.Xaml.ResourceDictionary)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IResourceDictionary).TypeHandle, 
											typeof(global::Windows.UI.Xaml.ResourceDictionary).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ResourceDictionary__Windows_UI_Xaml__ResourceDictionary * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.ResourceDictionary>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_ResourceDictionary__Windows_UI_Xaml__ResourceDictionary * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_ResourceDictionary__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ResourceDictionary[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.IResourceDictionary).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ResourceDictionary__Windows_UI_Xaml__ResourceDictionary * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.ResourceDictionary>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_ResourceDictionary___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_ResourceDictionary_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.ResourceDictionary> Func__Collections_IIterator_1_UI_Xaml_ResourceDictionary___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_ResourceDictionary_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_ResourceDictionary_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.ResourceDictionary> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.ResourceDictionary>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.ResourceDictionary>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.ResourceDictionary>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.ResourceDictionary>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_ResourceDictionary__Windows_UI_Xaml__ResourceDictionary * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_ResourceDictionary__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ResourceDictionary[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ResourceDictionary__Windows_UI_Xaml__ResourceDictionary * items
						items[mcgIdx] = (global::Windows.UI.Xaml.ResourceDictionary)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IResourceDictionary).TypeHandle, 
											typeof(global::Windows.UI.Xaml.ResourceDictionary).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ResourceDictionary__Windows_UI_Xaml__ResourceDictionary * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IDictionary<System.Object,System.Object>.Lookup, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_object__object__(
					global::System.__ComObject __this, 
					object key, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_key = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe___value__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object __value__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_key = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(key);
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_key, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe___value__retval));
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_key)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IDictionary<System.Object,System.Object>.HasKey, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_object__bool__(
					global::System.__ComObject __this, 
					object key, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_key = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_key = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(key);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_key, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_key)));
			}
		}

		// Signature, System.Collections.Generic.IDictionary<System.Object,System.Object>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_object__object___Windows_Foundation_Collections__IMapView_A_object_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyDictionary<object, object> Func__IReadOnlyDictionary_2_object__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyDictionary<object, object> __value__retval = default(global::System.Collections.Generic.IReadOnlyDictionary<object, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyDictionary<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<object, object>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IDictionary<System.Object,System.Object>.Insert, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_object__object__bool__(
					global::System.__ComObject __this, 
					object key, 
					object value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_key = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_key = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(key);
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_key, 
									unsafe_value, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_key)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, System.Collections.Generic.IDictionary<System.Object,System.Object>.Remove, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__(
					global::System.__ComObject __this, 
					object key, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_key = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_key = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(key);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_key
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_key)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_System_Collections_Generic_KeyValuePair_2_object__object____Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Collections_IKeyValuePair_A_object_j_object_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<object, object>> Func__Collections_IIterator_1__KeyValuePair_2_object__object__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<object, object>> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<object, object>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<object, object>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<object, object>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<object, object> Func__KeyValuePair_2_object__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<object, object> __value__retval = default(global::System.Collections.Generic.KeyValuePair<object, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<object, object> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<object, object>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<object, object>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__KeyValuePair_2_object__object___uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<object, object>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<object, object> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<object, object>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<object, object>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyDictionary<System.Object,System.Object>.Split, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_object__object___Windows_Foundation_Collections__IMapView_A_object_j_object_V_ *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_object__object___Windows_Foundation_Collections__IMapView_A_object_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out__IReadOnlyDictionary_2_object__object___out__IReadOnlyDictionary_2_object__object___(
					global::System.__ComObject __this, 
					out global::System.Collections.Generic.IReadOnlyDictionary<object, object> first, 
					out global::System.Collections.Generic.IReadOnlyDictionary<object, object> second, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl** unsafe_first = default(global::System.Collections.Generic.IReadOnlyDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl** unsafe_second = default(global::System.Collections.Generic.IReadOnlyDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_first = null;
				unsafe_second = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_first), 
									&(unsafe_second)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				second = (global::System.Collections.Generic.IReadOnlyDictionary<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_second), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<object, object>).TypeHandle
								);
				first = (global::System.Collections.Generic.IReadOnlyDictionary<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_first), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<object, object>).TypeHandle
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_first)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_second)));
			}
		}

		// Signature, Windows.UI.Xaml.IUnhandledExceptionEventArgs.get_Exception, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTHResultMarshaller] System_Exception__Windows_Foundation__HResult, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Exception Func_Exception__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Exception__Impl.UnsafeType unsafe_value__retval = default(global::System.Exception__Impl.UnsafeType);
			global::System.Exception value__retval = default(global::System.Exception);
			int unsafe___return__;
			// Marshalling
			unsafe_value__retval = default(global::System.Exception__Impl.UnsafeType);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = global::System.Runtime.InteropServices.McgMarshal.GetExceptionForHR(
								unsafe_value__retval.Value, 
								true
							);
			// Return
			return value__retval;
		}

		// Signature, Windows.ApplicationModel.ISuspendingEventArgs.get_SuspendingOperation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_SuspendingOperation__Windows_ApplicationModel__SuspendingOperation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.SuspendingOperation Func_ApplicationModel_SuspendingOperation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.ISuspendingOperation__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.ISuspendingOperation__Impl.Vtbl**);
			global::Windows.ApplicationModel.SuspendingOperation value__retval = default(global::Windows.ApplicationModel.SuspendingOperation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.SuspendingOperation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.ISuspendingOperation).TypeHandle, 
									typeof(global::Windows.ApplicationModel.SuspendingOperation).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.ISuspendingOperation.GetDeferral, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_SuspendingDeferral__Windows_ApplicationModel__SuspendingDeferral *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.SuspendingDeferral Func_ApplicationModel_SuspendingDeferral__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.ISuspendingDeferral__Impl.Vtbl** unsafe_deferral__retval = default(global::Windows.ApplicationModel.ISuspendingDeferral__Impl.Vtbl**);
			global::Windows.ApplicationModel.SuspendingDeferral deferral__retval = default(global::Windows.ApplicationModel.SuspendingDeferral);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_deferral__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_deferral__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				deferral__retval = (global::Windows.ApplicationModel.SuspendingDeferral)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_deferral__retval), 
									typeof(global::Windows.ApplicationModel.ISuspendingDeferral).TypeHandle, 
									typeof(global::Windows.ApplicationModel.SuspendingDeferral).TypeHandle
								);
				// Return
				return deferral__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_deferral__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Activation_IActivatedEventArgs__Windows_ApplicationModel_Activation__IActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_IActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.IActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnLaunched, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_LaunchActivatedEventArgs__Windows_ApplicationModel_Activation__LaunchActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_LaunchActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.LaunchActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnFileActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_FileActivatedEventArgs__Windows_ApplicationModel_Activation__FileActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_FileActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.FileActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnSearchActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_SearchActivatedEventArgs__Windows_ApplicationModel_Activation__SearchActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_SearchActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.SearchActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnShareTargetActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_ShareTargetActivatedEventArgs__Windows_ApplicationModel_Activation__ShareTargetActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_ShareTargetActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnFileOpenPickerActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_FileOpenPickerActivatedEventArgs__Windows_ApplicationModel_Activation__FileOpenPickerActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_FileOpenPickerActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnFileSavePickerActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_FileSavePickerActivatedEventArgs__Windows_ApplicationModel_Activation__FileSavePickerActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_FileSavePickerActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnCachedFileUpdaterActivated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Activation_CachedFileUpdaterActivatedEventArgs__Windows_ApplicationModel_Activation__CachedFileUpdaterActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Activation_CachedFileUpdaterActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationOverrides.OnWindowCreated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_WindowCreatedEventArgs__Windows_UI_Xaml__WindowCreatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_WindowCreatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.WindowCreatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IWindowCreatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.IWindowCreatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_args = (global::Windows.UI.Xaml.IWindowCreatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.IWindowCreatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.ApplicationModel.Activation.IActivatedEventArgs.get_PreviousExecutionState, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_ApplicationModel_Activation_ApplicationExecutionState__Windows_ApplicationModel_Activation__ApplicationExecutionState, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Activation.ApplicationExecutionState Func_ApplicationModel_Activation_ApplicationExecutionState__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState unsafe_value__retval;
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.DependencyObject>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_DependencyObject___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_DependencyObject_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.DependencyObject> Func__Collections_IIterator_1_UI_Xaml_DependencyObject___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_DependencyObject_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_DependencyObject_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.DependencyObject> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.DependencyObject>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.DependencyObject>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.DependencyObject>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.DependencyObject>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyObject Func_UI_Xaml_DependencyObject__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyObject __value__retval = default(global::Windows.UI.Xaml.DependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.DependencyObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_DependencyObject__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * items
						items[mcgIdx] = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
											typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IDependencyObject>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IDependencyObject___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IDependencyObject_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject> Func__Collections_IIterator_1_UI_Xaml_IDependencyObject___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IDependencyObject_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IDependencyObject_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IDependencyObject>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IDependencyObject Func_UI_Xaml_IDependencyObject__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDependencyObject __value__retval = default(global::Windows.UI.Xaml.IDependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IDependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IDependencyObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IDependencyObject__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IDependencyObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IDependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IDependencyObject2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IDependencyObject2___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IDependencyObject2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject2> Func__Collections_IIterator_1_UI_Xaml_IDependencyObject2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IDependencyObject2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IDependencyObject2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IDependencyObject2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IDependencyObject2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IDependencyObject2 Func_UI_Xaml_IDependencyObject2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDependencyObject2 __value__retval = default(global::Windows.UI.Xaml.IDependencyObject2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IDependencyObject2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IDependencyObject2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IDependencyObject2__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IDependencyObject2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IDependencyObject2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IResourceDictionary>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IResourceDictionary___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IResourceDictionary_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IResourceDictionary> Func__Collections_IIterator_1_UI_Xaml_IResourceDictionary___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IResourceDictionary_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IResourceDictionary_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IResourceDictionary> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IResourceDictionary>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IResourceDictionary>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IResourceDictionary>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IResourceDictionary>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IResourceDictionary__Windows_UI_Xaml__IResourceDictionary *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IResourceDictionary Func_UI_Xaml_IResourceDictionary__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**);
			global::Windows.UI.Xaml.IResourceDictionary __value__retval = default(global::Windows.UI.Xaml.IResourceDictionary);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IResourceDictionary)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IResourceDictionary).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IResourceDictionary>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IResourceDictionary__Windows_UI_Xaml__IResourceDictionary * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IResourceDictionary__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IResourceDictionary[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IResourceDictionary__Windows_UI_Xaml__IResourceDictionary * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IResourceDictionary)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IResourceDictionary).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IResourceDictionary__Windows_UI_Xaml__IResourceDictionary * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<System.Collections.Generic.IDictionary<System.Object,System.Object>>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_System_Collections_Generic_IDictionary_2_object__object____Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Collections_IMap_A_object_j_object_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IDictionary<object, object>> Func__Collections_IIterator_1__IDictionary_2_object__object__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_IDictionary_A_System_Object_j_System_Object_V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_IDictionary_A_System_Object_j_System_Object_V__V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IDictionary<object, object>> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IDictionary<object, object>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IDictionary<object, object>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IDictionary<object, object>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IDictionary<System.Object,System.Object>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_IDictionary_2_object__object___Windows_Foundation_Collections__IMap_A_object_j_object_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__IDictionary_2_object__object___uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IDictionary<object, object>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.IDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.IDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.IDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.IDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IDictionary_2_object__object___Windows_Foundation_Collections__IMap_A_object_j_object_V_ * items
						items[mcgIdx] = (global::System.Collections.Generic.IDictionary<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::System.Collections.Generic.IDictionary<object, object>).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IDictionary_2_object__object___Windows_Foundation_Collections__IMap_A_object_j_object_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_System_Collections_Generic_IEnumerable_1_System_Collections_Generic_KeyValuePair_2_object__object_____Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Collections_IIterable_A_Windows_Foundation_Collections_IKeyValuePair_A_object_j_object_V__V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>> Func__Collections_IIterator_1__IEnumerable_1__KeyValuePair_2_object__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V__V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_System_Collections_Generic_KeyValuePair_2_object__object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IKeyValuePair_A_object_j_object_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>> Func__IEnumerable_1__KeyValuePair_2_object__object__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>> __value__retval = default(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_IEnumerable_1_System_Collections_Generic_KeyValuePair_2_object__object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IKeyValuePair_A_object_j_object_V__V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__IEnumerable_1__KeyValuePair_2_object__object__uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_System_Collections_Generic_KeyValuePair_2_object__object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IKeyValuePair_A_object_j_object_V__V_ * items
						items[mcgIdx] = (global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_System_Collections_Generic_KeyValuePair_2_object__object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IKeyValuePair_A_object_j_object_V__V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Media.IGeneralTransform.get_Inverse, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_GeneralTransform__Windows_UI_Xaml_Media__GeneralTransform *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.GeneralTransform Func_UI_Xaml_Media_GeneralTransform__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IGeneralTransform__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.IGeneralTransform__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.GeneralTransform value__retval = default(global::Windows.UI.Xaml.Media.GeneralTransform);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.GeneralTransform)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.IGeneralTransform).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.GeneralTransform).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Media.IGeneralTransformOverrides.TryTransformCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func__Point__out__Point__bool__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point inPoint, 
					out global::Windows.Foundation.Point outPoint, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Point unsafe_outPoint;
			bool returnValue__retval;
			sbyte unsafe_returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								inPoint, 
								&(unsafe_outPoint), 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval != 0;
			outPoint = unsafe_outPoint;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.UI.Xaml.Media.IGeneralTransformOverrides.TransformBoundsCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect Func__Rect___Rect__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect rect, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Rect unsafe_returnValue__retval;
			global::Windows.Foundation.Rect returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								rect, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.Transition>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Transition__Windows_UI_Xaml_Media_Animation__Transition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.Transition Func_uint__UI_Xaml_Media_Animation_Transition__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.Transition __value__retval = default(global::Windows.UI.Xaml.Media.Animation.Transition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Media.Animation.Transition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITransition).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Animation.Transition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.Transition>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Media_Animation_Transition___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Media_Animation_Transition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Media.Animation.Transition> Func__IReadOnlyList_1_UI_Xaml_Media_Animation_Transition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Media_Animation_Transition_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Media_Animation_Transition_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Media.Animation.Transition> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Media.Animation.Transition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Media.Animation.Transition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Media.Animation.Transition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.Transition>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Transition__Windows_UI_Xaml_Media_Animation__Transition *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Media_Animation_Transition__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.Transition value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITransition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.Transition>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Transition__Windows_UI_Xaml_Media_Animation__Transition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Media_Animation_Transition__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Media.Animation.Transition value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITransition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.Transition>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Transition__Windows_UI_Xaml_Media_Animation__Transition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_Animation_Transition__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.Transition value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITransition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.Transition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Media_Animation_Transition__Windows_UI_Xaml_Media_Animation__Transition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Media_Animation_Transition__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Media.Animation.Transition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Transition__Windows_UI_Xaml_Media_Animation__Transition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Media.Animation.Transition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Media.Animation.ITransition).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Media.Animation.Transition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Transition__Windows_UI_Xaml_Media_Animation__Transition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.Transition>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Media_Animation_Transition__Windows_UI_Xaml_Media_Animation__Transition * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Media_Animation_Transition__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.Transition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITransition).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Transition__Windows_UI_Xaml_Media_Animation__Transition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Media.Animation.Transition>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Media_Animation_Transition___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Media_Animation_Transition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.Transition> Func__Collections_IIterator_1_UI_Xaml_Media_Animation_Transition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Media_Animation_Transition_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Media_Animation_Transition_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.Transition> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.Transition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.Transition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.Transition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.Animation.Transition>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Transition__Windows_UI_Xaml_Media_Animation__Transition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.Transition Func_UI_Xaml_Media_Animation_Transition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.Transition __value__retval = default(global::Windows.UI.Xaml.Media.Animation.Transition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Media.Animation.Transition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITransition).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Animation.Transition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.Animation.Transition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Media_Animation_Transition__Windows_UI_Xaml_Media_Animation__Transition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Media_Animation_Transition__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.Transition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Transition__Windows_UI_Xaml_Media_Animation__Transition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Media.Animation.Transition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Media.Animation.ITransition).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Media.Animation.Transition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Transition__Windows_UI_Xaml_Media_Animation__Transition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Media.Animation.ITransition>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Media_Animation_ITransition___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Media_Animation_ITransition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.ITransition> Func__Collections_IIterator_1_UI_Xaml_Media_Animation_ITransition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Media_Animation_ITransition_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Media_Animation_ITransition_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.ITransition> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.ITransition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.ITransition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.ITransition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.Animation.ITransition>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_ITransition__Windows_UI_Xaml_Media_Animation__ITransition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.ITransition Func_UI_Xaml_Media_Animation_ITransition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.ITransition __value__retval = default(global::Windows.UI.Xaml.Media.Animation.ITransition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Media.Animation.ITransition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITransition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.Animation.ITransition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Media_Animation_ITransition__Windows_UI_Xaml_Media_Animation__ITransition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Media_Animation_ITransition__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.ITransition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_ITransition__Windows_UI_Xaml_Media_Animation__ITransition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Media.Animation.ITransition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Media.Animation.ITransition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_ITransition__Windows_UI_Xaml_Media_Animation__ITransition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.DependencyObject>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyObject Func_uint__UI_Xaml_DependencyObject__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyObject __value__retval = default(global::Windows.UI.Xaml.DependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.DependencyObject>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_DependencyObject__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.DependencyObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_DependencyObject__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.DependencyObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * items
						items[mcgIdx] = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
											typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IDependencyObject Func_uint__UI_Xaml_IDependencyObject__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDependencyObject __value__retval = default(global::Windows.UI.Xaml.IDependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IDependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IDependencyObject__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IDependencyObject value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IDependencyObject__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IDependencyObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IDependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject__Windows_UI_Xaml__IDependencyObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IDependencyObject2 Func_uint__UI_Xaml_IDependencyObject2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDependencyObject2 __value__retval = default(global::Windows.UI.Xaml.IDependencyObject2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IDependencyObject2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IDependencyObject2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IDependencyObject2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IDependencyObject2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IDependencyObject2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IDependencyObject2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IDependencyObject2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IDependencyObject2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IDependencyObject2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IDependencyObject2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IDependencyObject2__Windows_UI_Xaml__IDependencyObject2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Media.Animation.ITransition>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_ITransition__Windows_UI_Xaml_Media_Animation__ITransition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.ITransition Func_uint__UI_Xaml_Media_Animation_ITransition__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.ITransition __value__retval = default(global::Windows.UI.Xaml.Media.Animation.ITransition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Media.Animation.ITransition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITransition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Media.Animation.ITransition>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_ITransition__Windows_UI_Xaml_Media_Animation__ITransition *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Media_Animation_ITransition__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.ITransition value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITransition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Media.Animation.ITransition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Media_Animation_ITransition__Windows_UI_Xaml_Media_Animation__ITransition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Media_Animation_ITransition__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Media.Animation.ITransition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Media.Animation.ITransition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_ITransition__Windows_UI_Xaml_Media_Animation__ITransition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Media.Animation.ITransition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Media.Animation.ITransition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_ITransition__Windows_UI_Xaml_Media_Animation__ITransition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElementStatics.get_KeyDownEvent, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_RoutedEvent__Windows_UI_Xaml__RoutedEvent *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.RoutedEvent Func_UI_Xaml_RoutedEvent__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IRoutedEvent__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IRoutedEvent__Impl.Vtbl**);
			global::Windows.UI.Xaml.RoutedEvent value__retval = default(global::Windows.UI.Xaml.RoutedEvent);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.RoutedEvent)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IRoutedEvent).TypeHandle, 
									typeof(global::Windows.UI.Xaml.RoutedEvent).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElementStatics.get_AllowDropProperty, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyProperty__Windows_UI_Xaml__DependencyProperty *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyProperty Func_UI_Xaml_DependencyProperty__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyProperty__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IDependencyProperty__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyProperty value__retval = default(global::Windows.UI.Xaml.DependencyProperty);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.DependencyProperty)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyProperty).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DependencyProperty).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IDependencyPropertyStatics.get_UnsetValue, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_object__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object value__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value__retval));
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.get_DesiredSize, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Size Func__Size__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Size unsafe_value__retval;
			global::Windows.Foundation.Size value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IUIElement.put_AllowDrop, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_bool__(
					global::System.__ComObject __this, 
					bool value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			sbyte unsafe_value;
			int unsafe___return__;
			// Marshalling
			unsafe_value = (value ? ((sbyte)1) : ((sbyte)0));
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IUIElement.get_Opacity, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static double Func_double__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			double unsafe_value__retval;
			double value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IUIElement.put_Opacity, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_double__(
					global::System.__ComObject __this, 
					double value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IUIElement.get_Clip, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_RectangleGeometry__Windows_UI_Xaml_Media__RectangleGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.RectangleGeometry Func_UI_Xaml_Media_RectangleGeometry__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IRectangleGeometry__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.IRectangleGeometry__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.RectangleGeometry value__retval = default(global::Windows.UI.Xaml.Media.RectangleGeometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.RectangleGeometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.IRectangleGeometry).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.RectangleGeometry).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.put_Clip, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_RectangleGeometry__Windows_UI_Xaml_Media__RectangleGeometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_RectangleGeometry__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.RectangleGeometry value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IRectangleGeometry__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.IRectangleGeometry__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.IRectangleGeometry__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.IRectangleGeometry).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.get_RenderTransform, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Transform__Windows_UI_Xaml_Media__Transform *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Transform Func_UI_Xaml_Media_Transform__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.ITransform__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.ITransform__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Transform value__retval = default(global::Windows.UI.Xaml.Media.Transform);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.Transform)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.ITransform).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Transform).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.put_RenderTransform, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Transform__Windows_UI_Xaml_Media__Transform *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_Transform__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Transform value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.ITransform__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.ITransform__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.ITransform__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.ITransform).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.get_Projection, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Projection__Windows_UI_Xaml_Media__Projection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Projection Func_UI_Xaml_Media_Projection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IProjection__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.IProjection__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Projection value__retval = default(global::Windows.UI.Xaml.Media.Projection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.Projection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.IProjection).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Projection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.put_Projection, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Projection__Windows_UI_Xaml_Media__Projection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_Projection__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Projection value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IProjection__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.IProjection__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.IProjection__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.IProjection).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.get_RenderTransformOrigin, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Point Func__Point__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Point unsafe_value__retval;
			global::Windows.Foundation.Point value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IUIElement.put_RenderTransformOrigin, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Point__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IUIElement.get_Visibility, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Visibility__Windows_UI_Xaml__Visibility, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Visibility Func_UI_Xaml_Visibility__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Visibility unsafe_value__retval;
			global::Windows.UI.Xaml.Visibility value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IUIElement.get_Transitions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_TransitionCollection__Windows_UI_Xaml_Media_Animation__TransitionCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.TransitionCollection Func_UI_Xaml_Media_Animation_TransitionCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Media_Animation_Transition_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Media_Animation_Transition_V___Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.TransitionCollection value__retval = default(global::Windows.UI.Xaml.Media.Animation.TransitionCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.Animation.TransitionCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Transition>).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Animation.TransitionCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.put_Transitions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_TransitionCollection__Windows_UI_Xaml_Media_Animation__TransitionCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_Animation_TransitionCollection__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.TransitionCollection value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Media_Animation_Transition_V___Impl.Vtbl** unsafe_value = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Media_Animation_Transition_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Media_Animation_Transition_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Transition>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.get_CacheMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_CacheMode__Windows_UI_Xaml_Media__CacheMode *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.CacheMode Func_UI_Xaml_Media_CacheMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.ICacheMode__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.ICacheMode__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.CacheMode value__retval = default(global::Windows.UI.Xaml.Media.CacheMode);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.CacheMode)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.ICacheMode).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.CacheMode).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.put_CacheMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_CacheMode__Windows_UI_Xaml_Media__CacheMode *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_CacheMode__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.CacheMode value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.ICacheMode__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.ICacheMode__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.ICacheMode__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.ICacheMode).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.get_ManipulationMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Input_ManipulationModes__Windows_UI_Xaml_Input__ManipulationModes, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationModes Func_UI_Xaml_Input_ManipulationModes__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationModes unsafe_value__retval;
			global::Windows.UI.Xaml.Input.ManipulationModes value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IUIElement.put_ManipulationMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Input_ManipulationModes__Windows_UI_Xaml_Input__ManipulationModes, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_ManipulationModes__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationModes value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IUIElement.get_PointerCaptures, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Input_Pointer___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Input_Pointer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Input.Pointer> Func__IReadOnlyList_1_UI_Xaml_Input_Pointer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Input_Pointer_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Input_Pointer_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Input.Pointer> value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Input.Pointer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Input.Pointer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Input.Pointer>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.KeyEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_KeyRoutedEventArgs__Windows_UI_Xaml_Input__KeyRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_KeyRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_KeyUp, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_KeyEventHandler__Windows_UI_Xaml_Input__KeyEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_KeyEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.KeyEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.KeyEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget5>(global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.RoutedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_RoutedEventArgs__Windows_UI_Xaml__RoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_RoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.RoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_GotFocus, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_RoutedEventHandler__Windows_UI_Xaml__RoutedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_RoutedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.RoutedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.RoutedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget6>(global::Windows.UI.Xaml.RoutedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.DragEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DragEventArgs__Windows_UI_Xaml__DragEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_DragEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.DragEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IDragEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_DragEnter, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_DragEventHandler__Windows_UI_Xaml__DragEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_DragEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DragEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.DragEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget7>(global::Windows.UI.Xaml.DragEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.PointerEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_PointerRoutedEventArgs__Windows_UI_Xaml_Input__PointerRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_PointerRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_PointerPressed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_PointerEventHandler__Windows_UI_Xaml_Input__PointerEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_PointerEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.PointerEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.PointerEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget8>(global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.TappedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_TappedRoutedEventArgs__Windows_UI_Xaml_Input__TappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_TappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_Tapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_TappedEventHandler__Windows_UI_Xaml_Input__TappedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_TappedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.TappedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.TappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget9>(global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.DoubleTappedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_DoubleTappedRoutedEventArgs__Windows_UI_Xaml_Input__DoubleTappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_DoubleTappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_DoubleTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_DoubleTappedEventHandler__Windows_UI_Xaml_Input__DoubleTappedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_DoubleTappedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.DoubleTappedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget10>(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.HoldingEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_HoldingRoutedEventArgs__Windows_UI_Xaml_Input__HoldingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_HoldingRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_Holding, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_HoldingEventHandler__Windows_UI_Xaml_Input__HoldingEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_HoldingEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.HoldingEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.HoldingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget11>(global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.RightTappedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_RightTappedRoutedEventArgs__Windows_UI_Xaml_Input__RightTappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_RightTappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_RightTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_RightTappedEventHandler__Windows_UI_Xaml_Input__RightTappedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_RightTappedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.RightTappedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.RightTappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget12>(global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.ManipulationStartingEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationStartingRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationStartingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_ManipulationStartingRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_ManipulationStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationStartingEventHandler__Windows_UI_Xaml_Input__ManipulationStartingEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_ManipulationStartingEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget13>(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationInertiaStartingRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationInertiaStartingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_ManipulationInertiaStartingRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_ManipulationInertiaStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationInertiaStartingEventHandler__Windows_UI_Xaml_Input__ManipulationInertiaStartingEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_ManipulationInertiaStartingEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget14>(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.ManipulationStartedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationStartedRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationStartedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_ManipulationStartedRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_ManipulationStarted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationStartedEventHandler__Windows_UI_Xaml_Input__ManipulationStartedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_ManipulationStartedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget15>(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.ManipulationDeltaEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationDeltaRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationDeltaRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_ManipulationDeltaRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_ManipulationDelta, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationDeltaEventHandler__Windows_UI_Xaml_Input__ManipulationDeltaEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_ManipulationDeltaEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget16>(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.ManipulationCompletedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationCompletedRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationCompletedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Input_ManipulationCompletedRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_ManipulationCompleted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationCompletedEventHandler__Windows_UI_Xaml_Input__ManipulationCompletedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_ManipulationCompletedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget17>(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Media.IGeometryStatics.get_Empty, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Geometry__Windows_UI_Xaml_Media__Geometry *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Geometry Func_UI_Xaml_Media_Geometry__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IGeometry__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.IGeometry__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Geometry value__retval = default(global::Windows.UI.Xaml.Media.Geometry);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.Geometry)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.IGeometry).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Geometry).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Media.IGeometry.get_Bounds, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect Func__Rect__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Rect unsafe_value__retval;
			global::Windows.Foundation.Rect value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Media.IRectangleGeometry.put_Rect, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Rect__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Input.Pointer>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_Pointer__Windows_UI_Xaml_Input__Pointer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.Pointer Func_uint__UI_Xaml_Input_Pointer__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.Pointer __value__retval = default(global::Windows.UI.Xaml.Input.Pointer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.Pointer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.IPointer).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Input.Pointer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Input.Pointer>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_Pointer__Windows_UI_Xaml_Input__Pointer *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Input_Pointer__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.Pointer value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.IPointer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Input.Pointer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Input_Pointer__Windows_UI_Xaml_Input__Pointer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Input_Pointer__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Input.Pointer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_Pointer__Windows_UI_Xaml_Input__Pointer * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Input.Pointer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Input.IPointer).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Input.Pointer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_Pointer__Windows_UI_Xaml_Input__Pointer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Input.Pointer>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Input_Pointer___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Input_Pointer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Input.Pointer> Func__Collections_IIterator_1_UI_Xaml_Input_Pointer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Input_Pointer_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Input_Pointer_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Input.Pointer> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Input.Pointer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Input.Pointer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Input.Pointer>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Input.Pointer>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_Pointer__Windows_UI_Xaml_Input__Pointer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.Pointer Func_UI_Xaml_Input_Pointer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.Pointer __value__retval = default(global::Windows.UI.Xaml.Input.Pointer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.Pointer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.IPointer).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Input.Pointer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Input.Pointer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Input_Pointer__Windows_UI_Xaml_Input__Pointer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Input_Pointer__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.Pointer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_Pointer__Windows_UI_Xaml_Input__Pointer * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Input.Pointer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Input.IPointer).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Input.Pointer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_Pointer__Windows_UI_Xaml_Input__Pointer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Input.IKeyRoutedEventArgs.get_Key, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_System_VirtualKey__Windows_System__VirtualKey, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.VirtualKey Func_VirtualKey__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.VirtualKey unsafe_value__retval;
			global::Windows.System.VirtualKey value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeer Func_UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IIterable_A_Windows_Foundation_Point_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> Func__Point___Rect___IEnumerable_1__IEnumerable_1__Point__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point point, 
					global::Windows.Foundation.Rect boundingRect, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_Windows_Foundation_Point_V__V___Impl.Vtbl** unsafe_returnValue__retval = default(global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_Windows_Foundation_Point_V__V___Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> returnValue__retval = default(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									point, 
									boundingRect, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPatternCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_PatternInterface__Windows_UI_Xaml_Automation_Peers__PatternInterface, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_intobject__(
					global::System.__ComObject __this, 
					int patternInterface, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_returnValue__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object returnValue__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									patternInterface, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_returnValue__retval));
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAutomationControlTypeCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationControlType__Windows_UI_Xaml_Automation_Peers__AutomationControlType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationControlType Func_UI_Xaml_Automation_Peers_AutomationControlType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.AutomationControlType unsafe_returnValue__retval;
			global::Windows.UI.Xaml.Automation.Peers.AutomationControlType returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetChildrenCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_UI_Xaml_Automation_Peers_AutomationPeer___Windows_Foundation_Collections__IVector_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> Func__IList_1_UI_Xaml_Automation_Peers_AutomationPeer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl** unsafe_returnValue__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> returnValue__retval = default(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetOrientationCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationOrientation__Windows_UI_Xaml_Automation_Peers__AutomationOrientation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation Func_UI_Xaml_Automation_Peers_AutomationOrientation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation unsafe_returnValue__retval;
			global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPeerFromPointCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeer Func__Point__UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point point, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									point, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetLiveSettingCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationLiveSetting__Windows_UI_Xaml_Automation_Peers__AutomationLiveSetting, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting Func_UI_Xaml_Automation_Peers_AutomationLiveSetting__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting unsafe_returnValue__retval;
			global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeer Func_uint__UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Automation_Peers_AutomationPeer___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> Func__IReadOnlyList_1_UI_Xaml_Automation_Peers_AutomationPeer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_AutomationPeer__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_AutomationPeer__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_AutomationPeer___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_AutomationPeer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeer_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.AutomationPeer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_AutomationPeer__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected.PeerFromProvider, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Provider_IRawElementProviderSimple__Windows_UI_Xaml_Automation_Provider__IRawElementProviderSimple *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeer Func_UI_Xaml_Automation_Provider_IRawElementProviderSimple__UI_Xaml_Automation_Peers_AutomationPeer__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple__Impl.Vtbl** unsafe_provider = default(global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer returnValue__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_provider = (global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									provider, 
									typeof(global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple).TypeHandle
								);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_provider, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_provider)));
				global::System.GC.KeepAlive(provider);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected.ProviderFromPeer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeer__Windows_UI_Xaml_Automation_Peers__AutomationPeer *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Provider_IRawElementProviderSimple__Windows_UI_Xaml_Automation_Provider__IRawElementProviderSimple *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple Func_UI_Xaml_Automation_Peers_AutomationPeer__UI_Xaml_Automation_Provider_IRawElementProviderSimple__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeer peer, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_peer = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple returnValue__retval = default(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_peer = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									peer, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_peer, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_peer)));
				global::System.GC.KeepAlive(peer);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetElementFromPointCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func__Point__object__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point pointInWindowCoordinates, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_returnValue__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object returnValue__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									pointInWindowCoordinates, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_returnValue__retval));
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetAnnotationsCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___Windows_Foundation_Collections__IVector_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> Func__IList_1_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl** unsafe_returnValue__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> returnValue__retval = default(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetPositionInSetCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_int__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe_returnValue__retval;
			int returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation Func_uint__UI_Xaml_Automation_Peers_AutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> Func__IReadOnlyList_1_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Automation_Peers_AutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_AutomationPeerAnnotation___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation Func_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__AutomationPeerAnnotation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4.GetLandmarkTypeCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationLandmarkType__Windows_UI_Xaml_Automation_Peers__AutomationLandmarkType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType Func_UI_Xaml_Automation_Peers_AutomationLandmarkType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType unsafe_returnValue__retval;
			global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Foundation.Point>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Foundation_Point___Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Point_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Point> Func__Collections_IIterator_1__Point___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Foundation_Point_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Foundation_Point_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Point> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Point>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Point>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.Point>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Foundation.Point>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Point__Windows_Foundation__Point *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__Point__uint__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Foundation.Point* unsafe_items;
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			// Marshalling
			if (items != null)
				unsafe_items_mcgLength = (uint)items.Length;
			fixed (global::Windows.Foundation.Point* pinned_items = global::McgInterop.McgCoreHelpers.GetArrayForCompat(items))
			{
				unsafe_items = (global::Windows.Foundation.Point*)pinned_items;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
			}
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<Windows.Foundation.Point>>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point____Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Collections_IIterable_A_Windows_Foundation_Point_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> Func__Collections_IIterator_1__IEnumerable_1__Point__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_IEnumerable_A_Windows_Foundation_Point_V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_IEnumerable_A_Windows_Foundation_Point_V__V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IEnumerable<Windows.Foundation.Point>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point___Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Point_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point> Func__IEnumerable_1__Point___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point> __value__retval = default(global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IEnumerable<Windows.Foundation.Point>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point___Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Point_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__IEnumerable_1__Point___uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.IEnumerable_A_Windows_Foundation_Point_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point___Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Point_V_ * items
						items[mcgIdx] = (global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_Windows_Foundation_Point___Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Point_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement2.get_CompositeMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Media_ElementCompositeMode__Windows_UI_Xaml_Media__ElementCompositeMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.ElementCompositeMode Func_UI_Xaml_Media_ElementCompositeMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.ElementCompositeMode unsafe_value__retval;
			global::Windows.UI.Xaml.Media.ElementCompositeMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IUIElement3.get_Transform3D, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Media3D_Transform3D__Windows_UI_Xaml_Media_Media3D__Transform3D *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Media3D.Transform3D Func_UI_Xaml_Media_Media3D_Transform3D__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Media3D.ITransform3D__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.Media3D.ITransform3D__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Media3D.Transform3D value__retval = default(global::Windows.UI.Xaml.Media.Media3D.Transform3D);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.Media3D.Transform3D)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Media3D.ITransform3D).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Media3D.Transform3D).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement3.put_Transform3D, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Media3D_Transform3D__Windows_UI_Xaml_Media_Media3D__Transform3D *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_Media3D_Transform3D__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Media3D.Transform3D value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Media3D.ITransform3D__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.Media3D.ITransform3D__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.Media3D.ITransform3D__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.Media3D.ITransform3D).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DragStartingEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DragStartingEventArgs__Windows_UI_Xaml__DragStartingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_UIElement__UI_Xaml_DragStartingEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement sender, 
					global::Windows.UI.Xaml.DragStartingEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDragStartingEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.IDragStartingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.IDragStartingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.IDragStartingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement3.add_DragStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_UIElement__Windows_UI_Xaml_DragStartingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_UIElement__UI_Xaml_DragStartingEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget18>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DropCompletedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DropCompletedEventArgs__Windows_UI_Xaml__DropCompletedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_UIElement__UI_Xaml_DropCompletedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement sender, 
					global::Windows.UI.Xaml.DropCompletedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDropCompletedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.IDropCompletedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.IDropCompletedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.IDropCompletedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement3.add_DropCompleted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_UIElement__Windows_UI_Xaml_DropCompletedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_UIElement__UI_Xaml_DropCompletedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget19>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_Triggers, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_TriggerCollection__Windows_UI_Xaml__TriggerCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.TriggerCollection Func_UI_Xaml_TriggerCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_TriggerBase_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_TriggerBase_V___Impl.Vtbl**);
			global::Windows.UI.Xaml.TriggerCollection value__retval = default(global::Windows.UI.Xaml.TriggerCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.TriggerCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.TriggerBase>).TypeHandle, 
									typeof(global::Windows.UI.Xaml.TriggerCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_HorizontalAlignment, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_HorizontalAlignment__Windows_UI_Xaml__HorizontalAlignment, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.HorizontalAlignment Func_UI_Xaml_HorizontalAlignment__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.HorizontalAlignment unsafe_value__retval;
			global::Windows.UI.Xaml.HorizontalAlignment value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_VerticalAlignment, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_VerticalAlignment__Windows_UI_Xaml__VerticalAlignment, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.VerticalAlignment Func_UI_Xaml_VerticalAlignment__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.VerticalAlignment unsafe_value__retval;
			global::Windows.UI.Xaml.VerticalAlignment value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_Margin, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Thickness__Windows_UI_Xaml__Thickness, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Thickness Func_UI_Xaml_Thickness__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Thickness unsafe_value__retval;
			global::Windows.UI.Xaml.Thickness value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.put_Margin, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Thickness__Windows_UI_Xaml__Thickness, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Thickness__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Thickness value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_Style, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Style__Windows_UI_Xaml__Style *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Style Func_UI_Xaml_Style__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStyle__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IStyle__Impl.Vtbl**);
			global::Windows.UI.Xaml.Style value__retval = default(global::Windows.UI.Xaml.Style);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Style)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IStyle).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Style).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.put_Style, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Style__Windows_UI_Xaml__Style *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Style__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Style value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStyle__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_FlowDirection, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_FlowDirection__Windows_UI_Xaml__FlowDirection, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.FlowDirection Func_UI_Xaml_FlowDirection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.FlowDirection unsafe_value__retval;
			global::Windows.UI.Xaml.FlowDirection value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.SizeChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_SizeChangedEventArgs__Windows_UI_Xaml__SizeChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_SizeChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.SizeChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.ISizeChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.ISizeChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.ISizeChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.ISizeChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.add_SizeChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_SizeChangedEventHandler__Windows_UI_Xaml__SizeChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_SizeChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.SizeChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.SizeChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget20>(global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.TriggerBase>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_TriggerBase__Windows_UI_Xaml__TriggerBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.TriggerBase Func_uint__UI_Xaml_TriggerBase__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.TriggerBase __value__retval = default(global::Windows.UI.Xaml.TriggerBase);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.TriggerBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.ITriggerBase).TypeHandle, 
									typeof(global::Windows.UI.Xaml.TriggerBase).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.TriggerBase>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_TriggerBase___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_TriggerBase_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.TriggerBase> Func__IReadOnlyList_1_UI_Xaml_TriggerBase___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_TriggerBase_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_TriggerBase_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.TriggerBase> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.TriggerBase>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.TriggerBase>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.TriggerBase>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.TriggerBase>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_TriggerBase__Windows_UI_Xaml__TriggerBase *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_TriggerBase__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.TriggerBase value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.ITriggerBase).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.TriggerBase>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_TriggerBase__Windows_UI_Xaml__TriggerBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_TriggerBase__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.TriggerBase value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.ITriggerBase).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.TriggerBase>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_TriggerBase__Windows_UI_Xaml__TriggerBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_TriggerBase__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.TriggerBase value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.ITriggerBase).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.TriggerBase>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_TriggerBase__Windows_UI_Xaml__TriggerBase * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_TriggerBase__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.TriggerBase[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_TriggerBase__Windows_UI_Xaml__TriggerBase * items
						items[mcgIdx] = (global::Windows.UI.Xaml.TriggerBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.ITriggerBase).TypeHandle, 
											typeof(global::Windows.UI.Xaml.TriggerBase).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_TriggerBase__Windows_UI_Xaml__TriggerBase * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.TriggerBase>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_TriggerBase__Windows_UI_Xaml__TriggerBase * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_TriggerBase__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.TriggerBase[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.ITriggerBase).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_TriggerBase__Windows_UI_Xaml__TriggerBase * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.TriggerBase>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_TriggerBase___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_TriggerBase_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.TriggerBase> Func__Collections_IIterator_1_UI_Xaml_TriggerBase___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_TriggerBase_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_TriggerBase_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.TriggerBase> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.TriggerBase>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.TriggerBase>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.TriggerBase>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.TriggerBase>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_TriggerBase__Windows_UI_Xaml__TriggerBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.TriggerBase Func_UI_Xaml_TriggerBase__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.TriggerBase __value__retval = default(global::Windows.UI.Xaml.TriggerBase);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.TriggerBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.ITriggerBase).TypeHandle, 
									typeof(global::Windows.UI.Xaml.TriggerBase).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.TriggerBase>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_TriggerBase__Windows_UI_Xaml__TriggerBase * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_TriggerBase__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.TriggerBase[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_TriggerBase__Windows_UI_Xaml__TriggerBase * items
						items[mcgIdx] = (global::Windows.UI.Xaml.TriggerBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.ITriggerBase).TypeHandle, 
											typeof(global::Windows.UI.Xaml.TriggerBase).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_TriggerBase__Windows_UI_Xaml__TriggerBase * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.IStyleFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Type__IntPtr__(
					global::System.__ComObject __this, 
					global::System.Type targetType, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Type__Impl.UnsafeType unsafe_targetType;
			global::System.IntPtr unsafe_instance__retval;
			global::System.IntPtr instance__retval;
			int unsafe___return__;
			// Marshalling
			global::System.Runtime.InteropServices.HSTRING unsafe_targetType__HSTRING__Name;
			int unsafe_targetType__int__Kind;
			global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
								targetType, 
								out unsafe_targetType__HSTRING__Name, 
								out unsafe_targetType__int__Kind
							);
			unsafe_targetType.Name = unsafe_targetType__HSTRING__Name;
			unsafe_targetType.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_targetType__int__Kind;
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_targetType, 
								&(unsafe_instance__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			instance__retval = unsafe_instance__retval;
			// Return
			return instance__retval;
		}

		// Signature, Windows.UI.Xaml.IStyle.get_Setters, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_SetterBaseCollection__Windows_UI_Xaml__SetterBaseCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.SetterBaseCollection Func_UI_Xaml_SetterBaseCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ISetterBaseCollection__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.ISetterBaseCollection__Impl.Vtbl**);
			global::Windows.UI.Xaml.SetterBaseCollection value__retval = default(global::Windows.UI.Xaml.SetterBaseCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.SetterBaseCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.ISetterBaseCollection).TypeHandle, 
									typeof(global::Windows.UI.Xaml.SetterBaseCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IStyle.get_TargetType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Type Func_Type__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Type value__retval;
			global::System.Type__Impl.UnsafeType unsafe_value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = global::System.Runtime.InteropServices.McgMarshal.TypeNameToType(
								unsafe_value__retval.Name, 
								((int)unsafe_value__retval.Kind)
							);
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IStyle.put_TargetType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Type__(
					global::System.__ComObject __this, 
					global::System.Type value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Type__Impl.UnsafeType unsafe_value;
			int unsafe___return__;
			// Marshalling
			global::System.Runtime.InteropServices.HSTRING unsafe_value__HSTRING__Name;
			int unsafe_value__int__Kind;
			global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
								value, 
								out unsafe_value__HSTRING__Name, 
								out unsafe_value__int__Kind
							);
			unsafe_value.Name = unsafe_value__HSTRING__Name;
			unsafe_value.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_value__int__Kind;
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.SetterBase>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_SetterBase__Windows_UI_Xaml__SetterBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.SetterBase Func_uint__UI_Xaml_SetterBase__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.SetterBase __value__retval = default(global::Windows.UI.Xaml.SetterBase);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.SetterBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.ISetterBase).TypeHandle, 
									typeof(global::Windows.UI.Xaml.SetterBase).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.SetterBase>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_SetterBase___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_SetterBase_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.SetterBase> Func__IReadOnlyList_1_UI_Xaml_SetterBase___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_SetterBase_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_SetterBase_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.SetterBase> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.SetterBase>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.SetterBase>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.SetterBase>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.SetterBase>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_SetterBase__Windows_UI_Xaml__SetterBase *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_SetterBase__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.SetterBase value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.ISetterBase).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.SetterBase>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_SetterBase__Windows_UI_Xaml__SetterBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_SetterBase__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.SetterBase value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.ISetterBase).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.SetterBase>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_SetterBase__Windows_UI_Xaml__SetterBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_SetterBase__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.SetterBase value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.ISetterBase).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.SetterBase>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_SetterBase__Windows_UI_Xaml__SetterBase * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_SetterBase__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.SetterBase[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_SetterBase__Windows_UI_Xaml__SetterBase * items
						items[mcgIdx] = (global::Windows.UI.Xaml.SetterBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.ISetterBase).TypeHandle, 
											typeof(global::Windows.UI.Xaml.SetterBase).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_SetterBase__Windows_UI_Xaml__SetterBase * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.SetterBase>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_SetterBase__Windows_UI_Xaml__SetterBase * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_SetterBase__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.SetterBase[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.ISetterBase).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_SetterBase__Windows_UI_Xaml__SetterBase * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.SetterBase>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_SetterBase___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_SetterBase_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.SetterBase> Func__Collections_IIterator_1_UI_Xaml_SetterBase___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_SetterBase_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_SetterBase_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.SetterBase> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.SetterBase>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.SetterBase>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.SetterBase>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.SetterBase>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_SetterBase__Windows_UI_Xaml__SetterBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.SetterBase Func_UI_Xaml_SetterBase__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.SetterBase __value__retval = default(global::Windows.UI.Xaml.SetterBase);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.SetterBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.ISetterBase).TypeHandle, 
									typeof(global::Windows.UI.Xaml.SetterBase).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.SetterBase>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_SetterBase__Windows_UI_Xaml__SetterBase * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_SetterBase__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.SetterBase[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_SetterBase__Windows_UI_Xaml__SetterBase * items
						items[mcgIdx] = (global::Windows.UI.Xaml.SetterBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.ISetterBase).TypeHandle, 
											typeof(global::Windows.UI.Xaml.SetterBase).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_SetterBase__Windows_UI_Xaml__SetterBase * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Size Func__Size___Size__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Size availableSize, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Size unsafe_returnValue__retval;
			global::Windows.Foundation.Size returnValue__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								availableSize, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement2.get_RequestedTheme, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_ElementTheme__Windows_UI_Xaml__ElementTheme, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ElementTheme Func_UI_Xaml_ElementTheme__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ElementTheme unsafe_value__retval;
			global::Windows.UI.Xaml.ElementTheme value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.DataContextChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml__FrameworkElement *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataContextChangedEventArgs__Windows_UI_Xaml__DataContextChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_FrameworkElement__UI_Xaml_DataContextChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.FrameworkElement sender, 
					global::Windows.UI.Xaml.DataContextChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDataContextChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.IDataContextChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.IFrameworkElement).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.IDataContextChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.IDataContextChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement2.add_DataContextChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml_DataContextChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_FrameworkElement__UI_Xaml_DataContextChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget21>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_string__bool__bool__(
					global::System.__ComObject __this, 
					string stateName, 
					bool useTransitions, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_stateName = default(global::System.Runtime.InteropServices.HSTRING);
			sbyte unsafe_useTransitions;
			bool returnValue__retval;
			sbyte unsafe_returnValue__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_stateName = stateName)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_stateName;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_stateName, stateName, &(hstring_header_stateName), &(unsafe_stateName));
				unsafe_useTransitions = (useTransitions ? ((sbyte)1) : ((sbyte)0));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_stateName, 
									unsafe_useTransitions, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = unsafe_returnValue__retval != 0;
			}
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.FrameworkElement,System.Object>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml__FrameworkElement *, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_FrameworkElement__object__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.FrameworkElement sender, 
					object args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_args = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.IFrameworkElement).TypeHandle
								);
				unsafe_args = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(args);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement3.add_Loading, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_FrameworkElement__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_FrameworkElement__object__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget22>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.get_FontFamily, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_FontFamily__Windows_UI_Xaml_Media__FontFamily *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.FontFamily Func_UI_Xaml_Media_FontFamily__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IFontFamily__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.IFontFamily__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.FontFamily value__retval = default(global::Windows.UI.Xaml.Media.FontFamily);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.FontFamily)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.IFontFamily).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.FontFamily).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.put_FontFamily, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_FontFamily__Windows_UI_Xaml_Media__FontFamily *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_FontFamily__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.FontFamily value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IFontFamily__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.IFontFamily__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.IFontFamily__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.IFontFamily).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.get_FontWeight, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_UI_Text_FontWeight__Windows_UI_Text__FontWeight, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Text.FontWeight Func_UI_Text_FontWeight__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Text.FontWeight unsafe_value__retval;
			global::Windows.UI.Text.FontWeight value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.put_FontWeight, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Windows_UI_Text_FontWeight__Windows_UI_Text__FontWeight, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Text_FontWeight__(
					global::System.__ComObject __this, 
					global::Windows.UI.Text.FontWeight value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.get_FontStyle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Text_FontStyle__Windows_UI_Text__FontStyle, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Text.FontStyle Func_UI_Text_FontStyle__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Text.FontStyle unsafe_value__retval;
			global::Windows.UI.Text.FontStyle value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.get_FontStretch, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Text_FontStretch__Windows_UI_Text__FontStretch, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Text.FontStretch Func_UI_Text_FontStretch__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Text.FontStretch unsafe_value__retval;
			global::Windows.UI.Text.FontStretch value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.put_CharacterSpacing, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__(
					global::System.__ComObject __this, 
					int value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.get_Foreground, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Brush__Windows_UI_Xaml_Media__Brush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Brush Func_UI_Xaml_Media_Brush__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IBrush__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.IBrush__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Brush value__retval = default(global::Windows.UI.Xaml.Media.Brush);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.Brush)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.IBrush).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Brush).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.put_Foreground, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Brush__Windows_UI_Xaml_Media__Brush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_Brush__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Brush value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IBrush__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.IBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.IBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.IBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.get_TabNavigation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Input_KeyboardNavigationMode__Windows_UI_Xaml_Input__KeyboardNavigationMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.KeyboardNavigationMode Func_UI_Xaml_Input_KeyboardNavigationMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.KeyboardNavigationMode unsafe_value__retval;
			global::Windows.UI.Xaml.Input.KeyboardNavigationMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.get_Template, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ControlTemplate__Windows_UI_Xaml_Controls__ControlTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ControlTemplate Func_UI_Xaml_Controls_ControlTemplate__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IControlTemplate__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Controls.IControlTemplate__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ControlTemplate value__retval = default(global::Windows.UI.Xaml.Controls.ControlTemplate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Controls.ControlTemplate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IControlTemplate).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.ControlTemplate).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.put_Template, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ControlTemplate__Windows_UI_Xaml_Controls__ControlTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ControlTemplate__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ControlTemplate value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IControlTemplate__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IControlTemplate__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IControlTemplate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IControlTemplate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.get_FocusState, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_FocusState__Windows_UI_Xaml__FocusState, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.FocusState Func_UI_Xaml_FocusState__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.FocusState unsafe_value__retval;
			global::Windows.UI.Xaml.FocusState value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.DependencyPropertyChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyPropertyChangedEventArgs__Windows_UI_Xaml__DependencyPropertyChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_DependencyPropertyChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.add_IsEnabledChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_DependencyPropertyChangedEventHandler__Windows_UI_Xaml__DependencyPropertyChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_DependencyPropertyChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget23>(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Media.IFontFamilyFactory.CreateInstanceWithName, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_string__IntPtr__out_IntPtr__IntPtr__(
					global::System.__ComObject __this, 
					string familyName, 
					global::System.IntPtr outer, 
					out global::System.IntPtr inner, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_familyName = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.IntPtr unsafe_inner;
			global::System.IntPtr unsafe_instance__retval;
			global::System.IntPtr instance__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_familyName = familyName)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_familyName;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_familyName, familyName, &(hstring_header_familyName), &(unsafe_familyName));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_familyName, 
									outer, 
									&(unsafe_inner), 
									&(unsafe_instance__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				instance__retval = unsafe_instance__retval;
				inner = unsafe_inner;
			}
			// Return
			return instance__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_PointerRoutedEventArgs__Windows_UI_Xaml_Input__PointerRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_PointerRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_TappedRoutedEventArgs__Windows_UI_Xaml_Input__TappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_TappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_DoubleTappedRoutedEventArgs__Windows_UI_Xaml_Input__DoubleTappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_DoubleTappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnHolding, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_HoldingRoutedEventArgs__Windows_UI_Xaml_Input__HoldingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_HoldingRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_RightTappedRoutedEventArgs__Windows_UI_Xaml_Input__RightTappedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_RightTappedRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationStartingRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationStartingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_ManipulationStartingRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationInertiaStartingRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationInertiaStartingRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_ManipulationInertiaStartingRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationStartedRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationStartedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_ManipulationStartedRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationDeltaRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationDeltaRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_ManipulationDeltaRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_ManipulationCompletedRoutedEventArgs__Windows_UI_Xaml_Input__ManipulationCompletedRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_ManipulationCompletedRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Input_KeyRoutedEventArgs__Windows_UI_Xaml_Input__KeyRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Input_KeyRoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_RoutedEventArgs__Windows_UI_Xaml__RoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_RoutedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.RoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.IRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DragEventArgs__Windows_UI_Xaml__DragEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DragEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DragEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.IDragEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IDragEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyObject Func_string__UI_Xaml_DependencyObject__(
					global::System.__ComObject __this, 
					string childName, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_childName = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyObject returnValue__retval = default(global::Windows.UI.Xaml.DependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_childName = childName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_childName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_childName, childName, &(hstring_header_childName), &(unsafe_childName));
					unsafe_returnValue__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_childName, 
										&(unsafe_returnValue__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					returnValue__retval = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_returnValue__retval), 
										typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
										typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
									);
				}
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IUserControl.get_Content, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.UIElement Func_UI_Xaml_UIElement__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.UIElement value__retval = default(global::Windows.UI.Xaml.UIElement);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.UIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle, 
									typeof(global::Windows.UI.Xaml.UIElement).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IUserControl.put_Content, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_UIElement__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatedFrom, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigationEventArgs__Windows_UI_Xaml_Navigation__NavigationEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Navigation_NavigationEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigationEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Navigation.INavigationEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigatingCancelEventArgs__Windows_UI_Xaml_Navigation__NavigatingCancelEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Navigation_NavigatingCancelEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_e = (global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IGridStatics.GetRow, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml__FrameworkElement *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_UI_Xaml_FrameworkElement__int__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.FrameworkElement element, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**);
			int unsafe_value__retval;
			int value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IFrameworkElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = unsafe_value__retval;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IGridStatics.SetRow, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml__FrameworkElement *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_FrameworkElement__int__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.FrameworkElement element, 
					int value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IFrameworkElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IPanel.get_Children, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_UIElementCollection__Windows_UI_Xaml_Controls__UIElementCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.UIElementCollection Func_UI_Xaml_Controls_UIElementCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.UIElementCollection value__retval = default(global::Windows.UI.Xaml.Controls.UIElementCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Controls.UIElementCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.UIElementCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.UIElement Func_uint__UI_Xaml_UIElement__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.UIElement __value__retval = default(global::Windows.UI.Xaml.UIElement);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.UIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle, 
									typeof(global::Windows.UI.Xaml.UIElement).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_UIElement___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_UIElement_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement> Func__IReadOnlyList_1_UI_Xaml_UIElement___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.UIElement>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_UIElement__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_UIElement__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.UIElement value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_UIElement__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.UIElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * items
						items[mcgIdx] = (global::Windows.UI.Xaml.UIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle, 
											typeof(global::Windows.UI.Xaml.UIElement).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.UIElement>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_UIElement__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.UIElement>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_UIElement___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_UIElement_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.UIElement> Func__Collections_IIterator_1_UI_Xaml_UIElement___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_UIElement_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.UIElement> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.UIElement>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.UIElement>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.UIElement>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.UIElement>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_UIElement__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * items
						items[mcgIdx] = (global::Windows.UI.Xaml.UIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle, 
											typeof(global::Windows.UI.Xaml.UIElement).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IGrid.get_RowDefinitions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinitionCollection__Windows_UI_Xaml_Controls__RowDefinitionCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.RowDefinitionCollection Func_UI_Xaml_Controls_RowDefinitionCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Controls_RowDefinition_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Controls_RowDefinition_V___Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.RowDefinitionCollection value__retval = default(global::Windows.UI.Xaml.Controls.RowDefinitionCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Controls.RowDefinitionCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.RowDefinition>).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.RowDefinitionCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IGrid.get_ColumnDefinitions, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinitionCollection__Windows_UI_Xaml_Controls__ColumnDefinitionCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ColumnDefinitionCollection Func_UI_Xaml_Controls_ColumnDefinitionCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Controls_ColumnDefinition_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Controls_ColumnDefinition_V___Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ColumnDefinitionCollection value__retval = default(global::Windows.UI.Xaml.Controls.ColumnDefinitionCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Controls.ColumnDefinitionCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.ColumnDefinition>).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.ColumnDefinitionCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IRowDefinition.get_Height, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_GridLength__Windows_UI_Xaml__GridLength, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.GridLength Func_UI_Xaml_GridLength__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.GridLength unsafe_value__retval;
			global::Windows.UI.Xaml.GridLength value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IRowDefinition.put_Height, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_GridLength__Windows_UI_Xaml__GridLength, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_GridLength__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.GridLength value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.RowDefinition>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.RowDefinition Func_uint__UI_Xaml_Controls_RowDefinition__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.RowDefinition __value__retval = default(global::Windows.UI.Xaml.Controls.RowDefinition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.RowDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.RowDefinition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.RowDefinition>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Controls_RowDefinition___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Controls_RowDefinition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.RowDefinition> Func__IReadOnlyList_1_UI_Xaml_Controls_RowDefinition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Controls_RowDefinition_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Controls_RowDefinition_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.RowDefinition> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.RowDefinition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.RowDefinition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.RowDefinition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.RowDefinition>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Controls_RowDefinition__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.RowDefinition value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.RowDefinition>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Controls_RowDefinition__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Controls.RowDefinition value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.RowDefinition>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_RowDefinition__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.RowDefinition value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.RowDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Controls_RowDefinition__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Controls.RowDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.RowDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Controls.RowDefinition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.RowDefinition>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Controls_RowDefinition__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.RowDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Controls.RowDefinition>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Controls_RowDefinition___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Controls_RowDefinition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.RowDefinition> Func__Collections_IIterator_1_UI_Xaml_Controls_RowDefinition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_RowDefinition_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_RowDefinition_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.RowDefinition> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.RowDefinition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.RowDefinition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.RowDefinition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.RowDefinition>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.RowDefinition Func_UI_Xaml_Controls_RowDefinition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.RowDefinition __value__retval = default(global::Windows.UI.Xaml.Controls.RowDefinition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.RowDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.RowDefinition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.RowDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Controls_RowDefinition__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.RowDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.RowDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Controls.RowDefinition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_RowDefinition__Windows_UI_Xaml_Controls__RowDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.ColumnDefinition>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ColumnDefinition Func_uint__UI_Xaml_Controls_ColumnDefinition__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ColumnDefinition __value__retval = default(global::Windows.UI.Xaml.Controls.ColumnDefinition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.ColumnDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.ColumnDefinition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.ColumnDefinition>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Controls_ColumnDefinition___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Controls_ColumnDefinition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.ColumnDefinition> Func__IReadOnlyList_1_UI_Xaml_Controls_ColumnDefinition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Controls_ColumnDefinition_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Controls_ColumnDefinition_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.ColumnDefinition> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.ColumnDefinition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.ColumnDefinition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.ColumnDefinition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.ColumnDefinition>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Controls_ColumnDefinition__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ColumnDefinition value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.ColumnDefinition>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Controls_ColumnDefinition__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Controls.ColumnDefinition value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.ColumnDefinition>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ColumnDefinition__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ColumnDefinition value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.ColumnDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Controls_ColumnDefinition__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Controls.ColumnDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.ColumnDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Controls.ColumnDefinition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.ColumnDefinition>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Controls_ColumnDefinition__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ColumnDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Controls.ColumnDefinition>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Controls_ColumnDefinition___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Controls_ColumnDefinition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.ColumnDefinition> Func__Collections_IIterator_1_UI_Xaml_Controls_ColumnDefinition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_ColumnDefinition_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_ColumnDefinition_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.ColumnDefinition> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.ColumnDefinition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.ColumnDefinition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.ColumnDefinition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.ColumnDefinition>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ColumnDefinition Func_UI_Xaml_Controls_ColumnDefinition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ColumnDefinition __value__retval = default(global::Windows.UI.Xaml.Controls.ColumnDefinition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.ColumnDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.ColumnDefinition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.ColumnDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Controls_ColumnDefinition__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ColumnDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.ColumnDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Controls.ColumnDefinition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ColumnDefinition__Windows_UI_Xaml_Controls__ColumnDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IGrid2.get_CornerRadius, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_CornerRadius__Windows_UI_Xaml__CornerRadius, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.CornerRadius Func_UI_Xaml_CornerRadius__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.CornerRadius unsafe_value__retval;
			global::Windows.UI.Xaml.CornerRadius value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IGrid2.put_CornerRadius, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_CornerRadius__Windows_UI_Xaml__CornerRadius, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_CornerRadius__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.CornerRadius value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IUIElement>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IUIElement___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IUIElement_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement> Func__Collections_IIterator_1_UI_Xaml_IUIElement___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement Func_UI_Xaml_IUIElement__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement __value__retval = default(global::Windows.UI.Xaml.IUIElement);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IUIElement__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IUIElementOverrides>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IUIElementOverrides___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IUIElementOverrides_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElementOverrides> Func__Collections_IIterator_1_UI_Xaml_IUIElementOverrides___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElementOverrides_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElementOverrides_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElementOverrides> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElementOverrides>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElementOverrides>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElementOverrides>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElementOverrides>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElementOverrides Func_UI_Xaml_IUIElementOverrides__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElementOverrides __value__retval = default(global::Windows.UI.Xaml.IUIElementOverrides);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElementOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElementOverrides).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElementOverrides>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IUIElementOverrides__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElementOverrides[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElementOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElementOverrides).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IUIElement2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IUIElement2___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IUIElement2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement2> Func__Collections_IIterator_1_UI_Xaml_IUIElement2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement2 Func_UI_Xaml_IUIElement2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement2 __value__retval = default(global::Windows.UI.Xaml.IUIElement2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IUIElement2__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IUIElement3>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IUIElement3___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IUIElement3_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement3> Func__Collections_IIterator_1_UI_Xaml_IUIElement3___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement3_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IUIElement3_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement3> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement3>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement3>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IUIElement3>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement3>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement3 Func_UI_Xaml_IUIElement3__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement3 __value__retval = default(global::Windows.UI.Xaml.IUIElement3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IUIElement3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IUIElement3__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement Func_uint__UI_Xaml_IUIElement__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement __value__retval = default(global::Windows.UI.Xaml.IUIElement);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IUIElement__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IUIElement__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IUIElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement__Windows_UI_Xaml__IUIElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElementOverrides>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElementOverrides Func_uint__UI_Xaml_IUIElementOverrides__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElementOverrides __value__retval = default(global::Windows.UI.Xaml.IUIElementOverrides);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElementOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElementOverrides).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElementOverrides>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IUIElementOverrides__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElementOverrides value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElementOverrides).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElementOverrides>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IUIElementOverrides__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IUIElementOverrides[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElementOverrides__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElementOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElementOverrides).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElementOverrides__Windows_UI_Xaml__IUIElementOverrides * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement2 Func_uint__UI_Xaml_IUIElement2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement2 __value__retval = default(global::Windows.UI.Xaml.IUIElement2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IUIElement2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IUIElement2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IUIElement2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement2__Windows_UI_Xaml__IUIElement2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement3>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IUIElement3 Func_uint__UI_Xaml_IUIElement3__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**);
			global::Windows.UI.Xaml.IUIElement3 __value__retval = default(global::Windows.UI.Xaml.IUIElement3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IUIElement3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IUIElement3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement3>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IUIElement3__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IUIElement3 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IUIElement3).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IUIElement3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IUIElement3__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IUIElement3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IUIElement3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IUIElement3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IUIElement3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IUIElement3__Windows_UI_Xaml__IUIElement3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Controls.IRowDefinition>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Controls_IRowDefinition___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Controls_IRowDefinition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IRowDefinition> Func__Collections_IIterator_1_UI_Xaml_Controls_IRowDefinition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_IRowDefinition_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_IRowDefinition_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IRowDefinition> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IRowDefinition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IRowDefinition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IRowDefinition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.IRowDefinition>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.IRowDefinition Func_UI_Xaml_Controls_IRowDefinition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IRowDefinition __value__retval = default(global::Windows.UI.Xaml.Controls.IRowDefinition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.IRowDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.IRowDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Controls_IRowDefinition__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.IRowDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.IRowDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.IRowDefinition>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.IRowDefinition Func_uint__UI_Xaml_Controls_IRowDefinition__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IRowDefinition __value__retval = default(global::Windows.UI.Xaml.Controls.IRowDefinition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.IRowDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.IRowDefinition>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Controls_IRowDefinition__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.IRowDefinition value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.IRowDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Controls_IRowDefinition__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Controls.IRowDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.IRowDefinition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.IRowDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.IRowDefinition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IRowDefinition__Windows_UI_Xaml_Controls__IRowDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Controls.IColumnDefinition>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Controls_IColumnDefinition___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Controls_IColumnDefinition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IColumnDefinition> Func__Collections_IIterator_1_UI_Xaml_Controls_IColumnDefinition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_IColumnDefinition_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_IColumnDefinition_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IColumnDefinition> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IColumnDefinition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IColumnDefinition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.IColumnDefinition>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.IColumnDefinition>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.IColumnDefinition Func_UI_Xaml_Controls_IColumnDefinition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IColumnDefinition __value__retval = default(global::Windows.UI.Xaml.Controls.IColumnDefinition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.IColumnDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.IColumnDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Controls_IColumnDefinition__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.IColumnDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.IColumnDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.IColumnDefinition>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.IColumnDefinition Func_uint__UI_Xaml_Controls_IColumnDefinition__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IColumnDefinition __value__retval = default(global::Windows.UI.Xaml.Controls.IColumnDefinition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.IColumnDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.IColumnDefinition>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Controls_IColumnDefinition__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.IColumnDefinition value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.IColumnDefinition>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Controls_IColumnDefinition__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Controls.IColumnDefinition[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.IColumnDefinition__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.IColumnDefinition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.IColumnDefinition).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_IColumnDefinition__Windows_UI_Xaml_Controls__IColumnDefinition * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Media.ISolidColorBrushFactory.CreateInstanceWithColor, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_UI_Color__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.UI.Color color, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_instance__retval;
			global::System.IntPtr instance__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								color, 
								&(unsafe_instance__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			instance__retval = unsafe_instance__retval;
			// Return
			return instance__retval;
		}

		// Signature, Windows.UI.Xaml.Media.ISolidColorBrush.get_Color, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Color Func_UI_Color__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Color unsafe_value__retval;
			global::Windows.UI.Color value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Media.ISolidColorBrush.put_Color, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Color__(
					global::System.__ComObject __this, 
					global::Windows.UI.Color value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBlock.get_TextWrapping, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_TextWrapping__Windows_UI_Xaml__TextWrapping, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.TextWrapping Func_UI_Xaml_TextWrapping__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.TextWrapping unsafe_value__retval;
			global::Windows.UI.Xaml.TextWrapping value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBlock.get_TextAlignment, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_TextAlignment__Windows_UI_Xaml__TextAlignment, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.TextAlignment Func_UI_Xaml_TextAlignment__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.TextAlignment unsafe_value__retval;
			global::Windows.UI.Xaml.TextAlignment value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ContextMenuEventArgs__Windows_UI_Xaml_Controls__ContextMenuEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Controls_ContextMenuEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Controls.ContextMenuEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.IContextMenuEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Controls.IContextMenuEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Controls.IContextMenuEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Controls.IContextMenuEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBlock.add_ContextMenuOpening, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_ContextMenuOpeningEventHandler__Windows_UI_Xaml_Controls__ContextMenuOpeningEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Controls_ContextMenuOpeningEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget24>(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__object__(
					global::System.__ComObject __this, 
					object oldContent, 
					object newContent, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_oldContent = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_newContent = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldContent = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(oldContent);
				unsafe_newContent = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(newContent);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_oldContent, 
									unsafe_newContent
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldContent)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newContent)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentTemplateChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataTemplate__Windows_UI_Xaml__DataTemplate *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataTemplate__Windows_UI_Xaml__DataTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DataTemplate__UI_Xaml_DataTemplate__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl** unsafe_oldContentTemplate = default(global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl** unsafe_newContentTemplate = default(global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldContentTemplate = (global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									oldContentTemplate, 
									typeof(global::Windows.UI.Xaml.IDataTemplate).TypeHandle
								);
				unsafe_newContentTemplate = (global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									newContentTemplate, 
									typeof(global::Windows.UI.Xaml.IDataTemplate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_oldContentTemplate, 
									unsafe_newContentTemplate
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldContentTemplate)));
				global::System.GC.KeepAlive(oldContentTemplate);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newContentTemplate)));
				global::System.GC.KeepAlive(newContentTemplate);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentTemplateSelectorChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_DataTemplateSelector__Windows_UI_Xaml_Controls__DataTemplateSelector *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_DataTemplateSelector__Windows_UI_Xaml_Controls__DataTemplateSelector *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_DataTemplateSelector__UI_Xaml_Controls_DataTemplateSelector__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl** unsafe_oldContentTemplateSelector = default(global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl** unsafe_newContentTemplateSelector = default(global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldContentTemplateSelector = (global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									oldContentTemplateSelector, 
									typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelector).TypeHandle
								);
				unsafe_newContentTemplateSelector = (global::Windows.UI.Xaml.Controls.IDataTemplateSelector__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									newContentTemplateSelector, 
									typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelector).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_oldContentTemplateSelector, 
									unsafe_newContentTemplateSelector
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldContentTemplateSelector)));
				global::System.GC.KeepAlive(oldContentTemplateSelector);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newContentTemplateSelector)));
				global::System.GC.KeepAlive(newContentTemplateSelector);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides.SelectTemplateCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataTemplate__Windows_UI_Xaml__DataTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DataTemplate Func_object__UI_Xaml_DependencyObject__UI_Xaml_DataTemplate__(
					global::System.__ComObject __this, 
					object item, 
					global::Windows.UI.Xaml.DependencyObject container, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_item = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_container = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**);
			global::Windows.UI.Xaml.DataTemplate returnValue__retval = default(global::Windows.UI.Xaml.DataTemplate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_item = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(item);
				unsafe_container = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									container, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_item, 
									unsafe_container, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.DataTemplate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.IDataTemplate).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DataTemplate).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_item)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_container)));
				global::System.GC.KeepAlive(container);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2.SelectTemplateCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataTemplate__Windows_UI_Xaml__DataTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DataTemplate Func_object__UI_Xaml_DataTemplate__(
					global::System.__ComObject __this, 
					object item, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_item = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**);
			global::Windows.UI.Xaml.DataTemplate returnValue__retval = default(global::Windows.UI.Xaml.DataTemplate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_item = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(item);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_item, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.DataTemplate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.IDataTemplate).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DataTemplate).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_item)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Primitives.IButtonBase.get_Command, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Windows_Input_ICommand__Windows_UI_Xaml_Input__ICommand *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Windows.Input.ICommand Func_Input_ICommand__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Windows.Input.ICommand__Impl.Vtbl** unsafe_value__retval = default(global::System.Windows.Input.ICommand__Impl.Vtbl**);
			global::System.Windows.Input.ICommand value__retval = default(global::System.Windows.Input.ICommand);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Windows.Input.ICommand)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Windows.Input.ICommand).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Primitives.IButtonBase.put_Command, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Windows_Input_ICommand__Windows_UI_Xaml_Input__ICommand *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Input_ICommand__(
					global::System.__ComObject __this, 
					global::System.Windows.Input.ICommand value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Windows.Input.ICommand__Impl.Vtbl** unsafe_value = default(global::System.Windows.Input.ICommand__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.Windows.Input.ICommand__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::System.Windows.Input.ICommand).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Primitives.IToggleButton.get_IsChecked, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_bool___Windows_Foundation__IReference_A_bool_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Nullable<bool> Func_Nullable_1_bool___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_bool_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Nullable_A_bool_V___Impl.Vtbl**);
			global::System.Nullable<bool> value__retval = default(global::System.Nullable<bool>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					value__retval = (bool)global::System.Runtime.InteropServices.McgModuleManager.UnboxIfBoxed(
										global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
															((global::System.IntPtr)unsafe_value__retval), 
															typeof(global::Windows.Foundation.IReference<bool>).TypeHandle
														), 
										"Windows.Foundation.IReference`1<Boolean>"
									);
				else
					value__retval = null;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Primitives.IToggleButton.put_IsChecked, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_bool___Windows_Foundation__IReference_A_bool_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Nullable_1_bool___(
					global::System.__ComObject __this, 
					global::System.Nullable<bool> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_bool_V___Impl.Vtbl** unsafe_value = default(global::System.Nullable_A_bool_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (value.HasValue)
				{
					global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<bool> unsafe_value_Wrapper = new global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<bool>(value.Value, 11);
					unsafe_value = (global::System.Nullable_A_bool_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ManagedObjectToComInterface(
										unsafe_value_Wrapper, 
										typeof(global::Windows.Foundation.IReference<bool>).TypeHandle
									);
				}
				else
					unsafe_value = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.ISetter.put_Property, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyProperty__Windows_UI_Xaml__DependencyProperty *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DependencyProperty__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyProperty value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyProperty__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IDependencyProperty__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IDependencyProperty__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IDependencyProperty).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.ISetter2.get_Target, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_TargetPropertyPath__Windows_UI_Xaml__TargetPropertyPath *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.TargetPropertyPath Func_UI_Xaml_TargetPropertyPath__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ITargetPropertyPath__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.ITargetPropertyPath__Impl.Vtbl**);
			global::Windows.UI.Xaml.TargetPropertyPath value__retval = default(global::Windows.UI.Xaml.TargetPropertyPath);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.TargetPropertyPath)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.ITargetPropertyPath).TypeHandle, 
									typeof(global::Windows.UI.Xaml.TargetPropertyPath).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.ISetter2.put_Target, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_TargetPropertyPath__Windows_UI_Xaml__TargetPropertyPath *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_TargetPropertyPath__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.TargetPropertyPath value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ITargetPropertyPath__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.ITargetPropertyPath__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.ITargetPropertyPath__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.ITargetPropertyPath).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.IVisualStateGroup.get_States, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_UI_Xaml_VisualState___Windows_Foundation_Collections__IVector_A_Windows_UI_Xaml_VisualState_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualState> Func__IList_1_UI_Xaml_VisualState___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_VisualState_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_VisualState_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualState> value__retval = default(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualState>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualState>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualState>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.VisualStateChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualStateChangedEventArgs__Windows_UI_Xaml__VisualStateChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_VisualStateChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.VisualStateChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IVisualStateChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IVisualStateChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.IVisualStateChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IVisualStateChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IVisualStateGroup.add_CurrentStateChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_VisualStateChangedEventHandler__Windows_UI_Xaml__VisualStateChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_VisualStateChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.VisualStateChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.VisualStateChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.VisualStateChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.VisualStateChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.VisualStateChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget25>(global::Windows.UI.Xaml.VisualStateChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IVisualState.get_Storyboard, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Storyboard__Windows_UI_Xaml_Media_Animation__Storyboard *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.Storyboard Func_UI_Xaml_Media_Animation_Storyboard__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.IStoryboard__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.Animation.IStoryboard__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.Storyboard value__retval = default(global::Windows.UI.Xaml.Media.Animation.Storyboard);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.Animation.Storyboard)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Animation.IStoryboard).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Animation.Storyboard).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IVisualState.put_Storyboard, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Storyboard__Windows_UI_Xaml_Media_Animation__Storyboard *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_Animation_Storyboard__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.Storyboard value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.IStoryboard__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.Animation.IStoryboard__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.Animation.IStoryboard__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.Animation.IStoryboard).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Media.Animation.ITimeline.get_Duration, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Duration__Windows_UI_Xaml__Duration, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Duration Func_UI_Xaml_Duration__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Duration unsafe_value__retval;
			global::Windows.UI.Xaml.Duration value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Media.Animation.ITimeline.put_Duration, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Duration__Windows_UI_Xaml__Duration, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Duration__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Duration value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.Media.Animation.IStoryboardStatics.GetTargetProperty, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Timeline__Windows_UI_Xaml_Media_Animation__Timeline *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_UI_Xaml_Media_Animation_Timeline__string__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.Timeline element, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING unsafe_path__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string path__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITimeline).TypeHandle
								);
				unsafe_path__retval = default(global::System.Runtime.InteropServices.HSTRING);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									&(unsafe_path__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				path__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_path__retval);
				// Return
				return path__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_path__retval.handle);
			}
		}

		// Signature, Windows.UI.Xaml.Media.Animation.IStoryboardStatics.SetTargetProperty, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Timeline__Windows_UI_Xaml_Media_Animation__Timeline *, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_Animation_Timeline__string__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.Timeline element, 
					string path, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING unsafe_path = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITimeline).TypeHandle
								);
				fixed (char* pBuffer_path = path)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_path;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_path, path, &(hstring_header_path), &(unsafe_path));
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_element, 
										unsafe_path
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Media.Animation.IStoryboard.get_Children, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_TimelineCollection__Windows_UI_Xaml_Media_Animation__TimelineCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.TimelineCollection Func_UI_Xaml_Media_Animation_TimelineCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Media_Animation_Timeline_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Media_Animation_Timeline_V___Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.TimelineCollection value__retval = default(global::Windows.UI.Xaml.Media.Animation.TimelineCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.Animation.TimelineCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.Timeline>).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Animation.TimelineCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.Timeline>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Timeline__Windows_UI_Xaml_Media_Animation__Timeline *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.Timeline Func_uint__UI_Xaml_Media_Animation_Timeline__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.Timeline __value__retval = default(global::Windows.UI.Xaml.Media.Animation.Timeline);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Media.Animation.Timeline)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITimeline).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Animation.Timeline).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.Timeline>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Media_Animation_Timeline___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Media_Animation_Timeline_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Media.Animation.Timeline> Func__IReadOnlyList_1_UI_Xaml_Media_Animation_Timeline___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Media_Animation_Timeline_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Media_Animation_Timeline_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Media.Animation.Timeline> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Media.Animation.Timeline>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Media.Animation.Timeline>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Media.Animation.Timeline>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.Timeline>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Timeline__Windows_UI_Xaml_Media_Animation__Timeline *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Media_Animation_Timeline__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.Timeline value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITimeline).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.Timeline>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Timeline__Windows_UI_Xaml_Media_Animation__Timeline *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Media_Animation_Timeline__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Media.Animation.Timeline value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITimeline).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.Timeline>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Timeline__Windows_UI_Xaml_Media_Animation__Timeline *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_Animation_Timeline__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.Timeline value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITimeline).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.Timeline>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Media_Animation_Timeline__Windows_UI_Xaml_Media_Animation__Timeline * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Media_Animation_Timeline__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Media.Animation.Timeline[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Timeline__Windows_UI_Xaml_Media_Animation__Timeline * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Media.Animation.Timeline)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Media.Animation.ITimeline).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Media.Animation.Timeline).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Timeline__Windows_UI_Xaml_Media_Animation__Timeline * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.Timeline>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Media_Animation_Timeline__Windows_UI_Xaml_Media_Animation__Timeline * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Media_Animation_Timeline__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.Timeline[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITimeline).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Timeline__Windows_UI_Xaml_Media_Animation__Timeline * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Media.Animation.Timeline>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Media_Animation_Timeline___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Media_Animation_Timeline_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.Timeline> Func__Collections_IIterator_1_UI_Xaml_Media_Animation_Timeline___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Media_Animation_Timeline_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Media_Animation_Timeline_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.Timeline> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.Timeline>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.Timeline>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.Timeline>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.Animation.Timeline>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Timeline__Windows_UI_Xaml_Media_Animation__Timeline *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.Timeline Func_UI_Xaml_Media_Animation_Timeline__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.Timeline __value__retval = default(global::Windows.UI.Xaml.Media.Animation.Timeline);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Media.Animation.Timeline)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITimeline).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Animation.Timeline).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.Animation.Timeline>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Media_Animation_Timeline__Windows_UI_Xaml_Media_Animation__Timeline * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Media_Animation_Timeline__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.Timeline[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Timeline__Windows_UI_Xaml_Media_Animation__Timeline * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Media.Animation.Timeline)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Media.Animation.ITimeline).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Media.Animation.Timeline).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_Timeline__Windows_UI_Xaml_Media_Animation__Timeline * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.IVisualState2.get_StateTriggers, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_UI_Xaml_StateTriggerBase___Windows_Foundation_Collections__IVector_A_Windows_UI_Xaml_StateTriggerBase_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<global::Windows.UI.Xaml.StateTriggerBase> Func__IList_1_UI_Xaml_StateTriggerBase___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_StateTriggerBase_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_StateTriggerBase_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.StateTriggerBase> value__retval = default(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.StateTriggerBase>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IList<global::Windows.UI.Xaml.StateTriggerBase>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.StateTriggerBase>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.StateTriggerBase>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_StateTriggerBase__Windows_UI_Xaml__StateTriggerBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.StateTriggerBase Func_uint__UI_Xaml_StateTriggerBase__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.StateTriggerBase __value__retval = default(global::Windows.UI.Xaml.StateTriggerBase);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.StateTriggerBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IStateTriggerBase).TypeHandle, 
									typeof(global::Windows.UI.Xaml.StateTriggerBase).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.StateTriggerBase>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_StateTriggerBase___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_StateTriggerBase_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.StateTriggerBase> Func__IReadOnlyList_1_UI_Xaml_StateTriggerBase___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_StateTriggerBase_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_StateTriggerBase_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.StateTriggerBase> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.StateTriggerBase>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.StateTriggerBase>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.StateTriggerBase>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.StateTriggerBase>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_StateTriggerBase__Windows_UI_Xaml__StateTriggerBase *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_StateTriggerBase__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.StateTriggerBase value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IStateTriggerBase).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.StateTriggerBase>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_StateTriggerBase__Windows_UI_Xaml__StateTriggerBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_StateTriggerBase__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.StateTriggerBase value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IStateTriggerBase).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.StateTriggerBase>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_StateTriggerBase__Windows_UI_Xaml__StateTriggerBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_StateTriggerBase__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.StateTriggerBase value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IStateTriggerBase).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.StateTriggerBase>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_StateTriggerBase__Windows_UI_Xaml__StateTriggerBase * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_StateTriggerBase__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.StateTriggerBase[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_StateTriggerBase__Windows_UI_Xaml__StateTriggerBase * items
						items[mcgIdx] = (global::Windows.UI.Xaml.StateTriggerBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IStateTriggerBase).TypeHandle, 
											typeof(global::Windows.UI.Xaml.StateTriggerBase).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_StateTriggerBase__Windows_UI_Xaml__StateTriggerBase * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.StateTriggerBase>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_StateTriggerBase__Windows_UI_Xaml__StateTriggerBase * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_StateTriggerBase__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.StateTriggerBase[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.IStateTriggerBase).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_StateTriggerBase__Windows_UI_Xaml__StateTriggerBase * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.StateTriggerBase>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_StateTriggerBase___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_StateTriggerBase_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.StateTriggerBase> Func__Collections_IIterator_1_UI_Xaml_StateTriggerBase___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_StateTriggerBase_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_StateTriggerBase_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.StateTriggerBase> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.StateTriggerBase>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.StateTriggerBase>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.StateTriggerBase>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.StateTriggerBase>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_StateTriggerBase__Windows_UI_Xaml__StateTriggerBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.StateTriggerBase Func_UI_Xaml_StateTriggerBase__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.StateTriggerBase __value__retval = default(global::Windows.UI.Xaml.StateTriggerBase);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.StateTriggerBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IStateTriggerBase).TypeHandle, 
									typeof(global::Windows.UI.Xaml.StateTriggerBase).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.StateTriggerBase>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_StateTriggerBase__Windows_UI_Xaml__StateTriggerBase * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_StateTriggerBase__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.StateTriggerBase[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_StateTriggerBase__Windows_UI_Xaml__StateTriggerBase * items
						items[mcgIdx] = (global::Windows.UI.Xaml.StateTriggerBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IStateTriggerBase).TypeHandle, 
											typeof(global::Windows.UI.Xaml.StateTriggerBase).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_StateTriggerBase__Windows_UI_Xaml__StateTriggerBase * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.VisualState>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualState__Windows_UI_Xaml__VisualState *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.VisualState Func_uint__UI_Xaml_VisualState__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualState__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl**);
			global::Windows.UI.Xaml.VisualState __value__retval = default(global::Windows.UI.Xaml.VisualState);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.VisualState)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IVisualState).TypeHandle, 
									typeof(global::Windows.UI.Xaml.VisualState).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.VisualState>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_VisualState___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_VisualState_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.VisualState> Func__IReadOnlyList_1_UI_Xaml_VisualState___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_VisualState_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_VisualState_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.VisualState> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.VisualState>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.VisualState>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.VisualState>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.VisualState>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualState__Windows_UI_Xaml__VisualState *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_VisualState__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.VisualState value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualState__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IVisualState__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IVisualState).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.VisualState>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualState__Windows_UI_Xaml__VisualState *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_VisualState__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.VisualState value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualState__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IVisualState__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IVisualState).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.VisualState>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualState__Windows_UI_Xaml__VisualState *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_VisualState__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.VisualState value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualState__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IVisualState__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IVisualState).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.VisualState>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_VisualState__Windows_UI_Xaml__VisualState * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_VisualState__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.VisualState[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IVisualState__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IVisualState__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualState__Windows_UI_Xaml__VisualState * items
						items[mcgIdx] = (global::Windows.UI.Xaml.VisualState)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IVisualState).TypeHandle, 
											typeof(global::Windows.UI.Xaml.VisualState).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualState__Windows_UI_Xaml__VisualState * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.VisualState>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_VisualState__Windows_UI_Xaml__VisualState * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_VisualState__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.VisualState[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IVisualState__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.IVisualState__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.IVisualState).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualState__Windows_UI_Xaml__VisualState * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.VisualState>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_VisualState___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_VisualState_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.VisualState> Func__Collections_IIterator_1_UI_Xaml_VisualState___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_VisualState_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_VisualState_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.VisualState> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.VisualState>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.VisualState>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.VisualState>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.VisualState>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualState__Windows_UI_Xaml__VisualState *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.VisualState Func_UI_Xaml_VisualState__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualState__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl**);
			global::Windows.UI.Xaml.VisualState __value__retval = default(global::Windows.UI.Xaml.VisualState);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.VisualState)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IVisualState).TypeHandle, 
									typeof(global::Windows.UI.Xaml.VisualState).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.VisualState>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_VisualState__Windows_UI_Xaml__VisualState * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_VisualState__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.VisualState[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IVisualState__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IVisualState__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualState__Windows_UI_Xaml__VisualState * items
						items[mcgIdx] = (global::Windows.UI.Xaml.VisualState)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IVisualState).TypeHandle, 
											typeof(global::Windows.UI.Xaml.VisualState).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualState__Windows_UI_Xaml__VisualState * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.VisualStateGroup>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualStateGroup__Windows_UI_Xaml__VisualStateGroup *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.VisualStateGroup Func_uint__UI_Xaml_VisualStateGroup__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl**);
			global::Windows.UI.Xaml.VisualStateGroup __value__retval = default(global::Windows.UI.Xaml.VisualStateGroup);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.VisualStateGroup)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IVisualStateGroup).TypeHandle, 
									typeof(global::Windows.UI.Xaml.VisualStateGroup).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.VisualStateGroup>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_VisualStateGroup___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_VisualStateGroup_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.VisualStateGroup> Func__IReadOnlyList_1_UI_Xaml_VisualStateGroup___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_VisualStateGroup_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_VisualStateGroup_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.VisualStateGroup> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.VisualStateGroup>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.VisualStateGroup>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.VisualStateGroup>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.VisualStateGroup>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualStateGroup__Windows_UI_Xaml__VisualStateGroup *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_VisualStateGroup__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.VisualStateGroup value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IVisualStateGroup).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.VisualStateGroup>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualStateGroup__Windows_UI_Xaml__VisualStateGroup *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_VisualStateGroup__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.VisualStateGroup value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IVisualStateGroup).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.VisualStateGroup>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualStateGroup__Windows_UI_Xaml__VisualStateGroup *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_VisualStateGroup__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.VisualStateGroup value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IVisualStateGroup).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.VisualStateGroup>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_VisualStateGroup__Windows_UI_Xaml__VisualStateGroup * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_VisualStateGroup__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.VisualStateGroup[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualStateGroup__Windows_UI_Xaml__VisualStateGroup * items
						items[mcgIdx] = (global::Windows.UI.Xaml.VisualStateGroup)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IVisualStateGroup).TypeHandle, 
											typeof(global::Windows.UI.Xaml.VisualStateGroup).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualStateGroup__Windows_UI_Xaml__VisualStateGroup * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.VisualStateGroup>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_VisualStateGroup__Windows_UI_Xaml__VisualStateGroup * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_VisualStateGroup__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.VisualStateGroup[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.IVisualStateGroup).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualStateGroup__Windows_UI_Xaml__VisualStateGroup * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.VisualStateGroup>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_VisualStateGroup___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_VisualStateGroup_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.VisualStateGroup> Func__Collections_IIterator_1_UI_Xaml_VisualStateGroup___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_VisualStateGroup_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_VisualStateGroup_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.VisualStateGroup> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.VisualStateGroup>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.VisualStateGroup>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.VisualStateGroup>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.VisualStateGroup>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualStateGroup__Windows_UI_Xaml__VisualStateGroup *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.VisualStateGroup Func_UI_Xaml_VisualStateGroup__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl**);
			global::Windows.UI.Xaml.VisualStateGroup __value__retval = default(global::Windows.UI.Xaml.VisualStateGroup);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.VisualStateGroup)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IVisualStateGroup).TypeHandle, 
									typeof(global::Windows.UI.Xaml.VisualStateGroup).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.VisualStateGroup>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_VisualStateGroup__Windows_UI_Xaml__VisualStateGroup * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_VisualStateGroup__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.VisualStateGroup[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualStateGroup__Windows_UI_Xaml__VisualStateGroup * items
						items[mcgIdx] = (global::Windows.UI.Xaml.VisualStateGroup)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IVisualStateGroup).TypeHandle, 
											typeof(global::Windows.UI.Xaml.VisualStateGroup).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_VisualStateGroup__Windows_UI_Xaml__VisualStateGroup * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IVisualStateGroup>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IVisualStateGroup___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IVisualStateGroup_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IVisualStateGroup> Func__Collections_IIterator_1_UI_Xaml_IVisualStateGroup___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IVisualStateGroup_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IVisualStateGroup_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IVisualStateGroup> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IVisualStateGroup>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IVisualStateGroup>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IVisualStateGroup>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IVisualStateGroup>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualStateGroup__Windows_UI_Xaml__IVisualStateGroup *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IVisualStateGroup Func_UI_Xaml_IVisualStateGroup__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl**);
			global::Windows.UI.Xaml.IVisualStateGroup __value__retval = default(global::Windows.UI.Xaml.IVisualStateGroup);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IVisualStateGroup)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IVisualStateGroup).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IVisualStateGroup>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IVisualStateGroup__Windows_UI_Xaml__IVisualStateGroup * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IVisualStateGroup__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IVisualStateGroup[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualStateGroup__Windows_UI_Xaml__IVisualStateGroup * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IVisualStateGroup)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IVisualStateGroup).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualStateGroup__Windows_UI_Xaml__IVisualStateGroup * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.IVisualStateManagerStatics.GetVisualStateGroups, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml__FrameworkElement *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_UI_Xaml_VisualStateGroup___Windows_Foundation_Collections__IVector_A_Windows_UI_Xaml_VisualStateGroup_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualStateGroup> Func_UI_Xaml_FrameworkElement___IList_1_UI_Xaml_VisualStateGroup___(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.FrameworkElement obj, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl** unsafe_obj = default(global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**);
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_VisualStateGroup_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_VisualStateGroup_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualStateGroup> value__retval = default(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualStateGroup>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_obj = (global::Windows.UI.Xaml.IFrameworkElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									obj, 
									typeof(global::Windows.UI.Xaml.IFrameworkElement).TypeHandle
								);
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_obj, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualStateGroup>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.VisualStateGroup>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_obj)));
				global::System.GC.KeepAlive(obj);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IVisualState>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IVisualState___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IVisualState_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IVisualState> Func__Collections_IIterator_1_UI_Xaml_IVisualState___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IVisualState_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IVisualState_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IVisualState> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IVisualState>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IVisualState>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IVisualState>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IVisualState>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualState__Windows_UI_Xaml__IVisualState *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IVisualState Func_UI_Xaml_IVisualState__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualState__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl**);
			global::Windows.UI.Xaml.IVisualState __value__retval = default(global::Windows.UI.Xaml.IVisualState);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IVisualState)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IVisualState).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IVisualState>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IVisualState__Windows_UI_Xaml__IVisualState * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IVisualState__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IVisualState[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IVisualState__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IVisualState__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualState__Windows_UI_Xaml__IVisualState * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IVisualState)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IVisualState).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualState__Windows_UI_Xaml__IVisualState * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IVisualState2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IVisualState2___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IVisualState2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IVisualState2> Func__Collections_IIterator_1_UI_Xaml_IVisualState2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IVisualState2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IVisualState2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IVisualState2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IVisualState2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IVisualState2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IVisualState2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IVisualState2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualState2__Windows_UI_Xaml__IVisualState2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IVisualState2 Func_UI_Xaml_IVisualState2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualState2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IVisualState2__Impl.Vtbl**);
			global::Windows.UI.Xaml.IVisualState2 __value__retval = default(global::Windows.UI.Xaml.IVisualState2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IVisualState2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IVisualState2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IVisualState2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IVisualState2__Windows_UI_Xaml__IVisualState2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IVisualState2__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IVisualState2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IVisualState2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IVisualState2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IVisualState2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IVisualState2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualState2__Windows_UI_Xaml__IVisualState2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IVisualState2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IVisualState2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualState2__Windows_UI_Xaml__IVisualState2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Media.Animation.ITimeline>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Media_Animation_ITimeline___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Media_Animation_ITimeline_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.ITimeline> Func__Collections_IIterator_1_UI_Xaml_Media_Animation_ITimeline___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Media_Animation_ITimeline_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Media_Animation_ITimeline_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.ITimeline> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.ITimeline>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.ITimeline>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.ITimeline>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.Animation.ITimeline>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_ITimeline__Windows_UI_Xaml_Media_Animation__ITimeline *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.ITimeline Func_UI_Xaml_Media_Animation_ITimeline__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.ITimeline __value__retval = default(global::Windows.UI.Xaml.Media.Animation.ITimeline);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Media.Animation.ITimeline)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITimeline).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.Animation.ITimeline>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Media_Animation_ITimeline__Windows_UI_Xaml_Media_Animation__ITimeline * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Media_Animation_ITimeline__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.ITimeline[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_ITimeline__Windows_UI_Xaml_Media_Animation__ITimeline * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Media.Animation.ITimeline)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Media.Animation.ITimeline).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_ITimeline__Windows_UI_Xaml_Media_Animation__ITimeline * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Media.Animation.ITimeline>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_ITimeline__Windows_UI_Xaml_Media_Animation__ITimeline *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.ITimeline Func_uint__UI_Xaml_Media_Animation_ITimeline__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.ITimeline __value__retval = default(global::Windows.UI.Xaml.Media.Animation.ITimeline);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Media.Animation.ITimeline)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITimeline).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Media.Animation.ITimeline>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_ITimeline__Windows_UI_Xaml_Media_Animation__ITimeline *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Media_Animation_ITimeline__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.ITimeline value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.Animation.ITimeline).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Media.Animation.ITimeline>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Media_Animation_ITimeline__Windows_UI_Xaml_Media_Animation__ITimeline * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Media_Animation_ITimeline__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Media.Animation.ITimeline[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Media.Animation.ITimeline__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_ITimeline__Windows_UI_Xaml_Media_Animation__ITimeline * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Media.Animation.ITimeline)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Media.Animation.ITimeline).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_ITimeline__Windows_UI_Xaml_Media_Animation__ITimeline * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.ISetterBase>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_ISetterBase___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_ISetterBase_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.ISetterBase> Func__Collections_IIterator_1_UI_Xaml_ISetterBase___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_ISetterBase_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_ISetterBase_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.ISetterBase> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.ISetterBase>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.ISetterBase>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.ISetterBase>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.ISetterBase>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_ISetterBase__Windows_UI_Xaml__ISetterBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ISetterBase Func_UI_Xaml_ISetterBase__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.ISetterBase __value__retval = default(global::Windows.UI.Xaml.ISetterBase);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.ISetterBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.ISetterBase).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.ISetterBase>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_ISetterBase__Windows_UI_Xaml__ISetterBase * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_ISetterBase__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ISetterBase[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_ISetterBase__Windows_UI_Xaml__ISetterBase * items
						items[mcgIdx] = (global::Windows.UI.Xaml.ISetterBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.ISetterBase).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_ISetterBase__Windows_UI_Xaml__ISetterBase * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.ISetterBase>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_ISetterBase__Windows_UI_Xaml__ISetterBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ISetterBase Func_uint__UI_Xaml_ISetterBase__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.ISetterBase __value__retval = default(global::Windows.UI.Xaml.ISetterBase);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.ISetterBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.ISetterBase).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.ISetterBase>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_ISetterBase__Windows_UI_Xaml__ISetterBase *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_ISetterBase__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ISetterBase value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.ISetterBase).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.ISetterBase>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_ISetterBase__Windows_UI_Xaml__ISetterBase * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_ISetterBase__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.ISetterBase[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.ISetterBase__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_ISetterBase__Windows_UI_Xaml__ISetterBase * items
						items[mcgIdx] = (global::Windows.UI.Xaml.ISetterBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.ISetterBase).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_ISetterBase__Windows_UI_Xaml__ISetterBase * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IStateTriggerBase>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IStateTriggerBase___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IStateTriggerBase_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IStateTriggerBase> Func__Collections_IIterator_1_UI_Xaml_IStateTriggerBase___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IStateTriggerBase_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IStateTriggerBase_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IStateTriggerBase> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IStateTriggerBase>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IStateTriggerBase>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IStateTriggerBase>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IStateTriggerBase>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IStateTriggerBase__Windows_UI_Xaml__IStateTriggerBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IStateTriggerBase Func_UI_Xaml_IStateTriggerBase__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.IStateTriggerBase __value__retval = default(global::Windows.UI.Xaml.IStateTriggerBase);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IStateTriggerBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IStateTriggerBase).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IStateTriggerBase>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IStateTriggerBase__Windows_UI_Xaml__IStateTriggerBase * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IStateTriggerBase__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IStateTriggerBase[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IStateTriggerBase__Windows_UI_Xaml__IStateTriggerBase * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IStateTriggerBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IStateTriggerBase).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IStateTriggerBase__Windows_UI_Xaml__IStateTriggerBase * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.IStateTriggerBaseProtected>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_IStateTriggerBaseProtected___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_IStateTriggerBaseProtected_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IStateTriggerBaseProtected> Func__Collections_IIterator_1_UI_Xaml_IStateTriggerBaseProtected___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IStateTriggerBaseProtected_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_IStateTriggerBaseProtected_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IStateTriggerBaseProtected> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IStateTriggerBaseProtected>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IStateTriggerBaseProtected>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.IStateTriggerBaseProtected>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IStateTriggerBaseProtected>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IStateTriggerBaseProtected__Windows_UI_Xaml__IStateTriggerBaseProtected *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IStateTriggerBaseProtected Func_UI_Xaml_IStateTriggerBaseProtected__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStateTriggerBaseProtected__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IStateTriggerBaseProtected__Impl.Vtbl**);
			global::Windows.UI.Xaml.IStateTriggerBaseProtected __value__retval = default(global::Windows.UI.Xaml.IStateTriggerBaseProtected);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IStateTriggerBaseProtected)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IStateTriggerBaseProtected).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.IStateTriggerBaseProtected>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IStateTriggerBaseProtected__Windows_UI_Xaml__IStateTriggerBaseProtected * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_IStateTriggerBaseProtected__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IStateTriggerBaseProtected[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IStateTriggerBaseProtected__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IStateTriggerBaseProtected__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IStateTriggerBaseProtected__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IStateTriggerBaseProtected__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IStateTriggerBaseProtected__Windows_UI_Xaml__IStateTriggerBaseProtected * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IStateTriggerBaseProtected)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IStateTriggerBaseProtected).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IStateTriggerBaseProtected__Windows_UI_Xaml__IStateTriggerBaseProtected * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Media.Animation.IDoubleAnimation.get_From, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_double___Windows_Foundation__IReference_A_double_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Nullable<double> Func_Nullable_1_double___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_double_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Nullable_A_double_V___Impl.Vtbl**);
			global::System.Nullable<double> value__retval = default(global::System.Nullable<double>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					value__retval = (double)global::System.Runtime.InteropServices.McgModuleManager.UnboxIfBoxed(
										global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
															((global::System.IntPtr)unsafe_value__retval), 
															typeof(global::Windows.Foundation.IReference<double>).TypeHandle
														), 
										"Windows.Foundation.IReference`1<Double>"
									);
				else
					value__retval = null;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Media.Animation.IDoubleAnimation.put_From, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_double___Windows_Foundation__IReference_A_double_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Nullable_1_double___(
					global::System.__ComObject __this, 
					global::System.Nullable<double> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_double_V___Impl.Vtbl** unsafe_value = default(global::System.Nullable_A_double_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (value.HasValue)
				{
					global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<double> unsafe_value_Wrapper = new global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<double>(value.Value, 9);
					unsafe_value = (global::System.Nullable_A_double_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ManagedObjectToComInterface(
										unsafe_value_Wrapper, 
										typeof(global::Windows.Foundation.IReference<double>).TypeHandle
									);
				}
				else
					unsafe_value = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Media.Animation.IObjectKeyFrame.get_KeyTime, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Animation_KeyTime__Windows_UI_Xaml_Media_Animation__KeyTime, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.KeyTime Func_UI_Xaml_Media_Animation_KeyTime__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.KeyTime unsafe_value__retval;
			global::Windows.UI.Xaml.Media.Animation.KeyTime value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Media.Animation.IObjectKeyFrame.put_KeyTime, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Animation_KeyTime__Windows_UI_Xaml_Media_Animation__KeyTime, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_Animation_KeyTime__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.KeyTime value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_ObjectKeyFrame__Windows_UI_Xaml_Media_Animation__ObjectKeyFrame *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame Func_uint__UI_Xaml_Media_Animation_ObjectKeyFrame__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame __value__retval = default(global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Media_Animation_ObjectKeyFrame___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Media_Animation_ObjectKeyFrame_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame> Func__IReadOnlyList_1_UI_Xaml_Media_Animation_ObjectKeyFrame___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Media_Animation_ObjectKeyFrame_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Media_Animation_ObjectKeyFrame_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_ObjectKeyFrame__Windows_UI_Xaml_Media_Animation__ObjectKeyFrame *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Media_Animation_ObjectKeyFrame__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_ObjectKeyFrame__Windows_UI_Xaml_Media_Animation__ObjectKeyFrame *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Media_Animation_ObjectKeyFrame__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_ObjectKeyFrame__Windows_UI_Xaml_Media_Animation__ObjectKeyFrame *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_Animation_ObjectKeyFrame__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Media_Animation_ObjectKeyFrame__Windows_UI_Xaml_Media_Animation__ObjectKeyFrame * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Media_Animation_ObjectKeyFrame__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_ObjectKeyFrame__Windows_UI_Xaml_Media_Animation__ObjectKeyFrame * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_ObjectKeyFrame__Windows_UI_Xaml_Media_Animation__ObjectKeyFrame * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Media_Animation_ObjectKeyFrame__Windows_UI_Xaml_Media_Animation__ObjectKeyFrame * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Media_Animation_ObjectKeyFrame__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_ObjectKeyFrame__Windows_UI_Xaml_Media_Animation__ObjectKeyFrame * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Media_Animation_ObjectKeyFrame___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Media_Animation_ObjectKeyFrame_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame> Func__Collections_IIterator_1_UI_Xaml_Media_Animation_ObjectKeyFrame___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Media_Animation_ObjectKeyFrame_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Media_Animation_ObjectKeyFrame_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_ObjectKeyFrame__Windows_UI_Xaml_Media_Animation__ObjectKeyFrame *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame Func_UI_Xaml_Media_Animation_ObjectKeyFrame__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame __value__retval = default(global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Media_Animation_ObjectKeyFrame__Windows_UI_Xaml_Media_Animation__ObjectKeyFrame * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Media_Animation_ObjectKeyFrame__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_ObjectKeyFrame__Windows_UI_Xaml_Media_Animation__ObjectKeyFrame * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_ObjectKeyFrame__Windows_UI_Xaml_Media_Animation__ObjectKeyFrame * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Media.Animation.IObjectKeyFrame>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Media_Animation_IObjectKeyFrame___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Media_Animation_IObjectKeyFrame_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame> Func__Collections_IIterator_1_UI_Xaml_Media_Animation_IObjectKeyFrame___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Media_Animation_IObjectKeyFrame_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Media_Animation_IObjectKeyFrame_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.Animation.IObjectKeyFrame>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_IObjectKeyFrame__Windows_UI_Xaml_Media_Animation__IObjectKeyFrame *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame Func_UI_Xaml_Media_Animation_IObjectKeyFrame__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame __value__retval = default(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Media.Animation.IObjectKeyFrame>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Media_Animation_IObjectKeyFrame__Windows_UI_Xaml_Media_Animation__IObjectKeyFrame * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Media_Animation_IObjectKeyFrame__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_IObjectKeyFrame__Windows_UI_Xaml_Media_Animation__IObjectKeyFrame * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_IObjectKeyFrame__Windows_UI_Xaml_Media_Animation__IObjectKeyFrame * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Media.Animation.IObjectKeyFrame>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_IObjectKeyFrame__Windows_UI_Xaml_Media_Animation__IObjectKeyFrame *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame Func_uint__UI_Xaml_Media_Animation_IObjectKeyFrame__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame __value__retval = default(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Media.Animation.IObjectKeyFrame>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_IObjectKeyFrame__Windows_UI_Xaml_Media_Animation__IObjectKeyFrame *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Media_Animation_IObjectKeyFrame__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Media.Animation.IObjectKeyFrame>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Media_Animation_IObjectKeyFrame__Windows_UI_Xaml_Media_Animation__IObjectKeyFrame * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Media_Animation_IObjectKeyFrame__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_IObjectKeyFrame__Windows_UI_Xaml_Media_Animation__IObjectKeyFrame * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Media.Animation.IObjectKeyFrame).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Media_Animation_IObjectKeyFrame__Windows_UI_Xaml_Media_Animation__IObjectKeyFrame * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Media.Animation.IObjectAnimationUsingKeyFrames.get_KeyFrames, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_ObjectKeyFrameCollection__Windows_UI_Xaml_Media_Animation__ObjectKeyFrameCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection Func_UI_Xaml_Media_Animation_ObjectKeyFrameCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Media_Animation_ObjectKeyFrame_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Media_Animation_ObjectKeyFrame_V___Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection value__retval = default(global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Shapes.IShape.get_StrokeEndLineCap, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Media_PenLineCap__Windows_UI_Xaml_Media__PenLineCap, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.PenLineCap Func_UI_Xaml_Media_PenLineCap__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.PenLineCap unsafe_value__retval;
			global::Windows.UI.Xaml.Media.PenLineCap value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Shapes.IShape.get_StrokeDashArray, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_DoubleCollection__Windows_UI_Xaml_Media__DoubleCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.DoubleCollection Func_UI_Xaml_Media_DoubleCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_double_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_double_V___Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.DoubleCollection value__retval = default(global::Windows.UI.Xaml.Media.DoubleCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.DoubleCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<double>).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.DoubleCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Shapes.IShape.put_StrokeDashArray, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_DoubleCollection__Windows_UI_Xaml_Media__DoubleCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_DoubleCollection__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.DoubleCollection value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_double_V___Impl.Vtbl** unsafe_value = default(global::System.Collections.Generic.IList_A_double_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.Collections.Generic.IList_A_double_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::System.Collections.Generic.IList<double>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentPresenter.get_ContentTemplate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataTemplate__Windows_UI_Xaml__DataTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DataTemplate Func_UI_Xaml_DataTemplate__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**);
			global::Windows.UI.Xaml.DataTemplate value__retval = default(global::Windows.UI.Xaml.DataTemplate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.DataTemplate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IDataTemplate).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DataTemplate).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentPresenter.put_ContentTemplate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DataTemplate__Windows_UI_Xaml__DataTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DataTemplate__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DataTemplate value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IDataTemplate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IDataTemplate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Automation.IAutomationPropertiesStatics2.GetAccessibilityView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AccessibilityView__Windows_UI_Xaml_Automation_Peers__AccessibilityView, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AccessibilityView Func_UI_Xaml_DependencyObject__UI_Xaml_Automation_Peers_AccessibilityView__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject element, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.AccessibilityView unsafe_value__retval;
			global::Windows.UI.Xaml.Automation.Peers.AccessibilityView value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = unsafe_value__retval;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Automation.IAutomationPropertiesStatics2.SetAccessibilityView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AccessibilityView__Windows_UI_Xaml_Automation_Peers__AccessibilityView, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DependencyObject__int(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject element, 
					int value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.TextChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextChangedEventArgs__Windows_UI_Xaml_Controls__TextChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Controls_TextChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Controls.TextChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.ITextChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Controls.ITextChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Controls.ITextChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Controls.ITextChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox.add_TextChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_TextChangedEventHandler__Windows_UI_Xaml_Controls__TextChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Controls_TextChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.TextChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.TextChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.TextChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.TextChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.TextChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget26>(global::Windows.UI.Xaml.Controls.TextChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox2.get_SelectionHighlightColor, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_SolidColorBrush__Windows_UI_Xaml_Media__SolidColorBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.SolidColorBrush Func_UI_Xaml_Media_SolidColorBrush__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.ISolidColorBrush__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.ISolidColorBrush__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.SolidColorBrush value__retval = default(global::Windows.UI.Xaml.Media.SolidColorBrush);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.SolidColorBrush)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.ISolidColorBrush).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.SolidColorBrush).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox2.put_SelectionHighlightColor, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_SolidColorBrush__Windows_UI_Xaml_Media__SolidColorBrush *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_SolidColorBrush__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.SolidColorBrush value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.ISolidColorBrush__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.ISolidColorBrush__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.ISolidColorBrush__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.ISolidColorBrush).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.TextControlPasteEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextControlPasteEventArgs__Windows_UI_Xaml_Controls__TextControlPasteEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Controls_TextControlPasteEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Controls.TextControlPasteEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.ITextControlPasteEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Controls.ITextControlPasteEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Controls.ITextControlPasteEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Controls.ITextControlPasteEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox2.add_Paste, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_TextControlPasteEventHandler__Windows_UI_Xaml_Controls__TextControlPasteEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Controls_TextControlPasteEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget27>(global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls__TextBox *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs__Windows_UI_Xaml_Controls__TextCompositionStartedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionStartedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.TextBox sender, 
					global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.ITextBox).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.ITextCompositionStartedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox3.add_TextCompositionStarted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionStartedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget28>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls__TextBox *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs__Windows_UI_Xaml_Controls__TextCompositionChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.TextBox sender, 
					global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.ITextBox).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.ITextCompositionChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox3.add_TextCompositionChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget29>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls__TextBox *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs__Windows_UI_Xaml_Controls__TextCompositionEndedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionEndedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.TextBox sender, 
					global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.ITextBox).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.ITextCompositionEndedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox3.add_TextCompositionEnded, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionEndedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget30>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls__TextBox *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs__Windows_UI_Xaml_Controls__CandidateWindowBoundsChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.TextBox sender, 
					global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.ITextBox).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.ICandidateWindowBoundsChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox3.add_CandidateWindowBoundsChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget31>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls__TextBox *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs__Windows_UI_Xaml_Controls__TextBoxTextChangingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextBoxTextChangingEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.TextBox sender, 
					global::Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.ITextBox__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.ITextBox).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.ITextBoxTextChangingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBox3.add_TextChanging, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextBoxTextChangingEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget32>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewerStatics.GetHorizontalScrollBarVisibility, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_ScrollBarVisibility__Windows_UI_Xaml_Controls__ScrollBarVisibility, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ScrollBarVisibility Func_UI_Xaml_DependencyObject__UI_Xaml_Controls_ScrollBarVisibility__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject element, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ScrollBarVisibility unsafe_horizontalScrollBarVisibility__retval;
			global::Windows.UI.Xaml.Controls.ScrollBarVisibility horizontalScrollBarVisibility__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									&(unsafe_horizontalScrollBarVisibility__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				horizontalScrollBarVisibility__retval = unsafe_horizontalScrollBarVisibility__retval;
				// Return
				return horizontalScrollBarVisibility__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewerStatics.GetIsHorizontalRailEnabled, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_DependencyObject__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject element, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			bool isHorizontalRailEnabled__retval;
			sbyte unsafe_isHorizontalRailEnabled__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									&(unsafe_isHorizontalRailEnabled__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				isHorizontalRailEnabled__retval = unsafe_isHorizontalRailEnabled__retval != 0;
				// Return
				return isHorizontalRailEnabled__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewerStatics.SetIsHorizontalRailEnabled, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DependencyObject__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject element, 
					bool isHorizontalRailEnabled, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			sbyte unsafe_isHorizontalRailEnabled;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				unsafe_isHorizontalRailEnabled = (isHorizontalRailEnabled ? ((sbyte)1) : ((sbyte)0));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									unsafe_isHorizontalRailEnabled
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewerStatics.GetHorizontalScrollMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_ScrollMode__Windows_UI_Xaml_Controls__ScrollMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ScrollMode Func_UI_Xaml_DependencyObject__UI_Xaml_Controls_ScrollMode__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject element, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ScrollMode unsafe_horizontalScrollMode__retval;
			global::Windows.UI.Xaml.Controls.ScrollMode horizontalScrollMode__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									&(unsafe_horizontalScrollMode__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				horizontalScrollMode__retval = unsafe_horizontalScrollMode__retval;
				// Return
				return horizontalScrollMode__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewerStatics.GetZoomMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_ZoomMode__Windows_UI_Xaml_Controls__ZoomMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ZoomMode Func_UI_Xaml_DependencyObject__UI_Xaml_Controls_ZoomMode__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject element, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ZoomMode unsafe_zoomMode__retval;
			global::Windows.UI.Xaml.Controls.ZoomMode zoomMode__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									&(unsafe_zoomMode__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				zoomMode__retval = unsafe_zoomMode__retval;
				// Return
				return zoomMode__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewer.get_HorizontalScrollBarVisibility, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_ScrollBarVisibility__Windows_UI_Xaml_Controls__ScrollBarVisibility, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ScrollBarVisibility Func_UI_Xaml_Controls_ScrollBarVisibility__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ScrollBarVisibility unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.ScrollBarVisibility value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewer.get_HorizontalScrollMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_ScrollMode__Windows_UI_Xaml_Controls__ScrollMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ScrollMode Func_UI_Xaml_Controls_ScrollMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ScrollMode unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.ScrollMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewer.get_ZoomMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_ZoomMode__Windows_UI_Xaml_Controls__ZoomMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ZoomMode Func_UI_Xaml_Controls_ZoomMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ZoomMode unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.ZoomMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, System.EventHandler<Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs__Windows_UI_Xaml_Controls__ScrollViewerViewChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Controls_ScrollViewerViewChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IScrollViewerViewChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewer.add_ViewChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs___Windows_Foundation__EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::System.EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget33>(global::System.EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, System.EventHandler<Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs__Windows_UI_Xaml_Controls__ScrollViewerViewChangingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Controls_ScrollViewerViewChangingEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IScrollViewerViewChangingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewer2.add_ViewChanging, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs___Windows_Foundation__EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs_V___Impl.Vtbl** unsafe_value = default(global::System.EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget34>(global::System.EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IItemsControl.get_ItemsPanel, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ItemsPanelTemplate__Windows_UI_Xaml_Controls__ItemsPanelTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ItemsPanelTemplate Func_UI_Xaml_Controls_ItemsPanelTemplate__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IItemsPanelTemplate__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Controls.IItemsPanelTemplate__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ItemsPanelTemplate value__retval = default(global::Windows.UI.Xaml.Controls.ItemsPanelTemplate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Controls.ItemsPanelTemplate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IItemsPanelTemplate).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.ItemsPanelTemplate).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IItemsControl.put_ItemsPanel, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ItemsPanelTemplate__Windows_UI_Xaml_Controls__ItemsPanelTemplate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ItemsPanelTemplate__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ItemsPanelTemplate value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IItemsPanelTemplate__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.IItemsPanelTemplate__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.IItemsPanelTemplate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.IItemsPanelTemplate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IItemsControlOverrides.ClearContainerForItemOverride, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DependencyObject__object__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject element, 
					object item, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_item = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				unsafe_item = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(item);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									unsafe_item
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_item)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IItemsControlOverrides.OnItemContainerStyleChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Style__Windows_UI_Xaml__Style *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Style__Windows_UI_Xaml__Style *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Style__UI_Xaml_Style__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Style oldItemContainerStyle, 
					global::Windows.UI.Xaml.Style newItemContainerStyle, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStyle__Impl.Vtbl** unsafe_oldItemContainerStyle = default(global::Windows.UI.Xaml.IStyle__Impl.Vtbl**);
			global::Windows.UI.Xaml.IStyle__Impl.Vtbl** unsafe_newItemContainerStyle = default(global::Windows.UI.Xaml.IStyle__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldItemContainerStyle = (global::Windows.UI.Xaml.IStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									oldItemContainerStyle, 
									typeof(global::Windows.UI.Xaml.IStyle).TypeHandle
								);
				unsafe_newItemContainerStyle = (global::Windows.UI.Xaml.IStyle__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									newItemContainerStyle, 
									typeof(global::Windows.UI.Xaml.IStyle).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_oldItemContainerStyle, 
									unsafe_newItemContainerStyle
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldItemContainerStyle)));
				global::System.GC.KeepAlive(oldItemContainerStyle);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newItemContainerStyle)));
				global::System.GC.KeepAlive(newItemContainerStyle);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IItemsControlOverrides.OnItemContainerStyleSelectorChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_StyleSelector__Windows_UI_Xaml_Controls__StyleSelector *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_StyleSelector__Windows_UI_Xaml_Controls__StyleSelector *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_StyleSelector__UI_Xaml_Controls_StyleSelector__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.StyleSelector oldItemContainerStyleSelector, 
					global::Windows.UI.Xaml.Controls.StyleSelector newItemContainerStyleSelector, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IStyleSelector__Impl.Vtbl** unsafe_oldItemContainerStyleSelector = default(global::Windows.UI.Xaml.Controls.IStyleSelector__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IStyleSelector__Impl.Vtbl** unsafe_newItemContainerStyleSelector = default(global::Windows.UI.Xaml.Controls.IStyleSelector__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldItemContainerStyleSelector = (global::Windows.UI.Xaml.Controls.IStyleSelector__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									oldItemContainerStyleSelector, 
									typeof(global::Windows.UI.Xaml.Controls.IStyleSelector).TypeHandle
								);
				unsafe_newItemContainerStyleSelector = (global::Windows.UI.Xaml.Controls.IStyleSelector__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									newItemContainerStyleSelector, 
									typeof(global::Windows.UI.Xaml.Controls.IStyleSelector).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_oldItemContainerStyleSelector, 
									unsafe_newItemContainerStyleSelector
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldItemContainerStyleSelector)));
				global::System.GC.KeepAlive(oldItemContainerStyleSelector);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newItemContainerStyleSelector)));
				global::System.GC.KeepAlive(newItemContainerStyleSelector);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IItemsControlOverrides.OnGroupStyleSelectorChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_GroupStyleSelector__Windows_UI_Xaml_Controls__GroupStyleSelector *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_GroupStyleSelector__Windows_UI_Xaml_Controls__GroupStyleSelector *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_GroupStyleSelector__UI_Xaml_Controls_GroupStyleSelector__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.GroupStyleSelector oldGroupStyleSelector, 
					global::Windows.UI.Xaml.Controls.GroupStyleSelector newGroupStyleSelector, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IGroupStyleSelector__Impl.Vtbl** unsafe_oldGroupStyleSelector = default(global::Windows.UI.Xaml.Controls.IGroupStyleSelector__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IGroupStyleSelector__Impl.Vtbl** unsafe_newGroupStyleSelector = default(global::Windows.UI.Xaml.Controls.IGroupStyleSelector__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldGroupStyleSelector = (global::Windows.UI.Xaml.Controls.IGroupStyleSelector__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									oldGroupStyleSelector, 
									typeof(global::Windows.UI.Xaml.Controls.IGroupStyleSelector).TypeHandle
								);
				unsafe_newGroupStyleSelector = (global::Windows.UI.Xaml.Controls.IGroupStyleSelector__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									newGroupStyleSelector, 
									typeof(global::Windows.UI.Xaml.Controls.IGroupStyleSelector).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_oldGroupStyleSelector, 
									unsafe_newGroupStyleSelector
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldGroupStyleSelector)));
				global::System.GC.KeepAlive(oldGroupStyleSelector);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newGroupStyleSelector)));
				global::System.GC.KeepAlive(newGroupStyleSelector);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IStyleSelectorOverrides.SelectStyleCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Style__Windows_UI_Xaml__Style *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Style Func_object__UI_Xaml_DependencyObject__UI_Xaml_Style__(
					global::System.__ComObject __this, 
					object item, 
					global::Windows.UI.Xaml.DependencyObject container, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_item = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_container = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.IStyle__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.IStyle__Impl.Vtbl**);
			global::Windows.UI.Xaml.Style returnValue__retval = default(global::Windows.UI.Xaml.Style);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_item = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(item);
				unsafe_container = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									container, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_item, 
									unsafe_container, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.Style)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.IStyle).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Style).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_item)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_container)));
				global::System.GC.KeepAlive(container);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides.SelectGroupStyleCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_GroupStyle__Windows_UI_Xaml_Controls__GroupStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.GroupStyle Func_object__uint__UI_Xaml_Controls_GroupStyle__(
					global::System.__ComObject __this, 
					object group, 
					uint level, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_group = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.GroupStyle returnValue__retval = default(global::Windows.UI.Xaml.Controls.GroupStyle);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_group = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(group);
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_group, 
									level, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.UI.Xaml.Controls.GroupStyle)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.UI.Xaml.Controls.IGroupStyle).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.GroupStyle).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_group)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.SelectionChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_SelectionChangedEventArgs__Windows_UI_Xaml_Controls__SelectionChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Controls_SelectionChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.ISelectionChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Controls.ISelectionChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Controls.ISelectionChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Controls.ISelectionChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Primitives.ISelector.add_SelectionChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_SelectionChangedEventHandler__Windows_UI_Xaml_Controls__SelectionChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Controls_SelectionChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget35>(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ItemClickEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ItemClickEventArgs__Windows_UI_Xaml_Controls__ItemClickEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Controls_ItemClickEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Controls.ItemClickEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.IItemClickEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Controls.IItemClickEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Controls.IItemClickEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Controls.IItemClickEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IListViewBase.add_ItemClick, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_ItemClickEventHandler__Windows_UI_Xaml_Controls__ItemClickEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Controls_ItemClickEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ItemClickEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ItemClickEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.ItemClickEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.ItemClickEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.ItemClickEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget36>(global::Windows.UI.Xaml.Controls.ItemClickEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.DragItemsStartingEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_DragItemsStartingEventArgs__Windows_UI_Xaml_Controls__DragItemsStartingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Controls_DragItemsStartingEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Controls.DragItemsStartingEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IListViewBase.add_DragItemsStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_DragItemsStartingEventHandler__Windows_UI_Xaml_Controls__DragItemsStartingEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Controls_DragItemsStartingEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget37>(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls__ListViewBase *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs__Windows_UI_Xaml_Controls__ContainerContentChangingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ContainerContentChangingEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ListViewBase sender, 
					global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.IListViewBase).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IListViewBase2.add_ContainerContentChanging, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ContainerContentChangingEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget38>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls__ListViewBase *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs__Windows_UI_Xaml_Controls__DragItemsCompletedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_DragItemsCompletedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ListViewBase sender, 
					global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.IListViewBase).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IListViewBase4.add_DragItemsCompleted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_DragItemsCompletedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget39>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls__ListViewBase *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs__Windows_UI_Xaml_Controls__ChoosingItemContainerEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ChoosingItemContainerEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ListViewBase sender, 
					global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.IListViewBase).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IListViewBase4.add_ChoosingItemContainer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ChoosingItemContainerEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget40>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls__ListViewBase *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs__Windows_UI_Xaml_Controls__ChoosingGroupHeaderContainerEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ListViewBase sender, 
					global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.IListViewBase).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IListViewBase4.add_ChoosingGroupHeaderContainer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget41>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Data.IBinding.get_Path, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_PropertyPath__Windows_UI_Xaml__PropertyPath *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.PropertyPath Func_UI_Xaml_PropertyPath__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IPropertyPath__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IPropertyPath__Impl.Vtbl**);
			global::Windows.UI.Xaml.PropertyPath value__retval = default(global::Windows.UI.Xaml.PropertyPath);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.PropertyPath)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IPropertyPath).TypeHandle, 
									typeof(global::Windows.UI.Xaml.PropertyPath).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Data.IBinding.put_Path, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_PropertyPath__Windows_UI_Xaml__PropertyPath *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_PropertyPath__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.PropertyPath value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IPropertyPath__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IPropertyPath__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IPropertyPath__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IPropertyPath).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Data.IBinding.get_Mode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Data_BindingMode__Windows_UI_Xaml_Data__BindingMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Data.BindingMode Func_UI_Xaml_Data_BindingMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Data.BindingMode unsafe_value__retval;
			global::Windows.UI.Xaml.Data.BindingMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Data.IBinding.get_Converter, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Data_IValueConverter__Windows_UI_Xaml_Data__IValueConverter *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Data.IValueConverter Func_UI_Xaml_Data_IValueConverter__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Data.IValueConverter__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Data.IValueConverter__Impl.Vtbl**);
			global::Windows.UI.Xaml.Data.IValueConverter value__retval = default(global::Windows.UI.Xaml.Data.IValueConverter);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Data.IValueConverter)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Data.IValueConverter).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Data.IBinding.put_Converter, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Data_IValueConverter__Windows_UI_Xaml_Data__IValueConverter *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Data_IValueConverter__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Data.IValueConverter value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Data.IValueConverter__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Data.IValueConverter__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Data.IValueConverter__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Data.IValueConverter).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Data.IBinding2.get_UpdateSourceTrigger, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Data_UpdateSourceTrigger__Windows_UI_Xaml_Data__UpdateSourceTrigger, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Data.UpdateSourceTrigger Func_UI_Xaml_Data_UpdateSourceTrigger__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Data.UpdateSourceTrigger unsafe_value__retval;
			global::Windows.UI.Xaml.Data.UpdateSourceTrigger value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IItemsStackPanel.get_Orientation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Orientation__Windows_UI_Xaml_Controls__Orientation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Orientation Func_UI_Xaml_Controls_Orientation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Orientation unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.Orientation value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IImage.get_Source, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_ImageSource__Windows_UI_Xaml_Media__ImageSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.ImageSource Func_UI_Xaml_Media_ImageSource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IImageSource__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.IImageSource__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.ImageSource value__retval = default(global::Windows.UI.Xaml.Media.ImageSource);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.ImageSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.IImageSource).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.ImageSource).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IImage.put_Source, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_ImageSource__Windows_UI_Xaml_Media__ImageSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_ImageSource__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.ImageSource value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.IImageSource__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.IImageSource__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.IImageSource__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.IImageSource).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IImage.get_Stretch, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Media_Stretch__Windows_UI_Xaml_Media__Stretch, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Stretch Func_UI_Xaml_Media_Stretch__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Stretch unsafe_value__retval;
			global::Windows.UI.Xaml.Media.Stretch value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.ExceptionRoutedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_ExceptionRoutedEventArgs__Windows_UI_Xaml__ExceptionRoutedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_ExceptionRoutedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.ExceptionRoutedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.IExceptionRoutedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.IExceptionRoutedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.IExceptionRoutedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.IExceptionRoutedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IImage.add_ImageFailed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_ExceptionRoutedEventHandler__Windows_UI_Xaml__ExceptionRoutedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_ExceptionRoutedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ExceptionRoutedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.ExceptionRoutedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget42>(global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ICanvasStatics.GetLeft, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static double Func_UI_Xaml_UIElement__double__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement element, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			double unsafe_length__retval;
			double length__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									&(unsafe_length__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				length__retval = unsafe_length__retval;
				// Return
				return length__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ICanvasStatics.SetLeft, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_UIElement__double__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement element, 
					double length, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									length
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ICanvasStatics.GetZIndex, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_UI_Xaml_UIElement__int__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement element, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			int unsafe_value__retval;
			int value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = unsafe_value__retval;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ICanvasStatics.SetZIndex, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_UIElement__int__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement element, 
					int value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IRelativePanelStatics.GetAbove, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_UI_Xaml_UIElement__object__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement element, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object value__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value__retval));
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IRelativePanelStatics.SetAbove, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_UIElement__object__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement element, 
					object value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IRelativePanelStatics.GetAlignLeftWithPanel, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_UIElement__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement element, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			bool value__retval;
			sbyte unsafe_value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = unsafe_value__retval != 0;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IRelativePanelStatics.SetAlignLeftWithPanel, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_UIElement__Windows_UI_Xaml__UIElement *, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_UIElement__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.UIElement element, 
					bool value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IUIElement__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**);
			sbyte unsafe_value;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IUIElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IUIElement).TypeHandle
								);
				unsafe_value = (value ? ((sbyte)1) : ((sbyte)0));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.Devices.Geolocation.IGeopointFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Windows_Devices_Geolocation_BasicGeoposition__Windows_Devices_Geolocation__BasicGeoposition, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Devices_Geolocation_BasicGeoposition__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.Devices.Geolocation.BasicGeoposition position, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_value__retval;
			global::System.IntPtr value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								position, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Devices.Geolocation.IGeopointFactory.CreateWithAltitudeReferenceSystem, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Windows_Devices_Geolocation_BasicGeoposition__Windows_Devices_Geolocation__BasicGeoposition, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Devices_Geolocation_AltitudeReferenceSystem__Windows_Devices_Geolocation__AltitudeReferenceSystem, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Devices_Geolocation_BasicGeoposition__intIntPtr__(
					global::System.__ComObject __this, 
					global::Windows.Devices.Geolocation.BasicGeoposition position, 
					int altitudeReferenceSystem, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_value__retval;
			global::System.IntPtr value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								position, 
								altitudeReferenceSystem, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Devices.Geolocation.IGeopointFactory.CreateWithAltitudeReferenceSystemAndSpatialReferenceId, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Windows_Devices_Geolocation_BasicGeoposition__Windows_Devices_Geolocation__BasicGeoposition, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Devices_Geolocation_AltitudeReferenceSystem__Windows_Devices_Geolocation__AltitudeReferenceSystem, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Devices_Geolocation_BasicGeoposition__intuint__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.Devices.Geolocation.BasicGeoposition position, 
					int altitudeReferenceSystem, 
					uint spatialReferenceId, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_value__retval;
			global::System.IntPtr value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								position, 
								altitudeReferenceSystem, 
								spatialReferenceId, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Devices.Geolocation.IGeopoint.get_Position, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_Devices_Geolocation_BasicGeoposition__Windows_Devices_Geolocation__BasicGeoposition, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Geolocation.BasicGeoposition Func_Devices_Geolocation_BasicGeoposition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.BasicGeoposition unsafe_value__retval;
			global::Windows.Devices.Geolocation.BasicGeoposition value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Devices.Geolocation.IGeoshape.get_GeoshapeType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Devices_Geolocation_GeoshapeType__Windows_Devices_Geolocation__GeoshapeType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Geolocation.GeoshapeType Func_Devices_Geolocation_GeoshapeType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.GeoshapeType unsafe_value__retval;
			global::Windows.Devices.Geolocation.GeoshapeType value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Devices.Geolocation.IGeoshape.get_AltitudeReferenceSystem, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Devices_Geolocation_AltitudeReferenceSystem__Windows_Devices_Geolocation__AltitudeReferenceSystem, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Geolocation.AltitudeReferenceSystem Func_Devices_Geolocation_AltitudeReference_(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.AltitudeReferenceSystem unsafe_value__retval;
			global::Windows.Devices.Geolocation.AltitudeReferenceSystem value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControlStatics.GetLocation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_Geopoint__Windows_Devices_Geolocation__Geopoint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Geolocation.Geopoint Func_UI_Xaml_DependencyObject__Devices_Geolocation_Geopoint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject element, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**);
			global::Windows.Devices.Geolocation.Geopoint value__retval = default(global::Windows.Devices.Geolocation.Geopoint);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Devices.Geolocation.Geopoint)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Devices.Geolocation.IGeopoint).TypeHandle, 
									typeof(global::Windows.Devices.Geolocation.Geopoint).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControlStatics.SetLocation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_Geopoint__Windows_Devices_Geolocation__Geopoint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DependencyObject__Devices_Geolocation_Geopoint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.Devices.Geolocation.Geopoint value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_element = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl** unsafe_value = default(global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_element = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				unsafe_value = (global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Devices.Geolocation.IGeopoint).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_element, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_element)));
				global::System.GC.KeepAlive(element);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl.get_Center, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_Geopoint__Windows_Devices_Geolocation__Geopoint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Geolocation.Geopoint Func_Devices_Geolocation_Geopoint__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**);
			global::Windows.Devices.Geolocation.Geopoint value__retval = default(global::Windows.Devices.Geolocation.Geopoint);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Devices.Geolocation.Geopoint)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Devices.Geolocation.IGeopoint).TypeHandle, 
									typeof(global::Windows.Devices.Geolocation.Geopoint).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl.put_Center, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_Geopoint__Windows_Devices_Geolocation__Geopoint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Devices_Geolocation_Geopoint__(
					global::System.__ComObject __this, 
					global::Windows.Devices.Geolocation.Geopoint value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl** unsafe_value = default(global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Devices.Geolocation.IGeopoint).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl.get_Children, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_UI_Xaml_DependencyObject___Windows_Foundation_Collections__IVector_A_Windows_UI_Xaml_DependencyObject_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<global::Windows.UI.Xaml.DependencyObject> Func__IList_1_UI_Xaml_DependencyObject___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_DependencyObject_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_DependencyObject_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.DependencyObject> value__retval = default(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.DependencyObject>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IList<global::Windows.UI.Xaml.DependencyObject>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.DependencyObject>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl.get_ColorScheme, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Maps_MapColorScheme__Windows_UI_Xaml_Controls_Maps__MapColorScheme, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapColorScheme Func_UI_Xaml_Controls_Maps_MapColorScheme__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.MapColorScheme unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.Maps.MapColorScheme value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl.get_LoadingStatus, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Maps_MapLoadingStatus__Windows_UI_Xaml_Controls_Maps__MapLoadingStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapLoadingStatus Func_UI_Xaml_Controls_Maps_MapLoadingStatus__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.MapLoadingStatus unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.Maps.MapLoadingStatus value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl.get_Style, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Maps_MapStyle__Windows_UI_Xaml_Controls_Maps__MapStyle, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapStyle Func_UI_Xaml_Controls_Maps_MapStyle__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.MapStyle unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.Maps.MapStyle value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl.get_WatermarkMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Maps_MapWatermarkMode__Windows_UI_Xaml_Controls_Maps__MapWatermarkMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapWatermarkMode Func_UI_Xaml_Controls_Maps_MapWatermarkMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.MapWatermarkMode unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.Maps.MapWatermarkMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl.get_MapElements, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_UI_Xaml_Controls_Maps_MapElement___Windows_Foundation_Collections__IVector_A_Windows_UI_Xaml_Controls_Maps_MapElement_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.Maps.MapElement> Func__IList_1_UI_Xaml_Controls_Maps_MapElement___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Controls_Maps_MapElement_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Controls_Maps_MapElement_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.Maps.MapElement> value__retval = default(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.Maps.MapElement>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.Maps.MapElement>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.Maps.MapElement>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl.get_Routes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_UI_Xaml_Controls_Maps_MapRouteView___Windows_Foundation_Collections__IVector_A_Windows_UI_Xaml_Controls_Maps_MapRouteView_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.Maps.MapRouteView> Func__IList_1_UI_Xaml_Controls_Maps_MapRouteView___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Controls_Maps_MapRouteView_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Controls_Maps_MapRouteView_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.Maps.MapRouteView> value__retval = default(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.Maps.MapRouteView>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.Maps.MapRouteView>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.Maps.MapRouteView>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl.get_TileSources, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_UI_Xaml_Controls_Maps_MapTileSource___Windows_Foundation_Collections__IVector_A_Windows_UI_Xaml_Controls_Maps_MapTileSource_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.Maps.MapTileSource> Func__IList_1_UI_Xaml_Controls_Maps_MapTileSource___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Controls_Maps_MapTileSource_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Xaml_Controls_Maps_MapTileSource_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.Maps.MapTileSource> value__retval = default(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.Maps.MapTileSource>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.Maps.MapTileSource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Controls.Maps.MapTileSource>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,System.Object>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps__MapControl *, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_Maps_MapControl__object__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapControl sender, 
					object args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_args = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapControl).TypeHandle
								);
				unsafe_args = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(args);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl.add_CenterChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__object__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, object> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_System_Object_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget43>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapInputEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps__MapControl *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapInputEventArgs__Windows_UI_Xaml_Controls_Maps__MapInputEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapInputEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapControl sender, 
					global::Windows.UI.Xaml.Controls.Maps.MapInputEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapInputEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.Maps.IMapInputEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapControl).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.Maps.IMapInputEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapInputEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl.add_MapDoubleTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapInputEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapInputEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapInputEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapInputEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapInputEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapInputEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapInputEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapInputEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget44>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapInputEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl.GetLocationFromOffset, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_Geopoint__Windows_Devices_Geolocation__Geopoint *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Point__out_Devices_Geolocation_Geopoint__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point offset, 
					out global::Windows.Devices.Geolocation.Geopoint location, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl** unsafe_location = default(global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_location = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									offset, 
									&(unsafe_location)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				location = (global::Windows.Devices.Geolocation.Geopoint)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_location), 
									typeof(global::Windows.Devices.Geolocation.IGeopoint).TypeHandle, 
									typeof(global::Windows.Devices.Geolocation.Geopoint).TypeHandle
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_location)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl.TrySetViewBoundsAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_GeoboundingBox__Windows_Devices_Geolocation__GeoboundingBox *, [fwd] [in] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_Windows_UI_Xaml_Thickness___Windows_Foundation__IReference_A_Windows_UI_Xaml_Thickness_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Maps_MapAnimationKind__Windows_UI_Xaml_Controls_Maps__MapAnimationKind, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_bool___Windows_Foundation__IAsyncOperation_A_bool_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<bool> Func_Devices_Geolocation_GeoboundingBox__Nullable_1_UI_Xaml_Thickness___int_IAsyncOperation_1_bool___(
					global::System.__ComObject __this, 
					global::Windows.Devices.Geolocation.GeoboundingBox bounds, 
					global::System.Nullable<global::Windows.UI.Xaml.Thickness> margin, 
					int animation, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.IGeoboundingBox__Impl.Vtbl** unsafe_bounds = default(global::Windows.Devices.Geolocation.IGeoboundingBox__Impl.Vtbl**);
			global::System.Nullable_A_Windows_UI_Xaml_Thickness_V___Impl.Vtbl** unsafe_margin = default(global::System.Nullable_A_Windows_UI_Xaml_Thickness_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_bool_V___Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.Foundation.IAsyncOperation_A_bool_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<bool> returnValue__retval = default(global::Windows.Foundation.IAsyncOperation<bool>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_bounds = (global::Windows.Devices.Geolocation.IGeoboundingBox__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bounds, 
									typeof(global::Windows.Devices.Geolocation.IGeoboundingBox).TypeHandle
								);
				if (margin.HasValue)
				{
					global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<global::Windows.UI.Xaml.Thickness> unsafe_margin_Wrapper = new global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<global::Windows.UI.Xaml.Thickness>(margin.Value, 20);
					unsafe_margin = (global::System.Nullable_A_Windows_UI_Xaml_Thickness_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ManagedObjectToComInterface(
										unsafe_margin_Wrapper, 
										typeof(global::Windows.Foundation.IReference<global::Windows.UI.Xaml.Thickness>).TypeHandle
									);
				}
				else
					unsafe_margin = null;
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_bounds, 
									unsafe_margin, 
									animation, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.Foundation.IAsyncOperation<bool>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<bool>).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bounds)));
				global::System.GC.KeepAlive(bounds);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_margin)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.DependencyObject>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_DependencyObject___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_DependencyObject_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.DependencyObject> Func__IReadOnlyList_1_UI_Xaml_DependencyObject___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_DependencyObject_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_DependencyObject_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.DependencyObject> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.DependencyObject>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.DependencyObject>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.DependencyObject>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.DependencyObject>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_DependencyObject__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.DependencyObject value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.DependencyObject>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_DependencyObject__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.DependencyObject>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_DependencyObject__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapElement>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapElement__Windows_UI_Xaml_Controls_Maps__MapElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapElement Func_uint__UI_Xaml_Controls_Maps_MapElement__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.MapElement __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapElement);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.Maps.MapElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.MapElement).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapElement>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Controls_Maps_MapElement___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Controls_Maps_MapElement_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.Maps.MapElement> Func__IReadOnlyList_1_UI_Xaml_Controls_Maps_MapElement___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Controls_Maps_MapElement_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Controls_Maps_MapElement_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.Maps.MapElement> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.Maps.MapElement>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.Maps.MapElement>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.Maps.MapElement>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapElement>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapElement__Windows_UI_Xaml_Controls_Maps__MapElement *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Controls_Maps_MapElement__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapElement value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapElement>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapElement__Windows_UI_Xaml_Controls_Maps__MapElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Controls_Maps_MapElement__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Controls.Maps.MapElement value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapElement>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapElement__Windows_UI_Xaml_Controls_Maps__MapElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_Maps_MapElement__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapElement value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapElement>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_MapElement__Windows_UI_Xaml_Controls_Maps__MapElement * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Controls_Maps_MapElement__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Controls.Maps.MapElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapElement__Windows_UI_Xaml_Controls_Maps__MapElement * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.Maps.MapElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Controls.Maps.MapElement).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapElement__Windows_UI_Xaml_Controls_Maps__MapElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapElement>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_MapElement__Windows_UI_Xaml_Controls_Maps__MapElement * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Controls_Maps_MapElement__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapElement__Windows_UI_Xaml_Controls_Maps__MapElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Controls.Maps.MapElement>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Controls_Maps_MapElement___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Controls_Maps_MapElement_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.MapElement> Func__Collections_IIterator_1_UI_Xaml_Controls_Maps_MapElement___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_Maps_MapElement_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_Maps_MapElement_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.MapElement> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.MapElement>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.MapElement>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.MapElement>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.Maps.MapElement>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapElement__Windows_UI_Xaml_Controls_Maps__MapElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapElement Func_UI_Xaml_Controls_Maps_MapElement__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.MapElement __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapElement);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.Maps.MapElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.MapElement).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.Maps.MapElement>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_MapElement__Windows_UI_Xaml_Controls_Maps__MapElement * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Controls_Maps_MapElement__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapElement__Windows_UI_Xaml_Controls_Maps__MapElement * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.Maps.MapElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Controls.Maps.MapElement).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapElement__Windows_UI_Xaml_Controls_Maps__MapElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapRouteViewFactory.CreateInstanceWithMapRoute, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Services_Maps_MapRoute__Windows_Services_Maps__MapRoute *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Services_Maps_MapRoute__IntPtr__out_IntPtr__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.Services.Maps.MapRoute route, 
					global::System.IntPtr outer, 
					out global::System.IntPtr inner, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Services.Maps.IMapRoute__Impl.Vtbl** unsafe_route = default(global::Windows.Services.Maps.IMapRoute__Impl.Vtbl**);
			global::System.IntPtr unsafe_inner;
			global::System.IntPtr unsafe_instance__retval;
			global::System.IntPtr instance__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_route = (global::Windows.Services.Maps.IMapRoute__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									route, 
									typeof(global::Windows.Services.Maps.IMapRoute).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_route, 
									outer, 
									&(unsafe_inner), 
									&(unsafe_instance__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				instance__retval = unsafe_instance__retval;
				inner = unsafe_inner;
				// Return
				return instance__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_route)));
				global::System.GC.KeepAlive(route);
			}
		}

		// Signature, Windows.Services.Maps.IMapRoute.get_BoundingBox, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_GeoboundingBox__Windows_Devices_Geolocation__GeoboundingBox *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Geolocation.GeoboundingBox Func_Devices_Geolocation_GeoboundingBox__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.IGeoboundingBox__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Devices.Geolocation.IGeoboundingBox__Impl.Vtbl**);
			global::Windows.Devices.Geolocation.GeoboundingBox value__retval = default(global::Windows.Devices.Geolocation.GeoboundingBox);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Devices.Geolocation.GeoboundingBox)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Devices.Geolocation.IGeoboundingBox).TypeHandle, 
									typeof(global::Windows.Devices.Geolocation.GeoboundingBox).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapRouteView>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapRouteView__Windows_UI_Xaml_Controls_Maps__MapRouteView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapRouteView Func_uint__UI_Xaml_Controls_Maps_MapRouteView__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.MapRouteView __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapRouteView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.Maps.MapRouteView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.MapRouteView).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapRouteView>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Controls_Maps_MapRouteView___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Controls_Maps_MapRouteView_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.Maps.MapRouteView> Func__IReadOnlyList_1_UI_Xaml_Controls_Maps_MapRouteView___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Controls_Maps_MapRouteView_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Controls_Maps_MapRouteView_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.Maps.MapRouteView> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.Maps.MapRouteView>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.Maps.MapRouteView>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.Maps.MapRouteView>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapRouteView>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapRouteView__Windows_UI_Xaml_Controls_Maps__MapRouteView *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Controls_Maps_MapRouteView__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapRouteView value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapRouteView>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapRouteView__Windows_UI_Xaml_Controls_Maps__MapRouteView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Controls_Maps_MapRouteView__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Controls.Maps.MapRouteView value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapRouteView>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapRouteView__Windows_UI_Xaml_Controls_Maps__MapRouteView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_Maps_MapRouteView__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapRouteView value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapRouteView>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_MapRouteView__Windows_UI_Xaml_Controls_Maps__MapRouteView * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Controls_Maps_MapRouteView__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Controls.Maps.MapRouteView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapRouteView__Windows_UI_Xaml_Controls_Maps__MapRouteView * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.Maps.MapRouteView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Controls.Maps.MapRouteView).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapRouteView__Windows_UI_Xaml_Controls_Maps__MapRouteView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapRouteView>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_MapRouteView__Windows_UI_Xaml_Controls_Maps__MapRouteView * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Controls_Maps_MapRouteView__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapRouteView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapRouteView__Windows_UI_Xaml_Controls_Maps__MapRouteView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Controls.Maps.MapRouteView>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Controls_Maps_MapRouteView___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Controls_Maps_MapRouteView_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.MapRouteView> Func__Collections_IIterator_1_UI_Xaml_Controls_Maps_MapRouteView___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_Maps_MapRouteView_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_Maps_MapRouteView_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.MapRouteView> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.MapRouteView>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.MapRouteView>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.MapRouteView>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.Maps.MapRouteView>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapRouteView__Windows_UI_Xaml_Controls_Maps__MapRouteView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapRouteView Func_UI_Xaml_Controls_Maps_MapRouteView__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.MapRouteView __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapRouteView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.Maps.MapRouteView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.MapRouteView).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.Maps.MapRouteView>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_MapRouteView__Windows_UI_Xaml_Controls_Maps__MapRouteView * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Controls_Maps_MapRouteView__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapRouteView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapRouteView__Windows_UI_Xaml_Controls_Maps__MapRouteView * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.Maps.MapRouteView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Controls.Maps.MapRouteView).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapRouteView__Windows_UI_Xaml_Controls_Maps__MapRouteView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapTileSource>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapTileSource__Windows_UI_Xaml_Controls_Maps__MapTileSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapTileSource Func_uint__UI_Xaml_Controls_Maps_MapTileSource__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.MapTileSource __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapTileSource);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.Maps.MapTileSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.MapTileSource).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapTileSource>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Xaml_Controls_Maps_MapTileSource___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Xaml_Controls_Maps_MapTileSource_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.Maps.MapTileSource> Func__IReadOnlyList_1_UI_Xaml_Controls_Maps_MapTileSource___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Controls_Maps_MapTileSource_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Xaml_Controls_Maps_MapTileSource_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.Maps.MapTileSource> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.Maps.MapTileSource>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.Maps.MapTileSource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Controls.Maps.MapTileSource>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapTileSource>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapTileSource__Windows_UI_Xaml_Controls_Maps__MapTileSource *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Controls_Maps_MapTileSource__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapTileSource value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapTileSource>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapTileSource__Windows_UI_Xaml_Controls_Maps__MapTileSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Controls_Maps_MapTileSource__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Controls.Maps.MapTileSource value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapTileSource>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapTileSource__Windows_UI_Xaml_Controls_Maps__MapTileSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_Maps_MapTileSource__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapTileSource value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapTileSource>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_MapTileSource__Windows_UI_Xaml_Controls_Maps__MapTileSource * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Controls_Maps_MapTileSource__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Controls.Maps.MapTileSource[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapTileSource__Windows_UI_Xaml_Controls_Maps__MapTileSource * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.Maps.MapTileSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Controls.Maps.MapTileSource).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapTileSource__Windows_UI_Xaml_Controls_Maps__MapTileSource * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Controls.Maps.MapTileSource>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_MapTileSource__Windows_UI_Xaml_Controls_Maps__MapTileSource * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Xaml_Controls_Maps_MapTileSource__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapTileSource[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapTileSource__Windows_UI_Xaml_Controls_Maps__MapTileSource * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Controls.Maps.MapTileSource>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Controls_Maps_MapTileSource___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Controls_Maps_MapTileSource_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.MapTileSource> Func__Collections_IIterator_1_UI_Xaml_Controls_Maps_MapTileSource___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_Maps_MapTileSource_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_Maps_MapTileSource_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.MapTileSource> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.MapTileSource>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.MapTileSource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.MapTileSource>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.Maps.MapTileSource>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapTileSource__Windows_UI_Xaml_Controls_Maps__MapTileSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapTileSource Func_UI_Xaml_Controls_Maps_MapTileSource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.MapTileSource __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapTileSource);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.Maps.MapTileSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.MapTileSource).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.Maps.MapTileSource>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_MapTileSource__Windows_UI_Xaml_Controls_Maps__MapTileSource * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Controls_Maps_MapTileSource__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapTileSource[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapTileSource__Windows_UI_Xaml_Controls_Maps__MapTileSource * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.Maps.MapTileSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource).TypeHandle, 
											typeof(global::Windows.UI.Xaml.Controls.Maps.MapTileSource).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapTileSource__Windows_UI_Xaml_Controls_Maps__MapTileSource * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl2.get_PanInteractionMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Maps_MapPanInteractionMode__Windows_UI_Xaml_Controls_Maps__MapPanInteractionMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode Func_UI_Xaml_Controls_Maps_MapPanInteractionMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl2.get_RotateInteractionMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Maps_MapInteractionMode__Windows_UI_Xaml_Controls_Maps__MapInteractionMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapInteractionMode Func_UI_Xaml_Controls_Maps_MapInteractionMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.MapInteractionMode unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.Maps.MapInteractionMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl2.get_Scene, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapScene__Windows_UI_Xaml_Controls_Maps__MapScene *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapScene Func_UI_Xaml_Controls_Maps_MapScene__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapScene__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapScene__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.MapScene value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapScene);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Controls.Maps.MapScene)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapScene).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.MapScene).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl2.put_Scene, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapScene__Windows_UI_Xaml_Controls_Maps__MapScene *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_Maps_MapScene__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapScene value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapScene__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.Maps.IMapScene__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.Maps.IMapScene__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapScene).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl2.get_ActualCamera, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapCamera__Windows_UI_Xaml_Controls_Maps__MapCamera *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapCamera Func_UI_Xaml_Controls_Maps_MapCamera__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapCamera__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapCamera__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.MapCamera value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapCamera);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Controls.Maps.MapCamera)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapCamera).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.MapCamera).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl2.get_CustomExperience, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapCustomExperience__Windows_UI_Xaml_Controls_Maps__MapCustomExperience *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapCustomExperience Func_UI_Xaml_Controls_Maps_MapCustomExperience__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapCustomExperience__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapCustomExperience__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.MapCustomExperience value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapCustomExperience);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Controls.Maps.MapCustomExperience)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapCustomExperience).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.MapCustomExperience).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl2.put_CustomExperience, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapCustomExperience__Windows_UI_Xaml_Controls_Maps__MapCustomExperience *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_Maps_MapCustomExperience__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapCustomExperience value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapCustomExperience__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.Maps.IMapCustomExperience__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.Maps.IMapCustomExperience__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapCustomExperience).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps__MapControl *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs__Windows_UI_Xaml_Controls_Maps__MapElementClickEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapElementClickEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapControl sender, 
					global::Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapControl).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElementClickEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl2.add_MapElementClick, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapElementClickEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget45>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps__MapControl *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs__Windows_UI_Xaml_Controls_Maps__MapElementPointerEnteredEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapControl sender, 
					global::Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapControl).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElementPointerEnteredEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl2.add_MapElementPointerEntered, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget46>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps__MapControl *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs__Windows_UI_Xaml_Controls_Maps__MapElementPointerExitedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapControl sender, 
					global::Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapControl).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElementPointerExitedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl2.add_MapElementPointerExited, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget47>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps__MapControl *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs__Windows_UI_Xaml_Controls_Maps__MapActualCameraChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapControl sender, 
					global::Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapControl).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl2.add_ActualCameraChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget48>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps__MapControl *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs__Windows_UI_Xaml_Controls_Maps__MapActualCameraChangingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapControl sender, 
					global::Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapControl).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapActualCameraChangingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl2.add_ActualCameraChanging, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget49>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps__MapControl *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs__Windows_UI_Xaml_Controls_Maps__MapTargetCameraChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapControl sender, 
					global::Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapControl).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl2.add_TargetCameraChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget50>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps__MapControl *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs__Windows_UI_Xaml_Controls_Maps__MapCustomExperienceChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapControl sender, 
					global::Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapControl).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapCustomExperienceChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl2.add_CustomExperienceChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget51>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapScene,Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapScene__Windows_UI_Xaml_Controls_Maps__MapScene *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs__Windows_UI_Xaml_Controls_Maps__MapTargetCameraChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_Maps_MapScene__UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapScene sender, 
					global::Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapScene__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.Maps.IMapScene__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.Maps.IMapScene__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapScene).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapTargetCameraChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapScene.add_TargetCameraChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapScene__Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapScene_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapScene__UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapScene, global::Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapScene_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapScene_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapScene_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapScene, global::Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget52>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapScene_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapCameraFactory.CreateInstanceWithLocation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_Geopoint__Windows_Devices_Geolocation__Geopoint *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Devices_Geolocation_Geopoint__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.Devices.Geolocation.Geopoint location, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl** unsafe_location = default(global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**);
			global::System.IntPtr unsafe_instance__retval;
			global::System.IntPtr instance__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_location = (global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									location, 
									typeof(global::Windows.Devices.Geolocation.IGeopoint).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_location, 
									&(unsafe_instance__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				instance__retval = unsafe_instance__retval;
				// Return
				return instance__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_location)));
				global::System.GC.KeepAlive(location);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapCameraFactory.CreateInstanceWithLocationAndHeading, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_Geopoint__Windows_Devices_Geolocation__Geopoint *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Devices_Geolocation_Geopoint__double__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.Devices.Geolocation.Geopoint location, 
					double headingInDegrees, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl** unsafe_location = default(global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**);
			global::System.IntPtr unsafe_instance__retval;
			global::System.IntPtr instance__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_location = (global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									location, 
									typeof(global::Windows.Devices.Geolocation.IGeopoint).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_location, 
									headingInDegrees, 
									&(unsafe_instance__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				instance__retval = unsafe_instance__retval;
				// Return
				return instance__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_location)));
				global::System.GC.KeepAlive(location);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapCameraFactory.CreateInstanceWithLocationHeadingAndPitch, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_Geopoint__Windows_Devices_Geolocation__Geopoint *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Devices_Geolocation_Geopoint__double__double__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.Devices.Geolocation.Geopoint location, 
					double headingInDegrees, 
					double pitchInDegrees, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl** unsafe_location = default(global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**);
			global::System.IntPtr unsafe_instance__retval;
			global::System.IntPtr instance__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_location = (global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									location, 
									typeof(global::Windows.Devices.Geolocation.IGeopoint).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_location, 
									headingInDegrees, 
									pitchInDegrees, 
									&(unsafe_instance__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				instance__retval = unsafe_instance__retval;
				// Return
				return instance__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_location)));
				global::System.GC.KeepAlive(location);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapCameraFactory.CreateInstanceWithLocationHeadingPitchRollAndFieldOfView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_Geopoint__Windows_Devices_Geolocation__Geopoint *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Devices_Geolocation_Geopoint__double__double__double__double__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.Devices.Geolocation.Geopoint location, 
					double headingInDegrees, 
					double pitchInDegrees, 
					double rollInDegrees, 
					double fieldOfViewInDegrees, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl** unsafe_location = default(global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**);
			global::System.IntPtr unsafe_instance__retval;
			global::System.IntPtr instance__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_location = (global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									location, 
									typeof(global::Windows.Devices.Geolocation.IGeopoint).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_location, 
									headingInDegrees, 
									pitchInDegrees, 
									rollInDegrees, 
									fieldOfViewInDegrees, 
									&(unsafe_instance__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				instance__retval = unsafe_instance__retval;
				// Return
				return instance__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_location)));
				global::System.GC.KeepAlive(location);
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps__MapControl *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs__Windows_UI_Xaml_Controls_Maps__MapRightTappedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapRightTappedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.MapControl sender, 
					global::Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.Maps.IMapControl__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapControl).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapRightTappedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapControl3.add_MapRightTapped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapRightTappedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget53>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.AutoSuggestBox,Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_AutoSuggestBox__Windows_UI_Xaml_Controls__AutoSuggestBox *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs__Windows_UI_Xaml_Controls__AutoSuggestBoxSuggestionChosenEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_AutoSuggestBox__UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.AutoSuggestBox sender, 
					global::Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IAutoSuggestBox__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.IAutoSuggestBox__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IAutoSuggestBoxSuggestionChosenEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IAutoSuggestBoxSuggestionChosenEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.IAutoSuggestBox__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.IAutoSuggestBox).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IAutoSuggestBoxSuggestionChosenEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IAutoSuggestBoxSuggestionChosenEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IAutoSuggestBox.add_SuggestionChosen, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_AutoSuggestBox__Windows_UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_AutoSuggestBox__UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget54>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.AutoSuggestBox,Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_AutoSuggestBox__Windows_UI_Xaml_Controls__AutoSuggestBox *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs__Windows_UI_Xaml_Controls__AutoSuggestBoxTextChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_AutoSuggestBox__UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.AutoSuggestBox sender, 
					global::Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IAutoSuggestBox__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.IAutoSuggestBox__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.IAutoSuggestBox__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.IAutoSuggestBox).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IAutoSuggestBoxTextChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IAutoSuggestBox.add_TextChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_AutoSuggestBox__Windows_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_AutoSuggestBox__UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget55>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.AutoSuggestBox,Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_AutoSuggestBox__Windows_UI_Xaml_Controls__AutoSuggestBox *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs__Windows_UI_Xaml_Controls__AutoSuggestBoxQuerySubmittedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_AutoSuggestBox__UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.AutoSuggestBox sender, 
					global::Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IAutoSuggestBox__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.IAutoSuggestBox__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IAutoSuggestBoxQuerySubmittedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IAutoSuggestBoxQuerySubmittedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.IAutoSuggestBox__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.IAutoSuggestBox).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IAutoSuggestBoxQuerySubmittedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IAutoSuggestBoxQuerySubmittedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IAutoSuggestBox2.add_QuerySubmitted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_AutoSuggestBox__Windows_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_AutoSuggestBox__UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget56>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Point>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Point Func_uint___Point__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Point unsafe___value__retval;
			global::Windows.Foundation.Point __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Point>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_Foundation_Point___Windows_Foundation_Collections__IVectorView_A_Windows_Foundation_Point_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.Foundation.Point> Func__IReadOnlyList_1__Point___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_Foundation_Point_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_Foundation_Point_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.Foundation.Point> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.Foundation.Point>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.Foundation.Point>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Foundation.Point>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Point>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func__Point__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value, 
								&(unsafe_index), 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			index = unsafe_index;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Point>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint___Point__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.Foundation.Point value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Point>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Point__Windows_Foundation__Point *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg__Point__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Foundation.Point[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Foundation.Point* unsafe_items;
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			// Marshalling
			if (items != null)
				unsafe_items_mcgLength = (uint)items.Length;
			fixed (global::Windows.Foundation.Point* pinned_items = global::McgInterop.McgCoreHelpers.GetArrayForCompat(items))
			{
				unsafe_items = (global::Windows.Foundation.Point*)pinned_items;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
			}
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Point>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Point__Windows_Foundation__Point *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg__Point__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Foundation.Point* unsafe_items;
			int unsafe___return__;
			// Marshalling
			if (items != null)
				unsafe_items_mcgLength = (uint)items.Length;
			fixed (global::Windows.Foundation.Point* pinned_items = global::McgInterop.McgCoreHelpers.GetArrayForCompat(items))
			{
				unsafe_items = (global::Windows.Foundation.Point*)pinned_items;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Windows.UI.Xaml.Shapes.IPolygon.get_Points, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_PointCollection__Windows_UI_Xaml_Media__PointCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.PointCollection Func_UI_Xaml_Media_PointCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_Foundation_Point_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_Foundation_Point_V___Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.PointCollection value__retval = default(global::Windows.UI.Xaml.Media.PointCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.PointCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.Foundation.Point>).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.PointCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Shapes.IPolygon.put_Points, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_PointCollection__Windows_UI_Xaml_Media__PointCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_PointCollection__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.PointCollection value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_Foundation_Point_V___Impl.Vtbl** unsafe_value = default(global::System.Collections.Generic.IList_A_Windows_Foundation_Point_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.Collections.Generic.IList_A_Windows_Foundation_Point_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::System.Collections.Generic.IList<global::Windows.Foundation.Point>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ISplitView.get_DisplayMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_SplitViewDisplayMode__Windows_UI_Xaml_Controls__SplitViewDisplayMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.SplitViewDisplayMode Func_UI_Xaml_Controls_SplitViewDisplayMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.SplitViewDisplayMode unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.SplitViewDisplayMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SplitView,Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_SplitView__Windows_UI_Xaml_Controls__SplitView *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs__Windows_UI_Xaml_Controls__SplitViewPaneClosingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_SplitView__UI_Xaml_Controls_SplitViewPaneClosingEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.SplitView sender, 
					global::Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ISplitView__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.ISplitView__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ISplitViewPaneClosingEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.ISplitViewPaneClosingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.ISplitView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.ISplitView).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.ISplitViewPaneClosingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.ISplitViewPaneClosingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ISplitView.add_PaneClosing, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_SplitView__Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_SplitView__UI_Xaml_Controls_SplitViewPaneClosingEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, global::Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, global::Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget57>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SplitView,System.Object>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_SplitView__Windows_UI_Xaml_Controls__SplitView *, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_SplitView__object__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.SplitView sender, 
					object args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ISplitView__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.ISplitView__Impl.Vtbl**);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_args = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.ISplitView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.ISplitView).TypeHandle
								);
				unsafe_args = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(args);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ISplitView.add_PaneClosed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_SplitView__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_SplitView__object__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, object> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget58>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Navigation.NavigatedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigationEventArgs__Windows_UI_Xaml_Navigation__NavigationEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Navigation_NavigationEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Navigation.NavigationEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Navigation.INavigationEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IFrame.add_Navigated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigatedEventHandler__Windows_UI_Xaml_Navigation__NavigatedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Navigation_NavigatedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigatedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget59>(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigatingCancelEventArgs__Windows_UI_Xaml_Navigation__NavigatingCancelEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Navigation_NavigatingCancelEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IFrame.add_Navigating, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigatingCancelEventHandler__Windows_UI_Xaml_Navigation__NavigatingCancelEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Navigation_NavigatingCancelEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget60>(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Navigation.NavigationFailedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigationFailedEventArgs__Windows_UI_Xaml_Navigation__NavigationFailedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Navigation_NavigationFailedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Navigation.NavigationFailedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IFrame.add_NavigationFailed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigationFailedEventHandler__Windows_UI_Xaml_Navigation__NavigationFailedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Navigation_NavigationFailedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget61>(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IFrame.add_NavigationStopped, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigationStoppedEventHandler__Windows_UI_Xaml_Navigation__NavigationStoppedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Navigation_NavigationStoppedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget59>(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IFrame.Navigate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Type__object__bool__(
					global::System.__ComObject __this, 
					global::System.Type sourcePageType, 
					object parameter, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Type__Impl.UnsafeType unsafe_sourcePageType;
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_parameter = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			bool returnValue__retval;
			sbyte unsafe_returnValue__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				global::System.Runtime.InteropServices.HSTRING unsafe_sourcePageType__HSTRING__Name;
				int unsafe_sourcePageType__int__Kind;
				global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
									sourcePageType, 
									out unsafe_sourcePageType__HSTRING__Name, 
									out unsafe_sourcePageType__int__Kind
								);
				unsafe_sourcePageType.Name = unsafe_sourcePageType__HSTRING__Name;
				unsafe_sourcePageType.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_sourcePageType__int__Kind;
				unsafe_parameter = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(parameter);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sourcePageType, 
									unsafe_parameter, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = unsafe_returnValue__retval != 0;
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_parameter)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.INavigate.Navigate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Type__bool__(
					global::System.__ComObject __this, 
					global::System.Type sourcePageType, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Type__Impl.UnsafeType unsafe_sourcePageType;
			bool returnValue__retval;
			sbyte unsafe_returnValue__retval;
			int unsafe___return__;
			// Marshalling
			global::System.Runtime.InteropServices.HSTRING unsafe_sourcePageType__HSTRING__Name;
			int unsafe_sourcePageType__int__Kind;
			global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
								sourcePageType, 
								out unsafe_sourcePageType__HSTRING__Name, 
								out unsafe_sourcePageType__int__Kind
							);
			unsafe_sourcePageType.Name = unsafe_sourcePageType__HSTRING__Name;
			unsafe_sourcePageType.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_sourcePageType__int__Kind;
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								unsafe_sourcePageType, 
								&(unsafe_returnValue__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnValue__retval = unsafe_returnValue__retval != 0;
			// Return
			return returnValue__retval;
		}

		// Signature, Windows.UI.Xaml.Media.Animation.INavigationThemeTransition.get_DefaultNavigationTransitionInfo, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_NavigationTransitionInfo__Windows_UI_Xaml_Media_Animation__NavigationTransitionInfo *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo Func_UI_Xaml_Media_Animation_NavigationTransitionInfo__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.INavigationTransitionInfo__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Media.Animation.INavigationTransitionInfo__Impl.Vtbl**);
			global::Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo value__retval = default(global::Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Media.Animation.INavigationTransitionInfo).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Media.Animation.INavigationThemeTransition.put_DefaultNavigationTransitionInfo, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Media_Animation_NavigationTransitionInfo__Windows_UI_Xaml_Media_Animation__NavigationTransitionInfo *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_Animation_NavigationTransitionInfo__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.INavigationTransitionInfo__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Media.Animation.INavigationTransitionInfo__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Media.Animation.INavigationTransitionInfo__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Media.Animation.INavigationTransitionInfo).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_Primitives_RangeBaseValueChangedEventArgs__Windows_UI_Xaml_Controls_Primitives__RangeBaseValueChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Xaml_Controls_Primitives_RangeBaseValueChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Xaml.Controls.Primitives.IRangeBaseValueChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Xaml.Controls.Primitives.IRangeBaseValueChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Xaml.Controls.Primitives.IRangeBaseValueChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Xaml.Controls.Primitives.IRangeBaseValueChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Primitives.IRangeBase.add_ValueChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_Primitives_RangeBaseValueChangedEventHandler__Windows_UI_Xaml_Controls_Primitives__RangeBaseValueChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Controls_Primitives_RangeBaseValueChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget62>(global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Primitives.IRangeBaseOverrides.OnMinimumChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_double__double__(
					global::System.__ComObject __this, 
					double oldMinimum, 
					double newMinimum, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								oldMinimum, 
								newMinimum
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_BaseType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Markup_IXamlType__Windows_UI_Xaml_Markup__IXamlType *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.IXamlType Func_UI_Xaml_Markup_IXamlType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.IXamlType__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Markup.IXamlType__Impl.Vtbl**);
			global::Windows.UI.Xaml.Markup.IXamlType value__retval = default(global::Windows.UI.Xaml.Markup.IXamlType);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Markup.IXamlType)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Markup.IXamlType).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_ContentProperty, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Markup_IXamlMember__Windows_UI_Xaml_Markup__IXamlMember *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.IXamlMember Func_UI_Xaml_Markup_IXamlMember__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.IXamlMember__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.Markup.IXamlMember__Impl.Vtbl**);
			global::Windows.UI.Xaml.Markup.IXamlMember value__retval = default(global::Windows.UI.Xaml.Markup.IXamlMember);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Markup.IXamlMember)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.Markup.IXamlMember).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.CreateFromString, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_string__object__(
					global::System.__ComObject __this, 
					string value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_instance__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object instance__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_value = value)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
					unsafe_instance__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_value, 
										&(unsafe_instance__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					instance__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_instance__retval));
				}
				// Return
				return instance__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_instance__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.GetMember, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Markup_IXamlMember__Windows_UI_Xaml_Markup__IXamlMember *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.IXamlMember Func_string__UI_Xaml_Markup_IXamlMember__(
					global::System.__ComObject __this, 
					string name, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_name = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.UI.Xaml.Markup.IXamlMember__Impl.Vtbl** unsafe_xamlMember__retval = default(global::Windows.UI.Xaml.Markup.IXamlMember__Impl.Vtbl**);
			global::Windows.UI.Xaml.Markup.IXamlMember xamlMember__retval = default(global::Windows.UI.Xaml.Markup.IXamlMember);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_name = name)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_name;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_name, name, &(hstring_header_name), &(unsafe_name));
					unsafe_xamlMember__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_name, 
										&(unsafe_xamlMember__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					xamlMember__retval = (global::Windows.UI.Xaml.Markup.IXamlMember)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_xamlMember__retval), 
										typeof(global::Windows.UI.Xaml.Markup.IXamlMember).TypeHandle
									);
				}
				// Return
				return xamlMember__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_xamlMember__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.AddToMap, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__object__object__(
					global::System.__ComObject __this, 
					object instance, 
					object key, 
					object value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_instance = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_key = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_instance = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(instance);
				unsafe_key = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(key);
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_instance, 
									unsafe_key, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_instance)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_key)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplicationView.get_CoreWindow, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_CoreWindow__Windows_UI_Core__CoreWindow *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.CoreWindow Func_UI_Core_CoreWindow__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.ICoreWindow__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Core.ICoreWindow__Impl.Vtbl**);
			global::Windows.UI.Core.CoreWindow value__retval = default(global::Windows.UI.Core.CoreWindow);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Core.CoreWindow)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Core.ICoreWindow).TypeHandle, 
									typeof(global::Windows.UI.Core.CoreWindow).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.Core.CoreApplicationView,Windows.ApplicationModel.Activation.IActivatedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Activation_IActivatedEventArgs__Windows_ApplicationModel_Activation__IActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Core_CoreApplicationView__ApplicationModel_Activation_IActivatedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.CoreApplicationView sender, 
					global::Windows.ApplicationModel.Activation.IActivatedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_sender = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
								);
				unsafe_args = (global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Activation.IActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplicationView.add_Activated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Activation_IActivatedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_ApplicationModel_Core_CoreApplicationView__ApplicationModel_Activation_IActivatedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget63>(global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Core.CoreWindow,Windows.UI.Core.WindowSizeChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_CoreWindow__Windows_UI_Core__CoreWindow *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_WindowSizeChangedEventArgs__Windows_UI_Core__WindowSizeChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Core_CoreWindow__UI_Core_WindowSizeChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Core.CoreWindow sender, 
					global::Windows.UI.Core.WindowSizeChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.ICoreWindow__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Core.ICoreWindow__Impl.Vtbl**);
			global::Windows.UI.Core.IWindowSizeChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Core.IWindowSizeChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Core.ICoreWindow__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Core.ICoreWindow).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Core.IWindowSizeChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Core.IWindowSizeChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Core.ICoreWindow.add_SizeChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Core_CoreWindow__Windows_UI_Core_WindowSizeChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Core_CoreWindow_j_Windows_UI_Core_WindowSizeChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Core_CoreWindow__UI_Core_WindowSizeChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Core.CoreWindow, global::Windows.UI.Core.WindowSizeChangedEventArgs> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Core_CoreWindow_j_Windows_UI_Core_WindowSizeChangedEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Core_CoreWindow_j_Windows_UI_Core_WindowSizeChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_pCookie__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken pCookie__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Core_CoreWindow_j_Windows_UI_Core_WindowSizeChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Core.CoreWindow, global::Windows.UI.Core.WindowSizeChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget64>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Core_CoreWindow_j_Windows_UI_Core_WindowSizeChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_pCookie__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				pCookie__retval = unsafe_pCookie__retval;
				// Return
				return pCookie__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreImmersiveApplication3.CreateNewView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_IFrameworkViewSource__Windows_ApplicationModel_Core__IFrameworkViewSource *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.CoreApplicationView Func_ApplicationModel_Core_IFrameworkViewSource__ApplicationModel_Core_CoreApplicationView__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.IFrameworkViewSource viewSource, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl** unsafe_viewSource = default(global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_view__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.CoreApplicationView view__retval = default(global::Windows.ApplicationModel.Core.CoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_viewSource = (global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									viewSource, 
									typeof(global::Windows.ApplicationModel.Core.IFrameworkViewSource).TypeHandle
								);
				unsafe_view__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_viewSource, 
									&(unsafe_view__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				view__retval = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_view__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
								);
				// Return
				return view__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_viewSource)));
				global::System.GC.KeepAlive(viewSource);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_view__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplication.add_Suspending, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_ApplicationModel_SuspendingEventArgs___Windows_Foundation__EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_ApplicationModel_SuspendingEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget2>(global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplication.get_Properties, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IPropertySet__Windows_Foundation_Collections__IPropertySet *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IPropertySet Func__Collections_IPropertySet__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IPropertySet__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.Collections.IPropertySet__Impl.Vtbl**);
			global::Windows.Foundation.Collections.IPropertySet value__retval = default(global::Windows.Foundation.Collections.IPropertySet);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Foundation.Collections.IPropertySet)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.Collections.IPropertySet).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplication.GetCurrentView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.CoreApplicationView Func_ApplicationModel_Core_CoreApplicationView__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.CoreApplicationView value__retval = default(global::Windows.ApplicationModel.Core.CoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplication.Run, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_IFrameworkViewSource__Windows_ApplicationModel_Core__IFrameworkViewSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Core_IFrameworkViewSource__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.IFrameworkViewSource viewSource, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl** unsafe_viewSource = default(global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_viewSource = (global::Windows.ApplicationModel.Core.IFrameworkViewSource__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									viewSource, 
									typeof(global::Windows.ApplicationModel.Core.IFrameworkViewSource).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_viewSource
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_viewSource)));
				global::System.GC.KeepAlive(viewSource);
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplication.RunWithActivationFactories, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IGetActivationFactory__Windows_Foundation__IGetActivationFactory *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IGetActivationFactory__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IGetActivationFactory activationFactoryCallback, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IGetActivationFactory__Impl.Vtbl** unsafe_activationFactoryCallback = default(global::Windows.Foundation.IGetActivationFactory__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_activationFactoryCallback = (global::Windows.Foundation.IGetActivationFactory__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									activationFactoryCallback, 
									typeof(global::Windows.Foundation.IGetActivationFactory).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_activationFactoryCallback
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_activationFactoryCallback)));
				global::System.GC.KeepAlive(activationFactoryCallback);
			}
		}

		// Signature, Windows.Foundation.Collections.MapChangedEventHandler<string,System.Object>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IObservableMap_2_string__object___Windows_Foundation_Collections__IObservableMap_A_string_j_object_V_ *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IMapChangedEventArgs_1_string___Windows_Foundation_Collections__IMapChangedEventArgs_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Collections_IObservableMap_2_string__object__Collections_IMapChangedEventArgs_1_string___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Collections.IObservableMap<string, object> sender, 
					global::Windows.Foundation.Collections.IMapChangedEventArgs<string> @event, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IObservableMap_A_string_j_System_Object_V___Impl.Vtbl** unsafe_sender = default(global::Windows.Foundation.Collections.IObservableMap_A_string_j_System_Object_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl** unsafe_event = default(global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.Foundation.Collections.IObservableMap_A_string_j_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.Foundation.Collections.IObservableMap<string, object>).TypeHandle
								);
				unsafe_event = (global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									@event, 
									typeof(global::Windows.Foundation.Collections.IMapChangedEventArgs<string>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_event
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_event)));
				global::System.GC.KeepAlive(@event);
			}
		}

		// Signature, System.EventHandler<Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs__Windows_ApplicationModel_Core__UnhandledErrorDetectedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__ApplicationModel_Core_UnhandledErrorDetectedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.ApplicationModel.Core.IUnhandledErrorDetectedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Core.IUnhandledErrorDetectedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Windows.ApplicationModel.Core.IUnhandledErrorDetectedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Core.IUnhandledErrorDetectedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreApplicationUnhandledError.add_UnhandledErrorDetected, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs___Windows_Foundation__EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_ApplicationModel_Core_UnhandledErrorDetectedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget65>(global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreImmersiveApplication.get_Views, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_ApplicationModel_Core_CoreApplicationView___Windows_Foundation_Collections__IVectorView_A_Windows_ApplicationModel_Core_CoreApplicationView_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView> Func__IReadOnlyList_1_ApplicationModel_Core_CoreApplicationView___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_ApplicationModel_Core_CoreApplicationView_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_ApplicationModel_Core_CoreApplicationView_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView> value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Core.ICoreImmersiveApplication.CreateNewView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.CoreApplicationView Func_string__string__ApplicationModel_Core_CoreApplicationView__(
					global::System.__ComObject __this, 
					string runtimeType, 
					string entryPoint, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_runtimeType = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.HSTRING unsafe_entryPoint = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_view__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.CoreApplicationView view__retval = default(global::Windows.ApplicationModel.Core.CoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_runtimeType = runtimeType)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_runtimeType;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_runtimeType, runtimeType, &(hstring_header_runtimeType), &(unsafe_runtimeType));
					fixed (char* pBuffer_entryPoint = entryPoint)
					{
						global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_entryPoint;
						global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_entryPoint, entryPoint, &(hstring_header_entryPoint), &(unsafe_entryPoint));
						unsafe_view__retval = null;
						// Call to native method
						unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
											__this, 
											__typeHnd, 
											__targetIndex, 
											unsafe_runtimeType, 
											unsafe_entryPoint, 
											&(unsafe_view__retval)
										);
						global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
						view__retval = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_view__retval), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
											typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
										);
					}
				}
				// Return
				return view__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_view__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.CoreApplicationView>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.CoreApplicationView Func_uint__ApplicationModel_Core_CoreApplicationView__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.CoreApplicationView __value__retval = default(global::Windows.ApplicationModel.Core.CoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.CoreApplicationView>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_ApplicationModel_Core_CoreApplicationView__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.CoreApplicationView value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_value = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.CoreApplicationView>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_ApplicationModel_Core_CoreApplicationView__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.ApplicationModel.Core.CoreApplicationView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
											typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.ApplicationModel.Core.CoreApplicationView>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_ApplicationModel_Core_CoreApplicationView___Windows_Foundation_Collections__IIterator_A_Windows_ApplicationModel_Core_CoreApplicationView_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.CoreApplicationView> Func__Collections_IIterator_1_ApplicationModel_Core_CoreApplicationView___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_CoreApplicationView_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_CoreApplicationView_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.CoreApplicationView> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.CoreApplicationView>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.CoreApplicationView>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.CoreApplicationView>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.CoreApplicationView>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_ApplicationModel_Core_CoreApplicationView__uint__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.CoreApplicationView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.CoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle, 
											typeof(global::Windows.ApplicationModel.Core.CoreApplicationView).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Core__CoreApplicationView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.ApplicationModel.Core.ICoreApplicationView>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_ApplicationModel_Core_ICoreApplicationView___Windows_Foundation_Collections__IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView> Func__Collections_IIterator_1_ApplicationModel_Core_ICoreApplicationView___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView Func_ApplicationModel_Core_ICoreApplicationView__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_ApplicationModel_Core_ICoreApplicationView__uint__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.ApplicationModel.Core.ICoreApplicationView2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_ApplicationModel_Core_ICoreApplicationView2___Windows_Foundation_Collections__IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView2> Func__Collections_IIterator_1_ApplicationModel_Core_ICoreApplicationView2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView2 Func_ApplicationModel_Core_ICoreApplicationView2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView2 __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_ApplicationModel_Core_ICoreApplicationView2__uint__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.ApplicationModel.Core.ICoreApplicationView3>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_ApplicationModel_Core_ICoreApplicationView3___Windows_Foundation_Collections__IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView3_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView3> Func__Collections_IIterator_1_ApplicationModel_Core_ICoreApplicationView3___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView3_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_ApplicationModel_Core_ICoreApplicationView3_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView3> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView3>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView3>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.ApplicationModel.Core.ICoreApplicationView3>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView3>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView3 Func_ApplicationModel_Core_ICoreApplicationView3__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView3 __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.ApplicationModel.Core.ICoreApplicationView3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_ApplicationModel_Core_ICoreApplicationView3__uint__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView Func_uint__ApplicationModel_Core_ICoreApplicationView__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_ApplicationModel_Core_ICoreApplicationView__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl** unsafe_value = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_ApplicationModel_Core_ICoreApplicationView__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView__Windows_ApplicationModel_Core__ICoreApplicationView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView2 Func_uint__ApplicationModel_Core_ICoreApplicationView2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView2 __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_ApplicationModel_Core_ICoreApplicationView2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl** unsafe_value = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_ApplicationModel_Core_ICoreApplicationView2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView2__Windows_ApplicationModel_Core__ICoreApplicationView2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView3>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Core.ICoreApplicationView3 Func_uint__ApplicationModel_Core_ICoreApplicationView3__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**);
			global::Windows.ApplicationModel.Core.ICoreApplicationView3 __value__retval = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Core.ICoreApplicationView3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView3>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_ApplicationModel_Core_ICoreApplicationView3__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView3 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl** unsafe_value = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.ApplicationModel.Core.ICoreApplicationView3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_ApplicationModel_Core_ICoreApplicationView3__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.ApplicationModel.Core.ICoreApplicationView3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl*** unsafe_items = default(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * items
						items[mcgIdx] = (global::Windows.ApplicationModel.Core.ICoreApplicationView3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Core_ICoreApplicationView3__Windows_ApplicationModel_Core__ICoreApplicationView3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IResourceDictionary>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IResourceDictionary__Windows_UI_Xaml__IResourceDictionary *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IResourceDictionary Func_uint__UI_Xaml_IResourceDictionary__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**);
			global::Windows.UI.Xaml.IResourceDictionary __value__retval = default(global::Windows.UI.Xaml.IResourceDictionary);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IResourceDictionary)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IResourceDictionary).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IResourceDictionary>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IResourceDictionary__Windows_UI_Xaml__IResourceDictionary *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IResourceDictionary__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IResourceDictionary value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IResourceDictionary).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IResourceDictionary>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IResourceDictionary__Windows_UI_Xaml__IResourceDictionary * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IResourceDictionary__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IResourceDictionary[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IResourceDictionary__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IResourceDictionary__Windows_UI_Xaml__IResourceDictionary * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IResourceDictionary)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IResourceDictionary).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IResourceDictionary__Windows_UI_Xaml__IResourceDictionary * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<System.Collections.Generic.IDictionary<System.Object,System.Object>>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IDictionary_2_object__object___Windows_Foundation_Collections__IMap_A_object_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IDictionary<object, object> Func_uint___IDictionary_2_object__object___(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.IDictionary<object, object> __value__retval = default(global::System.Collections.Generic.IDictionary<object, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IDictionary<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IDictionary<object, object>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<System.Collections.Generic.IDictionary<System.Object,System.Object>>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IDictionary_2_object__object___Windows_Foundation_Collections__IMap_A_object_j_object_V_ *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func__IDictionary_2_object__object___out_uint__bool__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IDictionary<object, object> value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl** unsafe_value = default(global::System.Collections.Generic.IDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.Collections.Generic.IDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::System.Collections.Generic.IDictionary<object, object>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<System.Collections.Generic.IDictionary<System.Object,System.Object>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_IDictionary_2_object__object___Windows_Foundation_Collections__IMap_A_object_j_object_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg__IDictionary_2_object__object___uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::System.Collections.Generic.IDictionary<object, object>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.IDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.IDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.IDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.IDictionary_A_System_Object_j_System_Object_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IDictionary_2_object__object___Windows_Foundation_Collections__IMap_A_object_j_object_V_ * items
						items[mcgIdx] = (global::System.Collections.Generic.IDictionary<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::System.Collections.Generic.IDictionary<object, object>).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IDictionary_2_object__object___Windows_Foundation_Collections__IMap_A_object_j_object_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_System_Collections_Generic_KeyValuePair_2_object__object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IKeyValuePair_A_object_j_object_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>> Func_uint___IEnumerable_1__KeyValuePair_2_object__object__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>> __value__retval = default(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_System_Collections_Generic_KeyValuePair_2_object__object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IKeyValuePair_A_object_j_object_V__V_ *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func__IEnumerable_1__KeyValuePair_2_object__object__out_uint__bool__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>> value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl** unsafe_value = default(global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_IEnumerable_1_System_Collections_Generic_KeyValuePair_2_object__object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IKeyValuePair_A_object_j_object_V__V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg__IEnumerable_1__KeyValuePair_2_object__object__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_KeyValuePair_A_System_Object_j_System_Object_V__V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_System_Collections_Generic_KeyValuePair_2_object__object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IKeyValuePair_A_object_j_object_V__V_ * items
						items[mcgIdx] = (global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<object, object>>).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_System_Collections_Generic_KeyValuePair_2_object__object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IKeyValuePair_A_object_j_object_V__V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IVisualStateGroup>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualStateGroup__Windows_UI_Xaml__IVisualStateGroup *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IVisualStateGroup Func_uint__UI_Xaml_IVisualStateGroup__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl**);
			global::Windows.UI.Xaml.IVisualStateGroup __value__retval = default(global::Windows.UI.Xaml.IVisualStateGroup);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IVisualStateGroup)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IVisualStateGroup).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IVisualStateGroup>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualStateGroup__Windows_UI_Xaml__IVisualStateGroup *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IVisualStateGroup__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IVisualStateGroup value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IVisualStateGroup).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IVisualStateGroup>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IVisualStateGroup__Windows_UI_Xaml__IVisualStateGroup * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IVisualStateGroup__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IVisualStateGroup[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IVisualStateGroup__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualStateGroup__Windows_UI_Xaml__IVisualStateGroup * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IVisualStateGroup)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IVisualStateGroup).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualStateGroup__Windows_UI_Xaml__IVisualStateGroup * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IVisualState>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualState__Windows_UI_Xaml__IVisualState *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IVisualState Func_uint__UI_Xaml_IVisualState__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualState__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl**);
			global::Windows.UI.Xaml.IVisualState __value__retval = default(global::Windows.UI.Xaml.IVisualState);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IVisualState)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IVisualState).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IVisualState>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualState__Windows_UI_Xaml__IVisualState *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IVisualState__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IVisualState value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualState__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IVisualState__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IVisualState).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IVisualState>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IVisualState__Windows_UI_Xaml__IVisualState * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IVisualState__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IVisualState[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IVisualState__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IVisualState__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IVisualState__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualState__Windows_UI_Xaml__IVisualState * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IVisualState)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IVisualState).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualState__Windows_UI_Xaml__IVisualState * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IVisualState2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualState2__Windows_UI_Xaml__IVisualState2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IVisualState2 Func_uint__UI_Xaml_IVisualState2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualState2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IVisualState2__Impl.Vtbl**);
			global::Windows.UI.Xaml.IVisualState2 __value__retval = default(global::Windows.UI.Xaml.IVisualState2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IVisualState2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IVisualState2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IVisualState2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualState2__Windows_UI_Xaml__IVisualState2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IVisualState2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IVisualState2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IVisualState2__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IVisualState2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IVisualState2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IVisualState2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IVisualState2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IVisualState2__Windows_UI_Xaml__IVisualState2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IVisualState2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IVisualState2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IVisualState2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IVisualState2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IVisualState2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IVisualState2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualState2__Windows_UI_Xaml__IVisualState2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IVisualState2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IVisualState2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IVisualState2__Windows_UI_Xaml__IVisualState2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IStateTriggerBase>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IStateTriggerBase__Windows_UI_Xaml__IStateTriggerBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IStateTriggerBase Func_uint__UI_Xaml_IStateTriggerBase__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.IStateTriggerBase __value__retval = default(global::Windows.UI.Xaml.IStateTriggerBase);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IStateTriggerBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IStateTriggerBase).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IStateTriggerBase>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IStateTriggerBase__Windows_UI_Xaml__IStateTriggerBase *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IStateTriggerBase__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IStateTriggerBase value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IStateTriggerBase).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IStateTriggerBase>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IStateTriggerBase__Windows_UI_Xaml__IStateTriggerBase * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IStateTriggerBase__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IStateTriggerBase[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IStateTriggerBase__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IStateTriggerBase__Windows_UI_Xaml__IStateTriggerBase * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IStateTriggerBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IStateTriggerBase).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IStateTriggerBase__Windows_UI_Xaml__IStateTriggerBase * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IStateTriggerBaseProtected>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IStateTriggerBaseProtected__Windows_UI_Xaml__IStateTriggerBaseProtected *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.IStateTriggerBaseProtected Func_uint__UI_Xaml_IStateTriggerBaseProtected__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStateTriggerBaseProtected__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.IStateTriggerBaseProtected__Impl.Vtbl**);
			global::Windows.UI.Xaml.IStateTriggerBaseProtected __value__retval = default(global::Windows.UI.Xaml.IStateTriggerBaseProtected);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.IStateTriggerBaseProtected)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.IStateTriggerBaseProtected).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IStateTriggerBaseProtected>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IStateTriggerBaseProtected__Windows_UI_Xaml__IStateTriggerBaseProtected *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_IStateTriggerBaseProtected__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.IStateTriggerBaseProtected value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IStateTriggerBaseProtected__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.IStateTriggerBaseProtected__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.IStateTriggerBaseProtected__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.IStateTriggerBaseProtected).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.IStateTriggerBaseProtected>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_IStateTriggerBaseProtected__Windows_UI_Xaml__IStateTriggerBaseProtected * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_IStateTriggerBaseProtected__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.IStateTriggerBaseProtected[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.IStateTriggerBaseProtected__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.IStateTriggerBaseProtected__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.IStateTriggerBaseProtected__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.IStateTriggerBaseProtected__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IStateTriggerBaseProtected__Windows_UI_Xaml__IStateTriggerBaseProtected * items
						items[mcgIdx] = (global::Windows.UI.Xaml.IStateTriggerBaseProtected)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.IStateTriggerBaseProtected).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_IStateTriggerBaseProtected__Windows_UI_Xaml__IStateTriggerBaseProtected * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Nullable<System.AttributeTargets>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_AttributeTargets__Windows_Foundation_Metadata__AttributeTargets, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.AttributeTargets Func_AttributeTargets__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.AttributeTargets unsafe___value__retval;
			global::System.AttributeTargets __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.DurationType>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_DurationType__Windows_UI_Xaml__DurationType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DurationType Func_UI_Xaml_DurationType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DurationType unsafe___value__retval;
			global::Windows.UI.Xaml.DurationType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.GridUnitType>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_GridUnitType__Windows_UI_Xaml__GridUnitType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.GridUnitType Func_UI_Xaml_GridUnitType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.GridUnitType unsafe___value__retval;
			global::Windows.UI.Xaml.GridUnitType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.Primitives.GeneratorPosition>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Controls_Primitives_GeneratorPosition__Windows_UI_Xaml_Controls_Primitives__GeneratorPosition, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Primitives.GeneratorPosition Func_UI_Xaml_Controls_Primitives_GeneratorPosition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Primitives.GeneratorPosition unsafe___value__retval;
			global::Windows.UI.Xaml.Controls.Primitives.GeneratorPosition __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Media.Matrix>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Matrix__Windows_UI_Xaml_Media__Matrix, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Matrix Func_UI_Xaml_Media_Matrix__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Matrix unsafe___value__retval;
			global::Windows.UI.Xaml.Media.Matrix __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Media.Animation.RepeatBehavior>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Animation_RepeatBehavior__Windows_UI_Xaml_Media_Animation__RepeatBehavior, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.RepeatBehavior Func_UI_Xaml_Media_Animation_RepeatBehavior__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.RepeatBehavior unsafe___value__retval;
			global::Windows.UI.Xaml.Media.Animation.RepeatBehavior __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Media.Animation.RepeatBehaviorType>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Animation_RepeatBehaviorType__Windows_UI_Xaml_Media_Animation__RepeatBehaviorType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.RepeatBehaviorType Func_UI_Xaml_Media_Animation_RepeatBehaviorType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.RepeatBehaviorType unsafe___value__retval;
			global::Windows.UI.Xaml.Media.Animation.RepeatBehaviorType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Media.Media3D.Matrix3D>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Media3D_Matrix3D__Windows_UI_Xaml_Media_Media3D__Matrix3D, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Media3D.Matrix3D Func_UI_Xaml_Media_Media3D_Matrix3D__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Media3D.Matrix3D unsafe___value__retval;
			global::Windows.UI.Xaml.Media.Media3D.Matrix3D __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<System.Numerics.Vector2>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector2__Windows_Foundation_Numerics__Vector2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Vector2 Func_Numerics_Vector2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Vector2 unsafe___value__retval;
			global::System.Numerics.Vector2 __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<System.Numerics.Vector3>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector3__Windows_Foundation_Numerics__Vector3, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Vector3 Func_Numerics_Vector3__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Vector3 unsafe___value__retval;
			global::System.Numerics.Vector3 __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<System.Numerics.Vector4>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Vector4__Windows_Foundation_Numerics__Vector4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Vector4 Func_Numerics_Vector4__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Vector4 unsafe___value__retval;
			global::System.Numerics.Vector4 __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<System.Numerics.Matrix3x2>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix3x2__Windows_Foundation_Numerics__Matrix3x2, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Matrix3x2 Func_Numerics_Matrix3x2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Matrix3x2 unsafe___value__retval;
			global::System.Numerics.Matrix3x2 __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<System.Numerics.Matrix4x4>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Matrix4x4__Windows_Foundation_Numerics__Matrix4x4, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Matrix4x4 Func_Numerics_Matrix4x4__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Matrix4x4 unsafe___value__retval;
			global::System.Numerics.Matrix4x4 __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<System.Numerics.Plane>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Plane__Windows_Foundation_Numerics__Plane, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Plane Func_Numerics_Plane__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Plane unsafe___value__retval;
			global::System.Numerics.Plane __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<System.Numerics.Quaternion>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Numerics_Quaternion__Windows_Foundation_Numerics__Quaternion, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Numerics.Quaternion Func_Numerics_Quaternion__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Numerics.Quaternion unsafe___value__retval;
			global::System.Numerics.Quaternion __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.ApplicationModel.Background.IBackgroundTaskInstance.GetDeferral, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Background_BackgroundTaskDeferral__Windows_ApplicationModel_Background__BackgroundTaskDeferral *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Background.BackgroundTaskDeferral Func_ApplicationModel_Background_BackgroundTaskDeferral__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Background.IBackgroundTaskDeferral__Impl.Vtbl** unsafe_deferral__retval = default(global::Windows.ApplicationModel.Background.IBackgroundTaskDeferral__Impl.Vtbl**);
			global::Windows.ApplicationModel.Background.BackgroundTaskDeferral deferral__retval = default(global::Windows.ApplicationModel.Background.BackgroundTaskDeferral);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_deferral__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_deferral__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				deferral__retval = (global::Windows.ApplicationModel.Background.BackgroundTaskDeferral)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_deferral__retval), 
									typeof(global::Windows.ApplicationModel.Background.IBackgroundTaskDeferral).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Background.BackgroundTaskDeferral).TypeHandle
								);
				// Return
				return deferral__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_deferral__retval)));
			}
		}

		// Signature, System.Nullable<NotificationsExtensions.Toasts.ToastActivationType>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Toasts_ToastActivationType__NotificationsExtensions_Toasts__ToastActivationType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Toasts.ToastActivationType Func_NotificationsExtensions_Toasts_ToastActivationType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.ToastActivationType unsafe___value__retval;
			global::NotificationsExtensions.Toasts.ToastActivationType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<NotificationsExtensions.Toasts.ToastDuration>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Toasts_ToastDuration__NotificationsExtensions_Toasts__ToastDuration, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Toasts.ToastDuration Func_NotificationsExtensions_Toasts_ToastDuration__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.ToastDuration unsafe___value__retval;
			global::NotificationsExtensions.Toasts.ToastDuration __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<NotificationsExtensions.Toasts.ToastScenario>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Toasts_ToastScenario__NotificationsExtensions_Toasts__ToastScenario, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Toasts.ToastScenario Func_NotificationsExtensions_Toasts_ToastScenario__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.ToastScenario unsafe___value__retval;
			global::NotificationsExtensions.Toasts.ToastScenario __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<NotificationsExtensions.Toasts.ToastImageCrop>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Toasts_ToastImageCrop__NotificationsExtensions_Toasts__ToastImageCrop, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Toasts.ToastImageCrop Func_NotificationsExtensions_Toasts_ToastImageCrop__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.ToastImageCrop unsafe___value__retval;
			global::NotificationsExtensions.Toasts.ToastImageCrop __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<NotificationsExtensions.Tiles.TileTextStacking>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Tiles_TileTextStacking__NotificationsExtensions_Tiles__TileTextStacking, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.TileTextStacking Func_NotificationsExtensions_Tiles_TileTextStacking__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.TileTextStacking unsafe___value__retval;
			global::NotificationsExtensions.Tiles.TileTextStacking __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<NotificationsExtensions.Tiles.TileImageAlign>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Tiles_TileImageAlign__NotificationsExtensions_Tiles__TileImageAlign, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.TileImageAlign Func_NotificationsExtensions_Tiles_TileImageAlign__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.TileImageAlign unsafe___value__retval;
			global::NotificationsExtensions.Tiles.TileImageAlign __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<NotificationsExtensions.Tiles.TileImageCrop>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Tiles_TileImageCrop__NotificationsExtensions_Tiles__TileImageCrop, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.TileImageCrop Func_NotificationsExtensions_Tiles_TileImageCrop__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.TileImageCrop unsafe___value__retval;
			global::NotificationsExtensions.Tiles.TileImageCrop __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<NotificationsExtensions.Tiles.TileTextAlign>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Tiles_TileTextAlign__NotificationsExtensions_Tiles__TileTextAlign, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.TileTextAlign Func_NotificationsExtensions_Tiles_TileTextAlign__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.TileTextAlign unsafe___value__retval;
			global::NotificationsExtensions.Tiles.TileTextAlign __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<NotificationsExtensions.Tiles.TileTextStyle>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Tiles_TileTextStyle__NotificationsExtensions_Tiles__TileTextStyle, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.TileTextStyle Func_NotificationsExtensions_Tiles_TileTextStyle__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.TileTextStyle unsafe___value__retval;
			global::NotificationsExtensions.Tiles.TileTextStyle __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<NotificationsExtensions.Tiles.TileBranding>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Tiles_TileBranding__NotificationsExtensions_Tiles__TileBranding, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.TileBranding Func_NotificationsExtensions_Tiles_TileBranding__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.TileBranding unsafe___value__retval;
			global::NotificationsExtensions.Tiles.TileBranding __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<NotificationsExtensions.Badges.GlyphValue>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Badges_GlyphValue__NotificationsExtensions_Badges__GlyphValue, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Badges.GlyphValue Func_NotificationsExtensions_Badges_GlyphValue__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Badges.GlyphValue unsafe___value__retval;
			global::NotificationsExtensions.Badges.GlyphValue __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.Foundation.Point>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Point__Windows_Foundation__Point *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Point[] Func_rg__Point__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Point* unsafe___value__retval = default(global::Windows.Foundation.Point*);
			global::Windows.Foundation.Point[] __value__retval = default(global::Windows.Foundation.Point[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.Foundation.Point[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.Foundation.Size>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Size__Windows_Foundation__Size *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Size[] Func_rg__Size__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Size* unsafe___value__retval = default(global::Windows.Foundation.Size*);
			global::Windows.Foundation.Size[] __value__retval = default(global::Windows.Foundation.Size[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.Foundation.Size[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.Foundation.Rect>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_Windows_Foundation_Rect__Windows_Foundation__Rect *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect[] Func_rg__Rect__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Rect* unsafe___value__retval = default(global::Windows.Foundation.Rect*);
			global::Windows.Foundation.Rect[] __value__retval = default(global::Windows.Foundation.Rect[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.Foundation.Rect[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.TappedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_TappedEventHandler__Windows_UI_Xaml_Input__TappedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.TappedEventHandler Func_UI_Xaml_Input_TappedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.TappedEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.TappedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.TappedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.TappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget9>(global::Windows.UI.Xaml.Input.TappedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.RoutedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_RoutedEventHandler__Windows_UI_Xaml__RoutedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.RoutedEventHandler Func_UI_Xaml_RoutedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.RoutedEventHandler __value__retval = default(global::Windows.UI.Xaml.RoutedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.RoutedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.RoutedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget6>(global::Windows.UI.Xaml.RoutedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Automation.Peers.AccessibilityView>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AccessibilityView__Windows_UI_Xaml_Automation_Peers__AccessibilityView, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AccessibilityView Func_UI_Xaml_Automation_Peers_AccessibilityView__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.AccessibilityView unsafe___value__retval;
			global::Windows.UI.Xaml.Automation.Peers.AccessibilityView __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.KeyEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_KeyEventHandler__Windows_UI_Xaml_Input__KeyEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.KeyEventHandler Func_UI_Xaml_Input_KeyEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.KeyEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.KeyEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.KeyEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.KeyEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget5>(global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.TextChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_TextChangedEventHandler__Windows_UI_Xaml_Controls__TextChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.TextChangedEventHandler Func_UI_Xaml_Controls_TextChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.TextChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.TextChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.TextChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.Controls.TextChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.TextChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.TextChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget26>(global::Windows.UI.Xaml.Controls.TextChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.SelectionChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_SelectionChangedEventHandler__Windows_UI_Xaml_Controls__SelectionChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler Func_UI_Xaml_Controls_SelectionChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget35>(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapInputEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapInputEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapInputEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapInputEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapInputEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapInputEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapInputEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapInputEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapInputEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapInputEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapInputEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget44>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapInputEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.AutoSuggestBox,Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_AutoSuggestBox__Windows_UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_AutoSuggestBox__UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget54>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxSuggestionChosenEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SplitView,Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_SplitView__Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, global::Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_SplitView__UI_Xaml_Controls_SplitViewPaneClosingEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, global::Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, global::Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, global::Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, global::Windows.UI.Xaml.Controls.SplitViewPaneClosingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget57>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_Windows_UI_Xaml_Controls_SplitViewPaneClosingEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Navigation.NavigatedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigatedEventHandler__Windows_UI_Xaml_Navigation__NavigatedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Navigation.NavigatedEventHandler Func_UI_Xaml_Navigation_NavigatedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Navigation.NavigatedEventHandler __value__retval = default(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Navigation.NavigatedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget59>(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigatingCancelEventHandler__Windows_UI_Xaml_Navigation__NavigatingCancelEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler Func_UI_Xaml_Navigation_NavigatingCancelEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler __value__retval = default(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget60>(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigationStoppedEventHandler__Windows_UI_Xaml_Navigation__NavigationStoppedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler Func_UI_Xaml_Navigation_NavigationStoppedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler __value__retval = default(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget59>(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Devices.Geolocation.IGeoposition.get_Coordinate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_Geocoordinate__Windows_Devices_Geolocation__Geocoordinate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Geolocation.Geocoordinate Func_Devices_Geolocation_Geocoordinate__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.IGeocoordinate__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Devices.Geolocation.IGeocoordinate__Impl.Vtbl**);
			global::Windows.Devices.Geolocation.Geocoordinate value__retval = default(global::Windows.Devices.Geolocation.Geocoordinate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Devices.Geolocation.Geocoordinate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Devices.Geolocation.IGeocoordinate).TypeHandle, 
									typeof(global::Windows.Devices.Geolocation.Geocoordinate).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Devices.Geolocation.IGeolocatorStatics.RequestAccessAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_Devices_Geolocation_GeolocationAccessStatus___Windows_Foundation__IAsyncOperation_A_Windows_Devices_Geolocation_GeolocationAccessStatus_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Geolocation.GeolocationAccessStatus> Func__IAsyncOperation_1_Devices_Geolocation_GeolocationAccessStatus___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Geolocation_GeolocationAccessStatus_V___Impl.Vtbl** unsafe_result__retval = default(global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Geolocation_GeolocationAccessStatus_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Geolocation.GeolocationAccessStatus> result__retval = default(global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Geolocation.GeolocationAccessStatus>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_result__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_result__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				result__retval = (global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Geolocation.GeolocationAccessStatus>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_result__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Geolocation.GeolocationAccessStatus>).TypeHandle
								);
				// Return
				return result__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_result__retval)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Windows.Devices.Geolocation.GeolocationAccessStatus>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_Devices_Geolocation_GeolocationAccessStatus___Windows_Foundation__IAsyncOperation_A_Windows_Devices_Geolocation_GeolocationAccessStatus_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_Devices_Geolocation_GeolocationAccessStatus___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Geolocation.GeolocationAccessStatus> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Geolocation_GeolocationAccessStatus_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Geolocation_GeolocationAccessStatus_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Geolocation_GeolocationAccessStatus_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Geolocation.GeolocationAccessStatus>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.Devices.Geolocation.GeolocationAccessStatus>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Devices_Geolocation_GeolocationAccessStatus___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_GeolocationAccessStatus_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationCompletedHandler_1_Devices_Geolocation_GeolocationAccessStatus___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Geolocation.GeolocationAccessStatus> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_GeolocationAccessStatus_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_GeolocationAccessStatus_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_GeolocationAccessStatus_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Geolocation.GeolocationAccessStatus>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget66>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_GeolocationAccessStatus_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.Devices.Geolocation.GeolocationAccessStatus>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Devices_Geolocation_GeolocationAccessStatus__Windows_Devices_Geolocation__GeolocationAccessStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Geolocation.GeolocationAccessStatus Func_Devices_Geolocation_GeolocationAccessStatus__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.GeolocationAccessStatus unsafe___value__retval;
			global::Windows.Devices.Geolocation.GeolocationAccessStatus __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Devices.Geolocation.IGeolocator.GetGeopositionAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_Devices_Geolocation_Geoposition___Windows_Foundation__IAsyncOperation_A_Windows_Devices_Geolocation_Geoposition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Geolocation.Geoposition> Func__IAsyncOperation_1_Devices_Geolocation_Geoposition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Geolocation_Geoposition_V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Geolocation_Geoposition_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Geolocation.Geoposition> value__retval = default(global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Geolocation.Geoposition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Geolocation.Geoposition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Geolocation.Geoposition>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.Devices.Geolocation.Geolocator,Windows.Devices.Geolocation.PositionChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_Geolocator__Windows_Devices_Geolocation__Geolocator *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_PositionChangedEventArgs__Windows_Devices_Geolocation__PositionChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Devices_Geolocation_Geolocator__Devices_Geolocation_PositionChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.Devices.Geolocation.Geolocator sender, 
					global::Windows.Devices.Geolocation.PositionChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.IGeolocator__Impl.Vtbl** unsafe_sender = default(global::Windows.Devices.Geolocation.IGeolocator__Impl.Vtbl**);
			global::Windows.Devices.Geolocation.IPositionChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.Devices.Geolocation.IPositionChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.Devices.Geolocation.IGeolocator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.Devices.Geolocation.IGeolocator).TypeHandle
								);
				unsafe_args = (global::Windows.Devices.Geolocation.IPositionChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.Devices.Geolocation.IPositionChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.Devices.Geolocation.IGeolocator.add_PositionChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_Devices_Geolocation_Geolocator__Windows_Devices_Geolocation_PositionChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_PositionChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Devices_Geolocation_Geolocator__Devices_Geolocation_PositionChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Geolocation.Geolocator, global::Windows.Devices.Geolocation.PositionChangedEventArgs> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_PositionChangedEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_PositionChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_PositionChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Geolocation.Geolocator, global::Windows.Devices.Geolocation.PositionChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget67>(global::Windows.Foundation.TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_PositionChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.Devices.Geolocation.Geolocator,Windows.Devices.Geolocation.StatusChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_Geolocator__Windows_Devices_Geolocation__Geolocator *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_StatusChangedEventArgs__Windows_Devices_Geolocation__StatusChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Devices_Geolocation_Geolocator__Devices_Geolocation_StatusChangedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.Devices.Geolocation.Geolocator sender, 
					global::Windows.Devices.Geolocation.StatusChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.IGeolocator__Impl.Vtbl** unsafe_sender = default(global::Windows.Devices.Geolocation.IGeolocator__Impl.Vtbl**);
			global::Windows.Devices.Geolocation.IStatusChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.Devices.Geolocation.IStatusChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.Devices.Geolocation.IGeolocator__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.Devices.Geolocation.IGeolocator).TypeHandle
								);
				unsafe_args = (global::Windows.Devices.Geolocation.IStatusChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.Devices.Geolocation.IStatusChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.Devices.Geolocation.IGeolocator.add_StatusChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_Devices_Geolocation_Geolocator__Windows_Devices_Geolocation_StatusChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_StatusChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Devices_Geolocation_Geolocator__Devices_Geolocation_StatusChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Geolocation.Geolocator, global::Windows.Devices.Geolocation.StatusChangedEventArgs> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_StatusChangedEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_StatusChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_StatusChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Geolocation.Geolocator, global::Windows.Devices.Geolocation.StatusChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget68>(global::Windows.Foundation.TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_StatusChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Windows.Devices.Geolocation.Geoposition>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_Devices_Geolocation_Geoposition___Windows_Foundation__IAsyncOperation_A_Windows_Devices_Geolocation_Geoposition_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_Devices_Geolocation_Geoposition___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Geolocation.Geoposition> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Geolocation_Geoposition_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Geolocation_Geoposition_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Geolocation_Geoposition_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Geolocation.Geoposition>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.Devices.Geolocation.Geoposition>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Devices_Geolocation_Geoposition___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_Geoposition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationCompletedHandler_1_Devices_Geolocation_Geoposition___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Geolocation.Geoposition> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_Geoposition_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_Geoposition_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_Geoposition_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Geolocation.Geoposition>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget69>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_Geoposition_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.Devices.Geolocation.Geoposition>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_Geoposition__Windows_Devices_Geolocation__Geoposition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Geolocation.Geoposition Func_Devices_Geolocation_Geoposition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.IGeoposition__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Devices.Geolocation.IGeoposition__Impl.Vtbl**);
			global::Windows.Devices.Geolocation.Geoposition __value__retval = default(global::Windows.Devices.Geolocation.Geoposition);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Devices.Geolocation.Geoposition)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Devices.Geolocation.IGeoposition).TypeHandle, 
									typeof(global::Windows.Devices.Geolocation.Geoposition).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Devices.Geolocation.IStatusChangedEventArgs.get_Status, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Devices_Geolocation_PositionStatus__Windows_Devices_Geolocation__PositionStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Geolocation.PositionStatus Func_Devices_Geolocation_PositionStatus__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.PositionStatus unsafe_value__retval;
			global::Windows.Devices.Geolocation.PositionStatus value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Devices.Geolocation.IGeolocatorWithScalarAccuracy.put_DesiredAccuracyInMeters, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_uint___Windows_Foundation__IReference_A_uint_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Nullable_1_uint___(
					global::System.__ComObject __this, 
					global::System.Nullable<uint> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_uint_V___Impl.Vtbl** unsafe_value = default(global::System.Nullable_A_uint_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (value.HasValue)
				{
					global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<uint> unsafe_value_Wrapper = new global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<uint>(value.Value, 5);
					unsafe_value = (global::System.Nullable_A_uint_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ManagedObjectToComInterface(
										unsafe_value_Wrapper, 
										typeof(global::Windows.Foundation.IReference<uint>).TypeHandle
									);
				}
				else
					unsafe_value = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Markup.XmlnsDefinition>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.XmlnsDefinition Func_UI_Xaml_Markup_XmlnsDefinition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType unsafe___value__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType);
			global::Windows.UI.Xaml.Markup.XmlnsDefinition __value__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition);
			int unsafe___return__;
			// Marshalling
			unsafe___value__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType);
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__UnsafeToSafe(
								ref unsafe___value__retval, 
								out __value__retval
							);
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.Markup.XmlnsDefinition>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Markup.XmlnsDefinition[] Func_rg_UI_Xaml_Markup_XmlnsDefinition__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType* unsafe___value__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType*);
			global::Windows.UI.Xaml.Markup.XmlnsDefinition[] __value__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.Markup.XmlnsDefinition[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition __value__retval
							global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__UnsafeToSafe(
												ref unsafe___value__retval[mcgIdx], 
												out __value__retval[mcgIdx]
											);
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.ApplicationModel.Background.IBackgroundTaskRegistrationStatics.get_AllTasks, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_System_Guid__Windows_ApplicationModel_Background_IBackgroundTaskRegistration___Windows_Foundation_Collections__IMapView_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyDictionary<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration> Func__IReadOnlyDictionary_2_Guid__ApplicationModel_Background_IBackgroundTaskRegistration___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyDictionary_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V___Impl.Vtbl** unsafe_tasks__retval = default(global::System.Collections.Generic.IReadOnlyDictionary_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyDictionary<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration> tasks__retval = default(global::System.Collections.Generic.IReadOnlyDictionary<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_tasks__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_tasks__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				tasks__retval = (global::System.Collections.Generic.IReadOnlyDictionary<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_tasks__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>).TypeHandle
								);
				// Return
				return tasks__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_tasks__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Background_BackgroundTaskRegistration__Windows_ApplicationModel_Background__BackgroundTaskRegistration *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Background_BackgroundTaskCompletedEventArgs__Windows_ApplicationModel_Background__BackgroundTaskCompletedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Background_BackgroundTaskRegistration__ApplicationModel_Background_BackgroundTaskCompletedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Background.BackgroundTaskRegistration sender, 
					global::Windows.ApplicationModel.Background.BackgroundTaskCompletedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration__Impl.Vtbl** unsafe_sender = default(global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration__Impl.Vtbl**);
			global::Windows.ApplicationModel.Background.IBackgroundTaskCompletedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.ApplicationModel.Background.IBackgroundTaskCompletedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration).TypeHandle
								);
				unsafe_args = (global::Windows.ApplicationModel.Background.IBackgroundTaskCompletedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.ApplicationModel.Background.IBackgroundTaskCompletedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.ApplicationModel.Background.IBackgroundTaskRegistration.add_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_ApplicationModel_Background_BackgroundTaskCompletedEventHandler__Windows_ApplicationModel_Background__BackgroundTaskCompletedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_ApplicationModel_Background_BackgroundTaskCompletedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler__Impl.Vtbl** unsafe_handler = default(global::Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_cookie__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken cookie__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget70>(global::Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_cookie__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				cookie__retval = unsafe_cookie__retval;
				// Return
				return cookie__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyDictionary<System.Guid,Windows.ApplicationModel.Background.IBackgroundTaskRegistration>.Lookup, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Background_IBackgroundTaskRegistration__Windows_ApplicationModel_Background__IBackgroundTaskRegistration *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration Func_Guid__ApplicationModel_Background_IBackgroundTaskRegistration__(
					global::System.__ComObject __this, 
					global::System.Guid key, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration__Impl.Vtbl**);
			global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration __value__retval = default(global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									key, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyDictionary<System.Guid,Windows.ApplicationModel.Background.IBackgroundTaskRegistration>.HasKey, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Guid__bool__(
					global::System.__ComObject __this, 
					global::System.Guid key, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								key, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval != 0;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IReadOnlyDictionary<System.Guid,Windows.ApplicationModel.Background.IBackgroundTaskRegistration>.Split, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_System_Guid__Windows_ApplicationModel_Background_IBackgroundTaskRegistration___Windows_Foundation_Collections__IMapView_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V_ *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_System_Guid__Windows_ApplicationModel_Background_IBackgroundTaskRegistration___Windows_Foundation_Collections__IMapView_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out__IReadOnlyDictionary_2_Guid__ApplicationModel_Background_IBackgroundTaskRegistration___out__IReadOnlyDictionary_2_Guid__ApplicationModel_Background_IBackgroundTaskRegistration___(
					global::System.__ComObject __this, 
					out global::System.Collections.Generic.IReadOnlyDictionary<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration> first, 
					out global::System.Collections.Generic.IReadOnlyDictionary<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration> second, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyDictionary_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V___Impl.Vtbl** unsafe_first = default(global::System.Collections.Generic.IReadOnlyDictionary_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyDictionary_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V___Impl.Vtbl** unsafe_second = default(global::System.Collections.Generic.IReadOnlyDictionary_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_first = null;
				unsafe_second = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_first), 
									&(unsafe_second)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				second = (global::System.Collections.Generic.IReadOnlyDictionary<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_second), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>).TypeHandle
								);
				first = (global::System.Collections.Generic.IReadOnlyDictionary<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_first), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>).TypeHandle
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_first)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_second)));
			}
		}

		// Signature, System.Collections.Generic.KeyValuePair<System.Guid,Windows.ApplicationModel.Background.IBackgroundTaskRegistration>.get_Key, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Guid Func_Guid__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Guid unsafe___value__retval;
			global::System.Guid __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.KeyValuePair<System.Guid,Windows.ApplicationModel.Background.IBackgroundTaskRegistration>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Background_IBackgroundTaskRegistration__Windows_ApplicationModel_Background__IBackgroundTaskRegistration *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration Func_ApplicationModel_Background_IBackgroundTaskRegistration__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration__Impl.Vtbl**);
			global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration __value__retval = default(global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Guid,Windows.ApplicationModel.Background.IBackgroundTaskRegistration>>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_System_Collections_Generic_KeyValuePair_2_System_Guid__Windows_ApplicationModel_Background_IBackgroundTaskRegistration____Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Collections_IKeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>> Func__Collections_IIterator_1__KeyValuePair_2_Guid__ApplicationModel_Background_IBackgroundTaskRegistration__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V__V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<System.Guid,Windows.ApplicationModel.Background.IBackgroundTaskRegistration>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Guid__Windows_ApplicationModel_Background_IBackgroundTaskRegistration___Windows_Foundation_Collections__IKeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration> Func__KeyValuePair_2_Guid__ApplicationModel_Background_IBackgroundTaskRegistration___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration> __value__retval = default(global::System.Collections.Generic.KeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<System.Guid,Windows.ApplicationModel.Background.IBackgroundTaskRegistration>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_System_Guid__Windows_ApplicationModel_Background_IBackgroundTaskRegistration___Windows_Foundation_Collections__IKeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__KeyValuePair_2_Guid__ApplicationModel_Background_IBackgroundTaskRegistration___uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Guid__Windows_ApplicationModel_Background_IBackgroundTaskRegistration___Windows_Foundation_Collections__IKeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Guid__Windows_ApplicationModel_Background_IBackgroundTaskRegistration___Windows_Foundation_Collections__IKeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.Devices.Geolocation.Geolocator,Windows.Devices.Geolocation.PositionChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_Devices_Geolocation_Geolocator__Windows_Devices_Geolocation_PositionChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_PositionChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Geolocation.Geolocator, global::Windows.Devices.Geolocation.PositionChangedEventArgs> Func__TypedEventHandler_2_Devices_Geolocation_Geolocator__Devices_Geolocation_PositionChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_PositionChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_PositionChangedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Geolocation.Geolocator, global::Windows.Devices.Geolocation.PositionChangedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Geolocation.Geolocator, global::Windows.Devices.Geolocation.PositionChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Geolocation.Geolocator, global::Windows.Devices.Geolocation.PositionChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Geolocation.Geolocator, global::Windows.Devices.Geolocation.PositionChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget67>(global::Windows.Foundation.TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_PositionChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog,Windows.UI.Xaml.Controls.ContentDialogClosingEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ContentDialog__Windows_UI_Xaml_Controls__ContentDialog *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ContentDialogClosingEventArgs__Windows_UI_Xaml_Controls__ContentDialogClosingEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ContentDialog__UI_Xaml_Controls_ContentDialogClosingEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ContentDialog sender, 
					global::Windows.UI.Xaml.Controls.ContentDialogClosingEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IContentDialog__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.IContentDialog__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IContentDialogClosingEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IContentDialogClosingEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.IContentDialog__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.IContentDialog).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IContentDialogClosingEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IContentDialogClosingEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentDialog.add_Closing, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ContentDialog__Windows_UI_Xaml_Controls_ContentDialogClosingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_ContentDialog__UI_Xaml_Controls_ContentDialogClosingEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogClosingEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosingEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogClosingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget71>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog,Windows.UI.Xaml.Controls.ContentDialogClosedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ContentDialog__Windows_UI_Xaml_Controls__ContentDialog *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ContentDialogClosedEventArgs__Windows_UI_Xaml_Controls__ContentDialogClosedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ContentDialog__UI_Xaml_Controls_ContentDialogClosedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ContentDialog sender, 
					global::Windows.UI.Xaml.Controls.ContentDialogClosedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IContentDialog__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.IContentDialog__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IContentDialogClosedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IContentDialogClosedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.IContentDialog__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.IContentDialog).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IContentDialogClosedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IContentDialogClosedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentDialog.add_Closed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ContentDialog__Windows_UI_Xaml_Controls_ContentDialogClosedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_ContentDialog__UI_Xaml_Controls_ContentDialogClosedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogClosedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogClosedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget72>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog,Windows.UI.Xaml.Controls.ContentDialogOpenedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ContentDialog__Windows_UI_Xaml_Controls__ContentDialog *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ContentDialogOpenedEventArgs__Windows_UI_Xaml_Controls__ContentDialogOpenedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ContentDialog__UI_Xaml_Controls_ContentDialogOpenedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ContentDialog sender, 
					global::Windows.UI.Xaml.Controls.ContentDialogOpenedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IContentDialog__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.IContentDialog__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IContentDialogOpenedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IContentDialogOpenedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.IContentDialog__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.IContentDialog).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IContentDialogOpenedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IContentDialogOpenedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentDialog.add_Opened, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ContentDialog__Windows_UI_Xaml_Controls_ContentDialogOpenedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogOpenedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_ContentDialog__UI_Xaml_Controls_ContentDialogOpenedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogOpenedEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogOpenedEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogOpenedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogOpenedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogOpenedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget73>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogOpenedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog,Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ContentDialog__Windows_UI_Xaml_Controls__ContentDialog *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Controls_ContentDialogButtonClickEventArgs__Windows_UI_Xaml_Controls__ContentDialogButtonClickEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Controls_ContentDialog__UI_Xaml_Controls_ContentDialogButtonClickEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ContentDialog sender, 
					global::Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.IContentDialog__Impl.Vtbl** unsafe_sender = default(global::Windows.UI.Xaml.Controls.IContentDialog__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.IContentDialogButtonClickEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Xaml.Controls.IContentDialogButtonClickEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.UI.Xaml.Controls.IContentDialog__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.UI.Xaml.Controls.IContentDialog).TypeHandle
								);
				unsafe_args = (global::Windows.UI.Xaml.Controls.IContentDialogButtonClickEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Xaml.Controls.IContentDialogButtonClickEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentDialog.add_PrimaryButtonClick, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ContentDialog__Windows_UI_Xaml_Controls_ContentDialogButtonClickEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogButtonClickEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_ContentDialog__UI_Xaml_Controls_ContentDialogButtonClickEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogButtonClickEventArgs_V___Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogButtonClickEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogButtonClickEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget74>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogButtonClickEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IContentDialog.ShowAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_UI_Xaml_Controls_ContentDialogResult___Windows_Foundation__IAsyncOperation_A_Windows_UI_Xaml_Controls_ContentDialogResult_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Xaml.Controls.ContentDialogResult> Func__IAsyncOperation_1_UI_Xaml_Controls_ContentDialogResult___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_UI_Xaml_Controls_ContentDialogResult_V___Impl.Vtbl** unsafe_returnValue__retval = default(global::Windows.Foundation.IAsyncOperation_A_Windows_UI_Xaml_Controls_ContentDialogResult_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Xaml.Controls.ContentDialogResult> returnValue__retval = default(global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Xaml.Controls.ContentDialogResult>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_returnValue__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_returnValue__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				returnValue__retval = (global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Xaml.Controls.ContentDialogResult>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_returnValue__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Xaml.Controls.ContentDialogResult>).TypeHandle
								);
				// Return
				return returnValue__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_returnValue__retval)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Windows.UI.Xaml.Controls.ContentDialogResult>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_UI_Xaml_Controls_ContentDialogResult___Windows_Foundation__IAsyncOperation_A_Windows_UI_Xaml_Controls_ContentDialogResult_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_UI_Xaml_Controls_ContentDialogResult___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Xaml.Controls.ContentDialogResult> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_UI_Xaml_Controls_ContentDialogResult_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Windows_UI_Xaml_Controls_ContentDialogResult_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Windows_UI_Xaml_Controls_ContentDialogResult_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Xaml.Controls.ContentDialogResult>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.UI.Xaml.Controls.ContentDialogResult>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_UI_Xaml_Controls_ContentDialogResult___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_UI_Xaml_Controls_ContentDialogResult_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationCompletedHandler_1_UI_Xaml_Controls_ContentDialogResult___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Xaml.Controls.ContentDialogResult> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Xaml_Controls_ContentDialogResult_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Xaml_Controls_ContentDialogResult_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Xaml_Controls_ContentDialogResult_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Xaml.Controls.ContentDialogResult>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget75>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Xaml_Controls_ContentDialogResult_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.UI.Xaml.Controls.ContentDialogResult>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_ContentDialogResult__Windows_UI_Xaml_Controls__ContentDialogResult, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ContentDialogResult Func_UI_Xaml_Controls_ContentDialogResult__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ContentDialogResult unsafe___value__retval;
			global::Windows.UI.Xaml.Controls.ContentDialogResult __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Networking.Sockets.IMessageWebSocket.get_Control, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_Sockets_MessageWebSocketControl__Windows_Networking_Sockets__MessageWebSocketControl *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.Sockets.MessageWebSocketControl Func_Networking_Sockets_MessageWebSocketControl__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.Sockets.IMessageWebSocketControl__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Networking.Sockets.IMessageWebSocketControl__Impl.Vtbl**);
			global::Windows.Networking.Sockets.MessageWebSocketControl value__retval = default(global::Windows.Networking.Sockets.MessageWebSocketControl);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Networking.Sockets.MessageWebSocketControl)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Networking.Sockets.IMessageWebSocketControl).TypeHandle, 
									typeof(global::Windows.Networking.Sockets.MessageWebSocketControl).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.Networking.Sockets.MessageWebSocket,Windows.Networking.Sockets.MessageWebSocketMessageReceivedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_Sockets_MessageWebSocket__Windows_Networking_Sockets__MessageWebSocket *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_Sockets_MessageWebSocketMessageReceivedEventArgs__Windows_Networking_Sockets__MessageWebSocketMessageReceivedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Networking_Sockets_MessageWebSocket__Networking_Sockets_MessageWebSocketMessageReceivedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.Networking.Sockets.MessageWebSocket sender, 
					global::Windows.Networking.Sockets.MessageWebSocketMessageReceivedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.Sockets.IMessageWebSocket__Impl.Vtbl** unsafe_sender = default(global::Windows.Networking.Sockets.IMessageWebSocket__Impl.Vtbl**);
			global::Windows.Networking.Sockets.IMessageWebSocketMessageReceivedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.Networking.Sockets.IMessageWebSocketMessageReceivedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.Networking.Sockets.IMessageWebSocket__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.Networking.Sockets.IMessageWebSocket).TypeHandle
								);
				unsafe_args = (global::Windows.Networking.Sockets.IMessageWebSocketMessageReceivedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.Networking.Sockets.IMessageWebSocketMessageReceivedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.Networking.Sockets.IMessageWebSocket.add_MessageReceived, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_Networking_Sockets_MessageWebSocket__Windows_Networking_Sockets_MessageWebSocketMessageReceivedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_Networking_Sockets_MessageWebSocket_j_Windows_Networking_Sockets_MessageWebSocketMessageReceivedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Networking_Sockets_MessageWebSocket__Networking_Sockets_MessageWebSocketMessageReceivedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.Networking.Sockets.MessageWebSocket, global::Windows.Networking.Sockets.MessageWebSocketMessageReceivedEventArgs> eventHandler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_Networking_Sockets_MessageWebSocket_j_Windows_Networking_Sockets_MessageWebSocketMessageReceivedEventArgs_V___Impl.Vtbl** unsafe_eventHandler = default(global::Windows.Foundation.TypedEventHandler_A_Windows_Networking_Sockets_MessageWebSocket_j_Windows_Networking_Sockets_MessageWebSocketMessageReceivedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_eventCookie__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken eventCookie__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_eventHandler = (global::Windows.Foundation.TypedEventHandler_A_Windows_Networking_Sockets_MessageWebSocket_j_Windows_Networking_Sockets_MessageWebSocketMessageReceivedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									eventHandler, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.Networking.Sockets.MessageWebSocket, global::Windows.Networking.Sockets.MessageWebSocketMessageReceivedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget76>(global::Windows.Foundation.TypedEventHandler_A_Windows_Networking_Sockets_MessageWebSocket_j_Windows_Networking_Sockets_MessageWebSocketMessageReceivedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_eventHandler, 
									&(unsafe_eventCookie__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				eventCookie__retval = unsafe_eventCookie__retval;
				// Return
				return eventCookie__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_eventHandler)));
			}
		}

		// Signature, Windows.Networking.Sockets.IWebSocket.get_OutputStream, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IOutputStream__Windows_Storage_Streams__IOutputStream *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.IOutputStream Func_Storage_Streams_IOutputStream__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IOutputStream__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Storage.Streams.IOutputStream__Impl.Vtbl**);
			global::Windows.Storage.Streams.IOutputStream value__retval = default(global::Windows.Storage.Streams.IOutputStream);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Storage.Streams.IOutputStream)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Storage.Streams.IOutputStream).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Networking.Sockets.IWebSocket.ConnectAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func_Uri___IAsyncAction__(
					global::System.__ComObject __this, 
					global::System.Uri uri, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_uri = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_operation__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction operation__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (uri != null)
					unsafe_uri = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(uri);
				else
					unsafe_uri = null;
				unsafe_operation__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_uri, 
									&(unsafe_operation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				operation__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_operation__retval), 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Return
				return operation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_uri)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_operation__retval)));
			}
		}

		// Signature, Windows.Networking.Sockets.IWebSocket.SetRequestHeader, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__string__(
					global::System.__ComObject __this, 
					string headerName, 
					string headerValue, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_headerName = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.HSTRING unsafe_headerValue = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_headerName = headerName)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_headerName;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_headerName, headerName, &(hstring_header_headerName), &(unsafe_headerName));
				fixed (char* pBuffer_headerValue = headerValue)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_headerValue;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_headerValue, headerValue, &(hstring_header_headerValue), &(unsafe_headerValue));
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_headerName, 
										unsafe_headerValue
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
			}
			// Return
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.Networking.Sockets.IWebSocket,Windows.Networking.Sockets.WebSocketClosedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_Sockets_IWebSocket__Windows_Networking_Sockets__IWebSocket *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_Sockets_WebSocketClosedEventArgs__Windows_Networking_Sockets__WebSocketClosedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Networking_Sockets_IWebSocket__Networking_Sockets_WebSocketClosedEventArgs__(
					global::System.__ComObject __this, 
					global::Windows.Networking.Sockets.IWebSocket sender, 
					global::Windows.Networking.Sockets.WebSocketClosedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.Sockets.IWebSocket__Impl.Vtbl** unsafe_sender = default(global::Windows.Networking.Sockets.IWebSocket__Impl.Vtbl**);
			global::Windows.Networking.Sockets.IWebSocketClosedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.Networking.Sockets.IWebSocketClosedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.Networking.Sockets.IWebSocket__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.Networking.Sockets.IWebSocket).TypeHandle
								);
				unsafe_args = (global::Windows.Networking.Sockets.IWebSocketClosedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.Networking.Sockets.IWebSocketClosedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.Networking.Sockets.IWebSocket.add_Closed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_Networking_Sockets_IWebSocket__Windows_Networking_Sockets_WebSocketClosedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_Networking_Sockets_IWebSocket_j_Windows_Networking_Sockets_WebSocketClosedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_Networking_Sockets_IWebSocket__Networking_Sockets_WebSocketClosedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.Networking.Sockets.IWebSocket, global::Windows.Networking.Sockets.WebSocketClosedEventArgs> eventHandler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_Networking_Sockets_IWebSocket_j_Windows_Networking_Sockets_WebSocketClosedEventArgs_V___Impl.Vtbl** unsafe_eventHandler = default(global::Windows.Foundation.TypedEventHandler_A_Windows_Networking_Sockets_IWebSocket_j_Windows_Networking_Sockets_WebSocketClosedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_eventCookie__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken eventCookie__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_eventHandler = (global::Windows.Foundation.TypedEventHandler_A_Windows_Networking_Sockets_IWebSocket_j_Windows_Networking_Sockets_WebSocketClosedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									eventHandler, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.Networking.Sockets.IWebSocket, global::Windows.Networking.Sockets.WebSocketClosedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget77>(global::Windows.Foundation.TypedEventHandler_A_Windows_Networking_Sockets_IWebSocket_j_Windows_Networking_Sockets_WebSocketClosedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_eventHandler, 
									&(unsafe_eventCookie__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				eventCookie__retval = unsafe_eventCookie__retval;
				// Return
				return eventCookie__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_eventHandler)));
			}
		}

		// Signature, Windows.Networking.Sockets.IWebSocket.Close, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ushort__unsigned short, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ushort__string__(
					global::System.__ComObject __this, 
					ushort code, 
					string reason, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_reason = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_reason = reason)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_reason;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_reason, reason, &(hstring_header_reason), &(unsafe_reason));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									code, 
									unsafe_reason
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Windows.Networking.Sockets.IMessageWebSocketMessageReceivedEventArgs.get_MessageType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Networking_Sockets_SocketMessageType__Windows_Networking_Sockets__SocketMessageType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.Sockets.SocketMessageType Func_Networking_Sockets_SocketMessageType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.Sockets.SocketMessageType unsafe_value__retval;
			global::Windows.Networking.Sockets.SocketMessageType value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Networking.Sockets.IMessageWebSocketMessageReceivedEventArgs.GetDataReader, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Storage_Streams_DataReader__Windows_Storage_Streams__DataReader *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.DataReader Func_Storage_Streams_DataReader__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IDataReader__Impl.Vtbl** unsafe_dataReader__retval = default(global::Windows.Storage.Streams.IDataReader__Impl.Vtbl**);
			global::Windows.Storage.Streams.DataReader dataReader__retval = default(global::Windows.Storage.Streams.DataReader);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_dataReader__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_dataReader__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				dataReader__retval = (global::Windows.Storage.Streams.DataReader)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_dataReader__retval), 
									typeof(global::Windows.Storage.Streams.IDataReader).TypeHandle, 
									typeof(global::Windows.Storage.Streams.DataReader).TypeHandle
								);
				// Return
				return dataReader__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_dataReader__retval)));
			}
		}

		// Signature, Windows.Storage.Streams.IDataReaderStatics.FromBuffer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Storage_Streams_DataReader__Windows_Storage_Streams__DataReader *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.DataReader Func_Storage_Streams_IBuffer__Storage_Streams_DataReader__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer buffer, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IDataReader__Impl.Vtbl** unsafe_dataReader__retval = default(global::Windows.Storage.Streams.IDataReader__Impl.Vtbl**);
			global::Windows.Storage.Streams.DataReader dataReader__retval = default(global::Windows.Storage.Streams.DataReader);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_buffer = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									buffer, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_dataReader__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_buffer, 
									&(unsafe_dataReader__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				dataReader__retval = (global::Windows.Storage.Streams.DataReader)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_dataReader__retval), 
									typeof(global::Windows.Storage.Streams.IDataReader).TypeHandle, 
									typeof(global::Windows.Storage.Streams.DataReader).TypeHandle
								);
				// Return
				return dataReader__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer)));
				global::System.GC.KeepAlive(buffer);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_dataReader__retval)));
			}
		}

		// Signature, Windows.Storage.Streams.IDataReader.ReadBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out_rg_byte__(
					global::System.__ComObject __this, 
					byte[] value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_value_mcgLength = 0;
			byte* unsafe_value;
			int unsafe___return__;
			// Marshalling
			if (value != null)
				unsafe_value_mcgLength = (uint)value.Length;
			fixed (byte* pinned_value = global::McgInterop.McgCoreHelpers.GetArrayForCompat(value))
			{
				unsafe_value = (byte*)pinned_value;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value_mcgLength, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Windows.Storage.Streams.IDataReader.ReadString, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_uint__string__(
					global::System.__ComObject __this, 
					uint codeUnitCount, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									codeUnitCount, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value__retval);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_value__retval.handle);
			}
		}

		// Signature, Windows.UI.Popups.IMessageDialogFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_string__IntPtr__(
					global::System.__ComObject __this, 
					string content, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_content = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.IntPtr unsafe_messageDialog__retval;
			global::System.IntPtr messageDialog__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_content = content)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_content;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_content, content, &(hstring_header_content), &(unsafe_content));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_content, 
									&(unsafe_messageDialog__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				messageDialog__retval = unsafe_messageDialog__retval;
			}
			// Return
			return messageDialog__retval;
		}

		// Signature, Windows.UI.Popups.IMessageDialogFactory.CreateWithTitle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_string__string__IntPtr__(
					global::System.__ComObject __this, 
					string content, 
					string title, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_content = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.HSTRING unsafe_title = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.IntPtr unsafe_messageDialog__retval;
			global::System.IntPtr messageDialog__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_content = content)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_content;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_content, content, &(hstring_header_content), &(unsafe_content));
				fixed (char* pBuffer_title = title)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_title;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_title, title, &(hstring_header_title), &(unsafe_title));
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_content, 
										unsafe_title, 
										&(unsafe_messageDialog__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					messageDialog__retval = unsafe_messageDialog__retval;
				}
			}
			// Return
			return messageDialog__retval;
		}

		// Signature, Windows.UI.Popups.IMessageDialog.get_Commands, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_Windows_UI_Popups_IUICommand___Windows_Foundation_Collections__IVector_A_Windows_UI_Popups_IUICommand_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<global::Windows.UI.Popups.IUICommand> Func__IList_1_UI_Popups_IUICommand___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<global::Windows.UI.Popups.IUICommand> value__retval = default(global::System.Collections.Generic.IList<global::Windows.UI.Popups.IUICommand>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IList<global::Windows.UI.Popups.IUICommand>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<global::Windows.UI.Popups.IUICommand>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Popups.IMessageDialog.ShowAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_UI_Popups_IUICommand___Windows_Foundation__IAsyncOperation_A_Windows_UI_Popups_IUICommand_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Popups.IUICommand> Func__IAsyncOperation_1_UI_Popups_IUICommand___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl** unsafe_messageDialogAsyncOperation__retval = default(global::Windows.Foundation.IAsyncOperation_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Popups.IUICommand> messageDialogAsyncOperation__retval = default(global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Popups.IUICommand>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_messageDialogAsyncOperation__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_messageDialogAsyncOperation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				messageDialogAsyncOperation__retval = (global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Popups.IUICommand>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_messageDialogAsyncOperation__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Popups.IUICommand>).TypeHandle
								);
				// Return
				return messageDialogAsyncOperation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_messageDialogAsyncOperation__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Popups.IUICommand>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Popups_IUICommand__Windows_UI_Popups__IUICommand *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Popups.IUICommand Func_uint__UI_Popups_IUICommand__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Popups.IUICommand__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Popups.IUICommand__Impl.Vtbl**);
			global::Windows.UI.Popups.IUICommand __value__retval = default(global::Windows.UI.Popups.IUICommand);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Popups.IUICommand)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Popups.IUICommand).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Popups.IUICommand>.GetView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_UI_Popups_IUICommand___Windows_Foundation_Collections__IVectorView_A_Windows_UI_Popups_IUICommand_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Popups.IUICommand> Func__IReadOnlyList_1_UI_Popups_IUICommand___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Popups.IUICommand> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Popups.IUICommand>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Popups.IUICommand>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Popups.IUICommand>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Popups.IUICommand>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Popups_IUICommand__Windows_UI_Popups__IUICommand *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Popups_IUICommand__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Popups.IUICommand value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Popups.IUICommand__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Popups.IUICommand__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Popups.IUICommand__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Popups.IUICommand).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Popups.IUICommand>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Popups_IUICommand__Windows_UI_Popups__IUICommand *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Popups_IUICommand__(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Popups.IUICommand value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Popups.IUICommand__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Popups.IUICommand__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Popups.IUICommand__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Popups.IUICommand).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Popups.IUICommand>.Append, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Popups_IUICommand__Windows_UI_Popups__IUICommand *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Popups_IUICommand__(
					global::System.__ComObject __this, 
					global::Windows.UI.Popups.IUICommand value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Popups.IUICommand__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Popups.IUICommand__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Popups.IUICommand__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Popups.IUICommand).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Popups.IUICommand>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Popups_IUICommand__Windows_UI_Popups__IUICommand * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Popups_IUICommand__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Popups.IUICommand[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Popups.IUICommand__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Popups.IUICommand__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Popups.IUICommand__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Popups.IUICommand__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Popups_IUICommand__Windows_UI_Popups__IUICommand * items
						items[mcgIdx] = (global::Windows.UI.Popups.IUICommand)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Popups.IUICommand).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Popups_IUICommand__Windows_UI_Popups__IUICommand * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Popups.IUICommand>.ReplaceAll, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Popups_IUICommand__Windows_UI_Popups__IUICommand * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_UI_Popups_IUICommand__(
					global::System.__ComObject __this, 
					global::Windows.UI.Popups.IUICommand[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Popups.IUICommand__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Popups.IUICommand__Impl.Vtbl***);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_items = (global::Windows.UI.Popups.IUICommand__Impl.Vtbl***)global::System.Runtime.InteropServices.McgModuleManager.ObjectArrayToComInterfaceArrayAlloc(
									items, 
									typeof(global::Windows.UI.Popups.IUICommand).TypeHandle, 
									out unsafe_items_mcgLength
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Popups_IUICommand__Windows_UI_Popups__IUICommand * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Popups.IUICommand>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Popups_IUICommand___Windows_Foundation_Collections__IIterator_A_Windows_UI_Popups_IUICommand_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Popups.IUICommand> Func__Collections_IIterator_1_UI_Popups_IUICommand___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Popups.IUICommand> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Popups.IUICommand>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Popups.IUICommand>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Popups.IUICommand>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Popups.IUICommand>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Popups_IUICommand__Windows_UI_Popups__IUICommand *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Popups.IUICommand Func_UI_Popups_IUICommand__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Popups.IUICommand__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Popups.IUICommand__Impl.Vtbl**);
			global::Windows.UI.Popups.IUICommand __value__retval = default(global::Windows.UI.Popups.IUICommand);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Popups.IUICommand)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Popups.IUICommand).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Popups.IUICommand>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Popups_IUICommand__Windows_UI_Popups__IUICommand * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Popups_IUICommand__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Popups.IUICommand[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Popups.IUICommand__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Popups.IUICommand__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Popups.IUICommand__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Popups.IUICommand__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Popups_IUICommand__Windows_UI_Popups__IUICommand * items
						items[mcgIdx] = (global::Windows.UI.Popups.IUICommand)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Popups.IUICommand).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Popups_IUICommand__Windows_UI_Popups__IUICommand * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Windows.UI.Popups.IUICommand>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_UI_Popups_IUICommand___Windows_Foundation__IAsyncOperation_A_Windows_UI_Popups_IUICommand_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_UI_Popups_IUICommand___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Popups.IUICommand> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Popups.IUICommand>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.UI.Popups.IUICommand>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_UI_Popups_IUICommand___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationCompletedHandler_1_UI_Popups_IUICommand___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Popups.IUICommand> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Popups.IUICommand>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget78>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Devices.Enumeration.Pnp.IPnpObjectStatics.FindAllAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Devices_Enumeration_Pnp_PnpObjectType__Windows_Devices_Enumeration_Pnp__PnpObjectType, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_string___Windows_Foundation_Collections__IIterable_A_string_V_ *, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_Devices_Enumeration_Pnp_PnpObjectCollection___Windows_Foundation__IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> Func_int_IEnumerable_1_string___string___IAsyncOperation_1_Devices_Enumeration_Pnp_PnpObjectCollection___(
					global::System.__ComObject __this, 
					int type, 
					global::System.Collections.Generic.IEnumerable<string> requestedProperties, 
					string aqsFilter, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_string_V___Impl.Vtbl** unsafe_requestedProperties = default(global::System.Collections.Generic.IEnumerable_A_string_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING unsafe_aqsFilter = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl** unsafe_asyncOp__retval = default(global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> asyncOp__retval = default(global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_requestedProperties = (global::System.Collections.Generic.IEnumerable_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									requestedProperties, 
									typeof(global::System.Collections.Generic.IEnumerable<string>).TypeHandle
								);
				fixed (char* pBuffer_aqsFilter = aqsFilter)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_aqsFilter;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_aqsFilter, aqsFilter, &(hstring_header_aqsFilter), &(unsafe_aqsFilter));
					unsafe_asyncOp__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										type, 
										unsafe_requestedProperties, 
										unsafe_aqsFilter, 
										&(unsafe_asyncOp__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					asyncOp__retval = (global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_asyncOp__retval), 
										typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>).TypeHandle
									);
				}
				// Return
				return asyncOp__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_requestedProperties)));
				global::System.GC.KeepAlive(requestedProperties);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncOp__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Devices.Enumeration.Pnp.PnpObject>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Enumeration.Pnp.PnpObject Func_uint__Devices_Enumeration_Pnp_PnpObject__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**);
			global::Windows.Devices.Enumeration.Pnp.PnpObject __value__retval = default(global::Windows.Devices.Enumeration.Pnp.PnpObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Devices.Enumeration.Pnp.PnpObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject).TypeHandle, 
									typeof(global::Windows.Devices.Enumeration.Pnp.PnpObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Devices.Enumeration.Pnp.PnpObject>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Devices_Enumeration_Pnp_PnpObject__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Devices.Enumeration.Pnp.PnpObject value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl** unsafe_value = default(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Devices.Enumeration.Pnp.PnpObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Devices_Enumeration_Pnp_PnpObject__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Devices.Enumeration.Pnp.PnpObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl*** unsafe_items = default(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * items
						items[mcgIdx] = (global::Windows.Devices.Enumeration.Pnp.PnpObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject).TypeHandle, 
											typeof(global::Windows.Devices.Enumeration.Pnp.PnpObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Devices.Enumeration.Pnp.PnpObject>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Devices_Enumeration_Pnp_PnpObject___Windows_Foundation_Collections__IIterator_A_Windows_Devices_Enumeration_Pnp_PnpObject_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Devices.Enumeration.Pnp.PnpObject> Func__Collections_IIterator_1_Devices_Enumeration_Pnp_PnpObject___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Devices_Enumeration_Pnp_PnpObject_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Devices_Enumeration_Pnp_PnpObject_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Devices.Enumeration.Pnp.PnpObject> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Devices.Enumeration.Pnp.PnpObject>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Devices.Enumeration.Pnp.PnpObject>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Devices.Enumeration.Pnp.PnpObject>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Devices.Enumeration.Pnp.PnpObject>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Enumeration.Pnp.PnpObject Func_Devices_Enumeration_Pnp_PnpObject__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**);
			global::Windows.Devices.Enumeration.Pnp.PnpObject __value__retval = default(global::Windows.Devices.Enumeration.Pnp.PnpObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Devices.Enumeration.Pnp.PnpObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject).TypeHandle, 
									typeof(global::Windows.Devices.Enumeration.Pnp.PnpObject).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Devices.Enumeration.Pnp.PnpObject>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Devices_Enumeration_Pnp_PnpObject__uint__(
					global::System.__ComObject __this, 
					global::Windows.Devices.Enumeration.Pnp.PnpObject[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl*** unsafe_items = default(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * items
						items[mcgIdx] = (global::Windows.Devices.Enumeration.Pnp.PnpObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject).TypeHandle, 
											typeof(global::Windows.Devices.Enumeration.Pnp.PnpObject).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObject__Windows_Devices_Enumeration_Pnp__PnpObject * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Windows.Devices.Enumeration.Pnp.PnpObjectCollection>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_Devices_Enumeration_Pnp_PnpObjectCollection___Windows_Foundation__IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_Devices_Enumeration_Pnp_PnpObjectCollection___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.Devices.Enumeration.Pnp.PnpObjectCollection>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Devices_Enumeration_Pnp_PnpObjectCollection___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationCompletedHandler_1_Devices_Enumeration_Pnp_PnpObjectCollection___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget79>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.Devices.Enumeration.Pnp.PnpObjectCollection>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Enumeration_Pnp_PnpObjectCollection__Windows_Devices_Enumeration_Pnp__PnpObjectCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection Func_Devices_Enumeration_Pnp_PnpObjectCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_Devices_Enumeration_Pnp_PnpObject_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_Devices_Enumeration_Pnp_PnpObject_V___Impl.Vtbl**);
			global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection __value__retval = default(global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Enumeration.Pnp.PnpObject>).TypeHandle, 
									typeof(global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Devices.Enumeration.Pnp.IPnpObject.get_Properties, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_string__object___Windows_Foundation_Collections__IMapView_A_string_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyDictionary<string, object> Func__IReadOnlyDictionary_2_string__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_System_Object_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyDictionary<string, object> value__retval = default(global::System.Collections.Generic.IReadOnlyDictionary<string, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IReadOnlyDictionary<string, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<string, object>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs___Windows_Foundation__EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs> Func_EventHandler_1_ApplicationModel_Core_UnhandledErrorDetectedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs> __value__retval = default(global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget65>(global::System.EventHandler_A_Windows_ApplicationModel_Core_UnhandledErrorDetectedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Windows.ApplicationModel.SuspendingEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_ApplicationModel_SuspendingEventArgs___Windows_Foundation__EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs> Func_EventHandler_1_ApplicationModel_SuspendingEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs> __value__retval = default(global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget2>(global::System.EventHandler_A_Windows_ApplicationModel_SuspendingEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<System.Object,System.Object>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<object, object>[] Func_rg__KeyValuePair_2_object__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_System_Object_j_System_Object_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<object, object>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<object, object>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<object, object>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<object, object> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<object, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<object, object>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<object, object>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__object___Windows_Foundation_Collections__IKeyValuePair_A_object_j_object_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.Foundation.FoundationContract>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_Foundation_FoundationContract__Windows_Foundation__FoundationContract, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.FoundationContract Func__FoundationContract__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.FoundationContract unsafe___value__retval;
			global::Windows.Foundation.FoundationContract __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.UniversalApiContract>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_Foundation_UniversalApiContract__Windows_Foundation__UniversalApiContract, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.UniversalApiContract Func__UniversalApiContract__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.UniversalApiContract unsafe___value__retval;
			global::Windows.Foundation.UniversalApiContract __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.DependencyPropertyChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_DependencyPropertyChangedEventHandler__Windows_UI_Xaml__DependencyPropertyChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler Func_UI_Xaml_DependencyPropertyChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget23>(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.SizeChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_SizeChangedEventHandler__Windows_UI_Xaml__SizeChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.SizeChangedEventHandler Func_UI_Xaml_SizeChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.SizeChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.SizeChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.SizeChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.SizeChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget20>(global::Windows.UI.Xaml.SizeChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.DataContextChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_FrameworkElement__Windows_UI_Xaml_DataContextChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> Func__TypedEventHandler_2_UI_Xaml_FrameworkElement__UI_Xaml_DataContextChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget21>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_Windows_UI_Xaml_DataContextChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.FrameworkElement,System.Object>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_FrameworkElement__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> Func__TypedEventHandler_2_UI_Xaml_FrameworkElement__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget22>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.DoubleTappedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_DoubleTappedEventHandler__Windows_UI_Xaml_Input__DoubleTappedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.DoubleTappedEventHandler Func_UI_Xaml_Input_DoubleTappedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.DoubleTappedEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.DoubleTappedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget10>(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.DragEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_DragEventHandler__Windows_UI_Xaml__DragEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DragEventHandler Func_UI_Xaml_DragEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.DragEventHandler __value__retval = default(global::Windows.UI.Xaml.DragEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.DragEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.DragEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget7>(global::Windows.UI.Xaml.DragEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.HoldingEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_HoldingEventHandler__Windows_UI_Xaml_Input__HoldingEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.HoldingEventHandler Func_UI_Xaml_Input_HoldingEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.HoldingEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.HoldingEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.HoldingEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.HoldingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget11>(global::Windows.UI.Xaml.Input.HoldingEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.ManipulationCompletedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationCompletedEventHandler__Windows_UI_Xaml_Input__ManipulationCompletedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler Func_UI_Xaml_Input_ManipulationCompletedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget17>(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.ManipulationDeltaEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationDeltaEventHandler__Windows_UI_Xaml_Input__ManipulationDeltaEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler Func_UI_Xaml_Input_ManipulationDeltaEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget16>(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationInertiaStartingEventHandler__Windows_UI_Xaml_Input__ManipulationInertiaStartingEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler Func_UI_Xaml_Input_ManipulationInertiaStartingEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget14>(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.ManipulationStartedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationStartedEventHandler__Windows_UI_Xaml_Input__ManipulationStartedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler Func_UI_Xaml_Input_ManipulationStartedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget15>(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.ManipulationStartingEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_ManipulationStartingEventHandler__Windows_UI_Xaml_Input__ManipulationStartingEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler Func_UI_Xaml_Input_ManipulationStartingEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget13>(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.PointerEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_PointerEventHandler__Windows_UI_Xaml_Input__PointerEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.PointerEventHandler Func_UI_Xaml_Input_PointerEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.PointerEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.PointerEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.PointerEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.PointerEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget8>(global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Input.RightTappedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_RightTappedEventHandler__Windows_UI_Xaml_Input__RightTappedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.RightTappedEventHandler Func_UI_Xaml_Input_RightTappedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.RightTappedEventHandler __value__retval = default(global::Windows.UI.Xaml.Input.RightTappedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.RightTappedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.RightTappedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget12>(global::Windows.UI.Xaml.Input.RightTappedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DragStartingEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_UIElement__Windows_UI_Xaml_DragStartingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> Func__TypedEventHandler_2_UI_Xaml_UIElement__UI_Xaml_DragStartingEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget18>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DragStartingEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DropCompletedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_UIElement__Windows_UI_Xaml_DropCompletedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> Func__TypedEventHandler_2_UI_Xaml_UIElement__UI_Xaml_DropCompletedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget19>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_UIElement_j_Windows_UI_Xaml_DropCompletedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.SuspendingEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_SuspendingEventHandler__Windows_UI_Xaml__SuspendingEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.SuspendingEventHandler Func_UI_Xaml_SuspendingEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.SuspendingEventHandler __value__retval = default(global::Windows.UI.Xaml.SuspendingEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.SuspendingEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.SuspendingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget2>(global::Windows.UI.Xaml.SuspendingEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.UnhandledExceptionEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_UnhandledExceptionEventHandler__Windows_UI_Xaml__UnhandledExceptionEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.UnhandledExceptionEventHandler Func_UI_Xaml_UnhandledExceptionEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.UnhandledExceptionEventHandler __value__retval = default(global::Windows.UI.Xaml.UnhandledExceptionEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.UnhandledExceptionEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.UnhandledExceptionEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget1>(global::Windows.UI.Xaml.UnhandledExceptionEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_ContextMenuOpeningEventHandler__Windows_UI_Xaml_Controls__ContextMenuOpeningEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler Func_UI_Xaml_Controls_ContextMenuOpeningEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler __value__retval = default(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget24>(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.VisualStateChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_VisualStateChangedEventHandler__Windows_UI_Xaml__VisualStateChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.VisualStateChangedEventHandler Func_UI_Xaml_VisualStateChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.VisualStateChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.VisualStateChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.VisualStateChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.VisualStateChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.VisualStateChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.VisualStateChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget25>(global::Windows.UI.Xaml.VisualStateChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.TextControlPasteEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_TextControlPasteEventHandler__Windows_UI_Xaml_Controls__TextControlPasteEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler Func_UI_Xaml_Controls_TextControlPasteEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler __value__retval = default(global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget27>(global::Windows.UI.Xaml.Controls.TextControlPasteEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.CandidateWindowBoundsChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget31>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_CandidateWindowBoundsChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextBoxTextChangingEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextBoxTextChangingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget32>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextBoxTextChangingEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget29>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionEndedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionEndedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget30>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionEndedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.TextBox,Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_TextBox__Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_TextBox__UI_Xaml_Controls_TextCompositionStartedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBox, global::Windows.UI.Xaml.Controls.TextCompositionStartedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget28>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_TextBox_j_Windows_UI_Xaml_Controls_TextCompositionStartedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs___Windows_Foundation__EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs> Func_EventHandler_1_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs> __value__retval = default(global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget33>(global::System.EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs___Windows_Foundation__EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs> Func_EventHandler_1_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs> __value__retval = default(global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Windows.UI.Xaml.Controls.ScrollViewerViewChangingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget34>(global::System.EventHandler_A_Windows_UI_Xaml_Controls_ScrollViewerViewChangingEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.DragItemsStartingEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_DragItemsStartingEventHandler__Windows_UI_Xaml_Controls__DragItemsStartingEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler Func_UI_Xaml_Controls_DragItemsStartingEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler __value__retval = default(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget37>(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.ItemClickEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_ItemClickEventHandler__Windows_UI_Xaml_Controls__ItemClickEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ItemClickEventHandler Func_UI_Xaml_Controls_ItemClickEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ItemClickEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.ItemClickEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.ItemClickEventHandler __value__retval = default(global::Windows.UI.Xaml.Controls.ItemClickEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.ItemClickEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.ItemClickEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget36>(global::Windows.UI.Xaml.Controls.ItemClickEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ContainerContentChangingEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget38>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ContainerContentChangingEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget41>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingGroupHeaderContainerEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_ChoosingItemContainerEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget40>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_ChoosingItemContainerEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ListViewBase__Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_ListViewBase__UI_Xaml_Controls_DragItemsCompletedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget39>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ListViewBase_j_Windows_UI_Xaml_Controls_DragItemsCompletedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.ExceptionRoutedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_ExceptionRoutedEventHandler__Windows_UI_Xaml__ExceptionRoutedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ExceptionRoutedEventHandler Func_UI_Xaml_ExceptionRoutedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.ExceptionRoutedEventHandler __value__retval = default(global::Windows.UI.Xaml.ExceptionRoutedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.ExceptionRoutedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.ExceptionRoutedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget42>(global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,System.Object>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, object> Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_System_Object_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, object> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget43>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_System_Object_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapActualCameraChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget48>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapActualCameraChangingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget49>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapActualCameraChangingEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapCustomExperienceChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget51>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapCustomExperienceChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapElementClickEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementClickEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget45>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementClickEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementPointerEnteredEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget46>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerEnteredEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapElementPointerExitedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget47>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapElementPointerExitedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget50>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapControl,Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapControl__Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapControl__UI_Xaml_Controls_Maps_MapRightTappedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapControl, global::Windows.UI.Xaml.Controls.Maps.MapRightTappedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget53>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapControl_j_Windows_UI_Xaml_Controls_Maps_MapRightTappedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.AutoSuggestBox,Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_AutoSuggestBox__Windows_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_AutoSuggestBox__UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget55>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxTextChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.AutoSuggestBox,Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_AutoSuggestBox__Windows_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_AutoSuggestBox__UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.AutoSuggestBox, global::Windows.UI.Xaml.Controls.AutoSuggestBoxQuerySubmittedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget56>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_AutoSuggestBox_j_Windows_UI_Xaml_Controls_AutoSuggestBoxQuerySubmittedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.SplitView,System.Object>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_SplitView__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, object> Func__TypedEventHandler_2_UI_Xaml_Controls_SplitView__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, object> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget58>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Navigation.NavigationFailedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Navigation_NavigationFailedEventHandler__Windows_UI_Xaml_Navigation__NavigationFailedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler Func_UI_Xaml_Navigation_NavigationFailedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler __value__retval = default(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget61>(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_Primitives_RangeBaseValueChangedEventHandler__Windows_UI_Xaml_Controls_Primitives__RangeBaseValueChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler Func_UI_Xaml_Controls_Primitives_RangeBaseValueChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget62>(global::Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog,Windows.UI.Xaml.Controls.ContentDialogClosedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ContentDialog__Windows_UI_Xaml_Controls_ContentDialogClosedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogClosedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_ContentDialog__UI_Xaml_Controls_ContentDialogClosedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogClosedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogClosedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogClosedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogClosedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget72>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog,Windows.UI.Xaml.Controls.ContentDialogClosingEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ContentDialog__Windows_UI_Xaml_Controls_ContentDialogClosingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosingEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogClosingEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_ContentDialog__UI_Xaml_Controls_ContentDialogClosingEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosingEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosingEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogClosingEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogClosingEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogClosingEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogClosingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget71>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogClosingEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog,Windows.UI.Xaml.Controls.ContentDialogOpenedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ContentDialog__Windows_UI_Xaml_Controls_ContentDialogOpenedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogOpenedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogOpenedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_ContentDialog__UI_Xaml_Controls_ContentDialogOpenedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogOpenedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogOpenedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogOpenedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogOpenedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogOpenedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogOpenedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget73>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogOpenedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.ContentDialog,Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_ContentDialog__Windows_UI_Xaml_Controls_ContentDialogButtonClickEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogButtonClickEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_ContentDialog__UI_Xaml_Controls_ContentDialogButtonClickEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogButtonClickEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogButtonClickEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ContentDialog, global::Windows.UI.Xaml.Controls.ContentDialogButtonClickEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget74>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_ContentDialog_j_Windows_UI_Xaml_Controls_ContentDialogButtonClickEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<NotificationsExtensions.Toasts.IToastSelectionBoxItemClass>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_NotificationsExtensions_Toasts_IToastSelectionBoxItemClass___Windows_Foundation_Collections__IIterator_A_NotificationsExtensions_Toasts_IToastSelectionBoxItemClass_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass> Func__Collections_IIterator_1_NotificationsExtensions_Toasts_IToastSelectionBoxItemClass___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Toasts_IToastSelectionBoxItemClass_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Toasts_IToastSelectionBoxItemClass_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Toasts.IToastSelectionBoxItemClass>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastSelectionBoxItemClass__NotificationsExtensions_Toasts__IToastSelectionBoxItemClass *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass Func_NotificationsExtensions_Toasts_IToastSelectionBoxItemClass__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl**);
			global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass __value__retval = default(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Toasts.IToastSelectionBoxItemClass>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Toasts_IToastSelectionBoxItemClass__NotificationsExtensions_Toasts__IToastSelectionBoxItemClass * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_NotificationsExtensions_Toasts_IToastSelectionBoxItemClass__uint__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastSelectionBoxItemClass__NotificationsExtensions_Toasts__IToastSelectionBoxItemClass * items
						items[mcgIdx] = (global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastSelectionBoxItemClass__NotificationsExtensions_Toasts__IToastSelectionBoxItemClass * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<NotificationsExtensions.Toasts.IToastImageClass>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_NotificationsExtensions_Toasts_IToastImageClass___Windows_Foundation_Collections__IIterator_A_NotificationsExtensions_Toasts_IToastImageClass_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastImageClass> Func__Collections_IIterator_1_NotificationsExtensions_Toasts_IToastImageClass___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Toasts_IToastImageClass_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Toasts_IToastImageClass_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastImageClass> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastImageClass>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastImageClass>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Toasts.IToastImageClass>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Toasts.IToastImageClass>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastImageClass__NotificationsExtensions_Toasts__IToastImageClass *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Toasts.IToastImageClass Func_NotificationsExtensions_Toasts_IToastImageClass__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl**);
			global::NotificationsExtensions.Toasts.IToastImageClass __value__retval = default(global::NotificationsExtensions.Toasts.IToastImageClass);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Toasts.IToastImageClass)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Toasts.IToastImageClass).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Toasts.IToastImageClass>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Toasts_IToastImageClass__NotificationsExtensions_Toasts__IToastImageClass * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_NotificationsExtensions_Toasts_IToastImageClass__uint__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.IToastImageClass[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastImageClass__NotificationsExtensions_Toasts__IToastImageClass * items
						items[mcgIdx] = (global::NotificationsExtensions.Toasts.IToastImageClass)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Toasts.IToastImageClass).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastImageClass__NotificationsExtensions_Toasts__IToastImageClass * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<NotificationsExtensions.Tiles.ITileSubgroupClass>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_NotificationsExtensions_Tiles_ITileSubgroupClass___Windows_Foundation_Collections__IIterator_A_NotificationsExtensions_Tiles_ITileSubgroupClass_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileSubgroupClass> Func__Collections_IIterator_1_NotificationsExtensions_Tiles_ITileSubgroupClass___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Tiles_ITileSubgroupClass_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Tiles_ITileSubgroupClass_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileSubgroupClass> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileSubgroupClass>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileSubgroupClass>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileSubgroupClass>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Tiles.ITileSubgroupClass>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupClass__NotificationsExtensions_Tiles__ITileSubgroupClass *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.ITileSubgroupClass Func_NotificationsExtensions_Tiles_ITileSubgroupClass__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl**);
			global::NotificationsExtensions.Tiles.ITileSubgroupClass __value__retval = default(global::NotificationsExtensions.Tiles.ITileSubgroupClass);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Tiles.ITileSubgroupClass)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Tiles.ITileSubgroupClass>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Tiles_ITileSubgroupClass__NotificationsExtensions_Tiles__ITileSubgroupClass * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_NotificationsExtensions_Tiles_ITileSubgroupClass__uint__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.ITileSubgroupClass[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupClass__NotificationsExtensions_Tiles__ITileSubgroupClass * items
						items[mcgIdx] = (global::NotificationsExtensions.Tiles.ITileSubgroupClass)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupClass__NotificationsExtensions_Tiles__ITileSubgroupClass * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<NotificationsExtensions.Tiles.ITileSubgroupClass>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupClass__NotificationsExtensions_Tiles__ITileSubgroupClass *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.ITileSubgroupClass Func_uint__NotificationsExtensions_Tiles_ITileSubgroupClass__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl**);
			global::NotificationsExtensions.Tiles.ITileSubgroupClass __value__retval = default(global::NotificationsExtensions.Tiles.ITileSubgroupClass);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Tiles.ITileSubgroupClass)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<NotificationsExtensions.Tiles.ITileSubgroupClass>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupClass__NotificationsExtensions_Tiles__ITileSubgroupClass *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_NotificationsExtensions_Tiles_ITileSubgroupClass__out_uint__bool__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.ITileSubgroupClass value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<NotificationsExtensions.Tiles.ITileSubgroupClass>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Tiles_ITileSubgroupClass__NotificationsExtensions_Tiles__ITileSubgroupClass * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_NotificationsExtensions_Tiles_ITileSubgroupClass__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::NotificationsExtensions.Tiles.ITileSubgroupClass[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupClass__NotificationsExtensions_Tiles__ITileSubgroupClass * items
						items[mcgIdx] = (global::NotificationsExtensions.Tiles.ITileSubgroupClass)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Tiles.ITileSubgroupClass).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileSubgroupClass__NotificationsExtensions_Tiles__ITileSubgroupClass * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<NotificationsExtensions.Tiles.ITileImageSourceClass>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_NotificationsExtensions_Tiles_ITileImageSourceClass___Windows_Foundation_Collections__IIterator_A_NotificationsExtensions_Tiles_ITileImageSourceClass_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileImageSourceClass> Func__Collections_IIterator_1_NotificationsExtensions_Tiles_ITileImageSourceClass___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Tiles_ITileImageSourceClass_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_NotificationsExtensions_Tiles_ITileImageSourceClass_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileImageSourceClass> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileImageSourceClass>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileImageSourceClass>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::NotificationsExtensions.Tiles.ITileImageSourceClass>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Tiles.ITileImageSourceClass>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileImageSourceClass__NotificationsExtensions_Tiles__ITileImageSourceClass *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.ITileImageSourceClass Func_NotificationsExtensions_Tiles_ITileImageSourceClass__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**);
			global::NotificationsExtensions.Tiles.ITileImageSourceClass __value__retval = default(global::NotificationsExtensions.Tiles.ITileImageSourceClass);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Tiles.ITileImageSourceClass)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<NotificationsExtensions.Tiles.ITileImageSourceClass>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Tiles_ITileImageSourceClass__NotificationsExtensions_Tiles__ITileImageSourceClass * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_NotificationsExtensions_Tiles_ITileImageSourceClass__uint__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.ITileImageSourceClass[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileImageSourceClass__NotificationsExtensions_Tiles__ITileImageSourceClass * items
						items[mcgIdx] = (global::NotificationsExtensions.Tiles.ITileImageSourceClass)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileImageSourceClass__NotificationsExtensions_Tiles__ITileImageSourceClass * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<NotificationsExtensions.Tiles.ITileImageSourceClass>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileImageSourceClass__NotificationsExtensions_Tiles__ITileImageSourceClass *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Tiles.ITileImageSourceClass Func_uint__NotificationsExtensions_Tiles_ITileImageSourceClass__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**);
			global::NotificationsExtensions.Tiles.ITileImageSourceClass __value__retval = default(global::NotificationsExtensions.Tiles.ITileImageSourceClass);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Tiles.ITileImageSourceClass)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<NotificationsExtensions.Tiles.ITileImageSourceClass>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileImageSourceClass__NotificationsExtensions_Tiles__ITileImageSourceClass *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_NotificationsExtensions_Tiles_ITileImageSourceClass__out_uint__bool__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Tiles.ITileImageSourceClass value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<NotificationsExtensions.Tiles.ITileImageSourceClass>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Tiles_ITileImageSourceClass__NotificationsExtensions_Tiles__ITileImageSourceClass * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_NotificationsExtensions_Tiles_ITileImageSourceClass__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::NotificationsExtensions.Tiles.ITileImageSourceClass[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileImageSourceClass__NotificationsExtensions_Tiles__ITileImageSourceClass * items
						items[mcgIdx] = (global::NotificationsExtensions.Tiles.ITileImageSourceClass)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Tiles_ITileImageSourceClass__NotificationsExtensions_Tiles__ITileImageSourceClass * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Globalization.ICalendar.GetDateTime, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDateTimeMarshaller] System_DateTimeOffset__Windows_Foundation__DateTime, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.DateTimeOffset Func_DateTimeOffset__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.DateTimeOffset result__retval;
			global::System.DateTimeOffset__Impl.UnsafeType unsafe_result__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_result__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			result__retval = new global::System.DateTimeOffset((unsafe_result__retval.UniversalTime + 504911232000000000), global::System.TimeSpan.Zero).ToLocalTime();
			// Return
			return result__retval;
		}

		// Signature, Windows.Globalization.ICalendar.EraAsString, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_int__string__(
					global::System.__ComObject __this, 
					int idealLength, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_result__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string result__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_result__retval = default(global::System.Runtime.InteropServices.HSTRING);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									idealLength, 
									&(unsafe_result__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				result__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_result__retval);
				// Return
				return result__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_result__retval.handle);
			}
		}

		// Signature, Windows.Foundation.Collections.MapChangedEventHandler<string,string>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IObservableMap_2_string__string___Windows_Foundation_Collections__IObservableMap_A_string_j_string_V_ *, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IMapChangedEventArgs_1_string___Windows_Foundation_Collections__IMapChangedEventArgs_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Collections_IObservableMap_2_string__string__Collections_IMapChangedEventArgs_1_string___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Collections.IObservableMap<string, string> sender, 
					global::Windows.Foundation.Collections.IMapChangedEventArgs<string> @event, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IObservableMap_A_string_j_string_V___Impl.Vtbl** unsafe_sender = default(global::Windows.Foundation.Collections.IObservableMap_A_string_j_string_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl** unsafe_event = default(global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::Windows.Foundation.Collections.IObservableMap_A_string_j_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									sender, 
									typeof(global::Windows.Foundation.Collections.IObservableMap<string, string>).TypeHandle
								);
				unsafe_event = (global::Windows.Foundation.Collections.IMapChangedEventArgs_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									@event, 
									typeof(global::Windows.Foundation.Collections.IMapChangedEventArgs<string>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_event
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_event)));
				global::System.GC.KeepAlive(@event);
			}
		}

		// Signature, Windows.Foundation.Collections.IObservableMap<string,string>.add_MapChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_Collections_MapChangedEventHandler_2_string__string___Windows_Foundation_Collections__MapChangedEventHandler_A_string_j_string_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__Collections_MapChangedEventHandler_2_string__string__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Collections.MapChangedEventHandler<string, string> vhnd, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Vtbl** unsafe_vhnd = default(global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe___value__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_vhnd = (global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									vhnd, 
									typeof(global::Windows.Foundation.Collections.MapChangedEventHandler<string, string>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget80>(global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_vhnd, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_vhnd)));
			}
		}

		// Signature, Windows.System.Threading.WorkItemHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncAction__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncAction operation, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_operation = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_operation = (global::Windows.Foundation.IAsyncAction__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									operation, 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_operation
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_operation)));
				global::System.GC.KeepAlive(operation);
			}
		}

		// Signature, Windows.System.Threading.TimerElapsedHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_System_Threading_ThreadPoolTimer__Windows_System_Threading__ThreadPoolTimer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Threading_ThreadPoolTimer__(
					global::System.__ComObject __this, 
					global::Windows.System.Threading.ThreadPoolTimer timer, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.IThreadPoolTimer__Impl.Vtbl** unsafe_timer = default(global::Windows.System.Threading.IThreadPoolTimer__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_timer = (global::Windows.System.Threading.IThreadPoolTimer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									timer, 
									typeof(global::Windows.System.Threading.IThreadPoolTimer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_timer
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_timer)));
				global::System.GC.KeepAlive(timer);
			}
		}

		// Signature, Windows.System.Threading.IThreadPoolTimerStatics.CreateTimer, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_System_Threading_TimerElapsedHandler__Windows_System_Threading__TimerElapsedHandler *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_TimeSpan__Windows_Foundation__TimeSpan, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_System_Threading_ThreadPoolTimer__Windows_System_Threading__ThreadPoolTimer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Threading.ThreadPoolTimer Func_Threading_TimerElapsedHandler__TimeSpan__Threading_ThreadPoolTimer__(
					global::System.__ComObject __this, 
					global::Windows.System.Threading.TimerElapsedHandler handler, 
					global::System.TimeSpan delay, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.TimerElapsedHandler__Impl.Vtbl** unsafe_handler = default(global::Windows.System.Threading.TimerElapsedHandler__Impl.Vtbl**);
			global::Windows.System.Threading.IThreadPoolTimer__Impl.Vtbl** unsafe_timer__retval = default(global::Windows.System.Threading.IThreadPoolTimer__Impl.Vtbl**);
			global::Windows.System.Threading.ThreadPoolTimer timer__retval = default(global::Windows.System.Threading.ThreadPoolTimer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.System.Threading.TimerElapsedHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.System.Threading.TimerElapsedHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget81>(global::Windows.System.Threading.TimerElapsedHandler__Impl.Invoke)
								);
				unsafe_timer__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									delay, 
									&(unsafe_timer__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				timer__retval = (global::Windows.System.Threading.ThreadPoolTimer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_timer__retval), 
									typeof(global::Windows.System.Threading.IThreadPoolTimer).TypeHandle, 
									typeof(global::Windows.System.Threading.ThreadPoolTimer).TypeHandle
								);
				// Return
				return timer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_timer__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceMap.GetValue, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceContext__Windows_ApplicationModel_Resources_Core__ResourceContext *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceCandidate__Windows_ApplicationModel_Resources_Core__ResourceCandidate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.ResourceCandidate Func_string__ApplicationModel_Resources_Core_ResourceContext__ApplicationModel_Resources_Core_ResourceCandidate__(
					global::System.__ComObject __this, 
					string resource, 
					global::Windows.ApplicationModel.Resources.Core.ResourceContext context, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_resource = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Vtbl** unsafe_context = default(global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.IResourceCandidate__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.Resources.Core.IResourceCandidate__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.ResourceCandidate value__retval = default(global::Windows.ApplicationModel.Resources.Core.ResourceCandidate);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_resource = resource)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_resource;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_resource, resource, &(hstring_header_resource), &(unsafe_resource));
					unsafe_context = (global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										context, 
										typeof(global::Windows.ApplicationModel.Resources.Core.IResourceContext).TypeHandle
									);
					unsafe_value__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_resource, 
										unsafe_context, 
										&(unsafe_value__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					value__retval = (global::Windows.ApplicationModel.Resources.Core.ResourceCandidate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_value__retval), 
										typeof(global::Windows.ApplicationModel.Resources.Core.IResourceCandidate).TypeHandle, 
										typeof(global::Windows.ApplicationModel.Resources.Core.ResourceCandidate).TypeHandle
									);
				}
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_context)));
				global::System.GC.KeepAlive(context);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceMap.GetSubtree, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceMap__Windows_ApplicationModel_Resources_Core__ResourceMap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.ResourceMap Func_string__ApplicationModel_Resources_Core_ResourceMap__(
					global::System.__ComObject __this, 
					string reference, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_reference = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Vtbl** unsafe_map__retval = default(global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.ResourceMap map__retval = default(global::Windows.ApplicationModel.Resources.Core.ResourceMap);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_reference = reference)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_reference;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_reference, reference, &(hstring_header_reference), &(unsafe_reference));
					unsafe_map__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_reference, 
										&(unsafe_map__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					map__retval = (global::Windows.ApplicationModel.Resources.Core.ResourceMap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_map__retval), 
										typeof(global::Windows.ApplicationModel.Resources.Core.IResourceMap).TypeHandle, 
										typeof(global::Windows.ApplicationModel.Resources.Core.ResourceMap).TypeHandle
									);
				}
				// Return
				return map__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_map__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyDictionary<string,Windows.ApplicationModel.Resources.Core.NamedResource>.Lookup, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_NamedResource__Windows_ApplicationModel_Resources_Core__NamedResource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.NamedResource Func_string__ApplicationModel_Resources_Core_NamedResource__(
					global::System.__ComObject __this, 
					string key, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_key = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.ApplicationModel.Resources.Core.INamedResource__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Resources.Core.INamedResource__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.NamedResource __value__retval = default(global::Windows.ApplicationModel.Resources.Core.NamedResource);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_key = key)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_key;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_key, key, &(hstring_header_key), &(unsafe_key));
					unsafe___value__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_key, 
										&(unsafe___value__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					__value__retval = (global::Windows.ApplicationModel.Resources.Core.NamedResource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe___value__retval), 
										typeof(global::Windows.ApplicationModel.Resources.Core.INamedResource).TypeHandle, 
										typeof(global::Windows.ApplicationModel.Resources.Core.NamedResource).TypeHandle
									);
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyDictionary<string,Windows.ApplicationModel.Resources.Core.NamedResource>.HasKey, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_string__bool__(
					global::System.__ComObject __this, 
					string key, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_key = default(global::System.Runtime.InteropServices.HSTRING);
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_key = key)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_key;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_key, key, &(hstring_header_key), &(unsafe_key));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_key, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
			}
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IReadOnlyDictionary<string,Windows.ApplicationModel.Resources.Core.NamedResource>.Split, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IMapView_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyDictionary_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IMapView_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out__IReadOnlyDictionary_2_string__ApplicationModel_Resources_Core_NamedResource___out__IReadOnlyDictionary_2_string__ApplicationModel_Resources_Core_NamedResource___(
					global::System.__ComObject __this, 
					out global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> first, 
					out global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> second, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl** unsafe_first = default(global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl** unsafe_second = default(global::System.Collections.Generic.IReadOnlyDictionary_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_first = null;
				unsafe_second = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_first), 
									&(unsafe_second)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				second = (global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_second), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>).TypeHandle
								);
				first = (global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_first), 
									typeof(global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>).TypeHandle
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_first)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_second)));
			}
		}

		// Signature, System.Collections.Generic.KeyValuePair<string,Windows.ApplicationModel.Resources.Core.NamedResource>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_NamedResource__Windows_ApplicationModel_Resources_Core__NamedResource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.NamedResource Func_ApplicationModel_Resources_Core_NamedResource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Resources.Core.INamedResource__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Resources.Core.INamedResource__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.NamedResource __value__retval = default(global::Windows.ApplicationModel.Resources.Core.NamedResource);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Resources.Core.NamedResource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Resources.Core.INamedResource).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Resources.Core.NamedResource).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Windows.ApplicationModel.Resources.Core.NamedResource>>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource____Windows_Foundation_Collections__IIterator_A_Windows_Foundation_Collections_IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>> Func__Collections_IIterator_1__KeyValuePair_2_string__ApplicationModel_Resources_Core_NamedResource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_System_Collections_Generic_KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V__V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<string,Windows.ApplicationModel.Resources.Core.NamedResource>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> Func__KeyValuePair_2_string__ApplicationModel_Resources_Core_NamedResource___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<string,Windows.ApplicationModel.Resources.Core.NamedResource>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__KeyValuePair_2_string__ApplicationModel_Resources_Core_NamedResource___uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceContextStatics2.GetForViewIndependentUse, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceContext__Windows_ApplicationModel_Resources_Core__ResourceContext *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.ResourceContext Func_ApplicationModel_Resources_Core_ResourceContext__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Vtbl** unsafe_loader__retval = default(global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.ResourceContext loader__retval = default(global::Windows.ApplicationModel.Resources.Core.ResourceContext);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_loader__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_loader__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				loader__retval = (global::Windows.ApplicationModel.Resources.Core.ResourceContext)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_loader__retval), 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceContext).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Resources.Core.ResourceContext).TypeHandle
								);
				// Return
				return loader__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_loader__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceContext.get_QualifierValues, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IObservableMap_2_string__string___Windows_Foundation_Collections__IObservableMap_A_string_j_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IObservableMap<string, string> Func__Collections_IObservableMap_2_string__string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IObservableMap_A_string_j_string_V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.Collections.IObservableMap_A_string_j_string_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IObservableMap<string, string> value__retval = default(global::Windows.Foundation.Collections.IObservableMap<string, string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Foundation.Collections.IObservableMap<string, string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.Collections.IObservableMap<string, string>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceContext.get_Languages, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_string___Windows_Foundation_Collections__IVectorView_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<string> Func__IReadOnlyList_1_string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<string> value__retval = default(global::System.Collections.Generic.IReadOnlyList<string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IReadOnlyList<string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<string>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceContext.put_Languages, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_string___Windows_Foundation_Collections__IVectorView_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IReadOnlyList_1_string___(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IReadOnlyList<string> languages, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl** unsafe_languages = default(global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_languages = (global::System.Collections.Generic.IReadOnlyList_A_string_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									languages, 
									typeof(global::System.Collections.Generic.IReadOnlyList<string>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_languages
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_languages)));
				global::System.GC.KeepAlive(languages);
			}
		}

		// Signature, System.EventHandler<Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs__Windows_Foundation_Diagnostics__TracingStatusChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object___Diagnostics_TracingStatusChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.WindowVisibilityChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_VisibilityChangedEventArgs__Windows_UI_Core__VisibilityChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Core_VisibilityChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Core.VisibilityChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Core.IVisibilityChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Core.IVisibilityChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Core.IVisibilityChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Core.IVisibilityChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.WindowClosedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_CoreWindowEventArgs__Windows_UI_Core__CoreWindowEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Core_CoreWindowEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Core.CoreWindowEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Core.ICoreWindowEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Core.ICoreWindowEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Core.ICoreWindowEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Core.ICoreWindowEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Maps.IMapIcon.put_Image, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IRandomAccessStreamReference__Windows_Storage_Streams__IRandomAccessStreamReference *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Storage_Streams_IRandomAccessStreamReference__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IRandomAccessStreamReference value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IRandomAccessStreamReference__Impl.Vtbl** unsafe_value = default(global::Windows.Storage.Streams.IRandomAccessStreamReference__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Storage.Streams.IRandomAccessStreamReference__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Storage.Streams.IRandomAccessStreamReference).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.EventHandler<Windows.UI.Core.BackRequestedEventArgs>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_BackRequestedEventArgs__Windows_UI_Core__BackRequestedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Core_BackRequestedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Core.BackRequestedEventArgs args, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Core.IBackRequestedEventArgs__Impl.Vtbl** unsafe_args = default(global::Windows.UI.Core.IBackRequestedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_args = (global::Windows.UI.Core.IBackRequestedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									args, 
									typeof(global::Windows.UI.Core.IBackRequestedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IDispatcherTimer.put_Interval, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_TimeSpan__Windows_Foundation__TimeSpan, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_TimeSpan__(
					global::System.__ComObject __this, 
					global::System.TimeSpan value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.Storage.Streams.IDataWriterFactory.CreateDataWriter, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IOutputStream__Windows_Storage_Streams__IOutputStream *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Storage_Streams_IOutputStream__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IOutputStream outputStream, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IOutputStream__Impl.Vtbl** unsafe_outputStream = default(global::Windows.Storage.Streams.IOutputStream__Impl.Vtbl**);
			global::System.IntPtr unsafe_dataWriter__retval;
			global::System.IntPtr dataWriter__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_outputStream = (global::Windows.Storage.Streams.IOutputStream__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									outputStream, 
									typeof(global::Windows.Storage.Streams.IOutputStream).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_outputStream, 
									&(unsafe_dataWriter__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				dataWriter__retval = unsafe_dataWriter__retval;
				// Return
				return dataWriter__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_outputStream)));
				global::System.GC.KeepAlive(outputStream);
			}
		}

		// Signature, Windows.Storage.Streams.IDataWriter.WriteBytes, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_byte__(
					global::System.__ComObject __this, 
					byte[] value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_value_mcgLength = 0;
			byte* unsafe_value;
			int unsafe___return__;
			// Marshalling
			if (value != null)
				unsafe_value_mcgLength = (uint)value.Length;
			fixed (byte* pinned_value = global::McgInterop.McgCoreHelpers.GetArrayForCompat(value))
			{
				unsafe_value = (byte*)pinned_value;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value_mcgLength, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Windows.Storage.Streams.IDataWriter.WriteString, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_string__uint__(
					global::System.__ComObject __this, 
					string value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			uint unsafe_codeUnitCount__retval;
			uint codeUnitCount__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_value = value)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_codeUnitCount__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				codeUnitCount__retval = unsafe_codeUnitCount__retval;
			}
			// Return
			return codeUnitCount__retval;
		}

		// Signature, Windows.Storage.Streams.IDataWriter.StoreAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Storage_Streams_DataWriterStoreOperation__Windows_Storage_Streams__DataWriterStoreOperation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.DataWriterStoreOperation Func_Storage_Streams_DataWriterStoreOperation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_uint_V___Impl.Vtbl** unsafe_operation__retval = default(global::Windows.Foundation.IAsyncOperation_A_uint_V___Impl.Vtbl**);
			global::Windows.Storage.Streams.DataWriterStoreOperation operation__retval = default(global::Windows.Storage.Streams.DataWriterStoreOperation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_operation__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_operation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				operation__retval = (global::Windows.Storage.Streams.DataWriterStoreOperation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_operation__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<uint>).TypeHandle, 
									typeof(global::Windows.Storage.Streams.DataWriterStoreOperation).TypeHandle
								);
				// Return
				return operation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_operation__retval)));
			}
		}

		// Signature, Windows.UI.Popups.IUICommandFactory.CreateWithHandler, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Popups_UICommandInvokedHandler__Windows_UI_Popups__UICommandInvokedHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_string__UI_Popups_UICommandInvokedHandler__IntPtr__(
					global::System.__ComObject __this, 
					string label, 
					global::Windows.UI.Popups.UICommandInvokedHandler action, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_label = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.UI.Popups.UICommandInvokedHandler__Impl.Vtbl** unsafe_action = default(global::Windows.UI.Popups.UICommandInvokedHandler__Impl.Vtbl**);
			global::System.IntPtr unsafe_instance__retval;
			global::System.IntPtr instance__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_label = label)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_label;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_label, label, &(hstring_header_label), &(unsafe_label));
					unsafe_action = (global::Windows.UI.Popups.UICommandInvokedHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
										action, 
										typeof(global::Windows.UI.Popups.UICommandInvokedHandler).TypeHandle, 
										global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget82>(global::Windows.UI.Popups.UICommandInvokedHandler__Impl.Invoke)
									);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_label, 
										unsafe_action, 
										&(unsafe_instance__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					instance__retval = unsafe_instance__retval;
				}
				// Return
				return instance__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_action)));
			}
		}

		// Signature, Windows.UI.Notifications.ITileNotificationFactory.CreateTileNotification, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Data_Xml_Dom_XmlDocument__Windows_Data_Xml_Dom__XmlDocument *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Data_Xml_Dom_XmlDocument__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.Data.Xml.Dom.XmlDocument content, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Data.Xml.Dom.IXmlDocument__Impl.Vtbl** unsafe_content = default(global::Windows.Data.Xml.Dom.IXmlDocument__Impl.Vtbl**);
			global::System.IntPtr unsafe_notification__retval;
			global::System.IntPtr notification__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_content = (global::Windows.Data.Xml.Dom.IXmlDocument__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									content, 
									typeof(global::Windows.Data.Xml.Dom.IXmlDocument).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_content, 
									&(unsafe_notification__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				notification__retval = unsafe_notification__retval;
				// Return
				return notification__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_content)));
				global::System.GC.KeepAlive(content);
			}
		}

		// Signature, Windows.UI.Notifications.ITileNotification.put_ExpirationTime, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_System_DateTimeOffset___Windows_Foundation__IReference_A_Windows_Foundation_DateTime_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Nullable_1_DateTimeOffset___(
					global::System.__ComObject __this, 
					global::System.Nullable<global::System.DateTimeOffset> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_System_DateTimeOffset_V___Impl.Vtbl** unsafe_value = default(global::System.Nullable_A_System_DateTimeOffset_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (value.HasValue)
				{
					global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<global::System.DateTimeOffset> unsafe_value_Wrapper = new global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<global::System.DateTimeOffset>(value.Value, 14);
					unsafe_value = (global::System.Nullable_A_System_DateTimeOffset_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ManagedObjectToComInterface(
										unsafe_value_Wrapper, 
										typeof(global::Windows.Foundation.IReference<global::System.DateTimeOffset>).TypeHandle
									);
				}
				else
					unsafe_value = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.IDisposable>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_IDisposable__Windows_Foundation__IClosable *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IDisposable Func_IDisposable__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IDisposable__Impl.Vtbl** unsafe___value__retval = default(global::System.IDisposable__Impl.Vtbl**);
			global::System.IDisposable __value__retval = default(global::System.IDisposable);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.IDisposable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.IDisposable).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.IDisposable>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_IDisposable__Windows_Foundation__IClosable * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_IDisposable__uint__(
					global::System.__ComObject __this, 
					global::System.IDisposable[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.IDisposable__Impl.Vtbl*** unsafe_items = default(global::System.IDisposable__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.IDisposable__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.IDisposable__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_IDisposable__Windows_Foundation__IClosable * items
						items[mcgIdx] = (global::System.IDisposable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::System.IDisposable).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_IDisposable__Windows_Foundation__IClosable * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Graphics.Display.IDisplayInformationStatics.get_AutoRotationPreferences, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_Display_DisplayOrientations__Windows_Graphics_Display__DisplayOrientations, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Graphics.Display.DisplayOrientations Func_Graphics_Display_DisplayOrientations__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.Display.DisplayOrientations unsafe_value__retval;
			global::Windows.Graphics.Display.DisplayOrientations value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Graphics.Display.IDisplayInformationStatics.put_AutoRotationPreferences, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_Display_DisplayOrientations__Windows_Graphics_Display__DisplayOrientations, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Graphics_Display_DisplayOrientations__(
					global::System.__ComObject __this, 
					global::Windows.Graphics.Display.DisplayOrientations value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.Graphics.Display.IDisplayInformation.get_ResolutionScale, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Graphics_Display_ResolutionScale__Windows_Graphics_Display__ResolutionScale, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Graphics.Display.ResolutionScale Func_Graphics_Display_ResolutionScale__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Graphics.Display.ResolutionScale unsafe_value__retval;
			global::Windows.Graphics.Display.ResolutionScale value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Graphics.Display.IDisplayInformation.get_LogicalDpi, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static float Func_float__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			float unsafe_value__retval;
			float value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<System.Object>>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_object____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_object_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>> Func__KeyValuePair_2_string___IEnumerable_1_object__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>> __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<System.Object>>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_object____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_object_V__V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__KeyValuePair_2_string___IEnumerable_1_object__uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_object____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_object_V__V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<object>>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_object____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_object_V__V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IEnumerable<System.Object>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_object___Windows_Foundation_Collections__IIterable_A_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IEnumerable<object> Func__IEnumerable_1_object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_System_Object_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IEnumerable_A_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable<object> __value__retval = default(global::System.Collections.Generic.IEnumerable<object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IEnumerable<object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IEnumerable<object>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IEnumerable<System.Object>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_IEnumerable_1_object___Windows_Foundation_Collections__IIterable_A_object_V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__IEnumerable_1_object___uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IEnumerable<object>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.IEnumerable_A_System_Object_V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.IEnumerable_A_System_Object_V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.IEnumerable_A_System_Object_V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.IEnumerable_A_System_Object_V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_object___Windows_Foundation_Collections__IIterable_A_object_V_ * items
						items[mcgIdx] = (global::System.Collections.Generic.IEnumerable<object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::System.Collections.Generic.IEnumerable<object>).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_object___Windows_Foundation_Collections__IIterable_A_object_V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<System.Object>>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_System_Collections_Generic_IEnumerable_1_object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IIterable_A_object_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<object>> Func__IEnumerable_1__IEnumerable_1_object__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<object>> __value__retval = default(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<object>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<object>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<object>>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<System.Object>>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_IEnumerable_1_System_Collections_Generic_IEnumerable_1_object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IIterable_A_object_V__V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__IEnumerable_1__IEnumerable_1_object__uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<object>>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.IEnumerable_A_System_Collections_Generic_IEnumerable_A_System_Object_V__V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_System_Collections_Generic_IEnumerable_1_object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IIterable_A_object_V__V_ * items
						items[mcgIdx] = (global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<object>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<object>>).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_System_Collections_Generic_IEnumerable_1_object____Windows_Foundation_Collections__IIterable_A_Windows_Foundation_Collections_IIterable_A_object_V__V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Services.Maps.IMapRouteFinderResult.get_Route, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Services_Maps_MapRoute__Windows_Services_Maps__MapRoute *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Services.Maps.MapRoute Func_Services_Maps_MapRoute__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Services.Maps.IMapRoute__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Services.Maps.IMapRoute__Impl.Vtbl**);
			global::Windows.Services.Maps.MapRoute value__retval = default(global::Windows.Services.Maps.MapRoute);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Services.Maps.MapRoute)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Services.Maps.IMapRoute).TypeHandle, 
									typeof(global::Windows.Services.Maps.MapRoute).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Services.Maps.IMapRouteFinderResult.get_Status, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Services_Maps_MapRouteFinderStatus__Windows_Services_Maps__MapRouteFinderStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Services.Maps.MapRouteFinderStatus Func_Services_Maps_MapRouteFinderStatus__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Services.Maps.MapRouteFinderStatus unsafe_value__retval;
			global::Windows.Services.Maps.MapRouteFinderStatus value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Windows.Services.Maps.MapRouteFinderResult>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_Services_Maps_MapRouteFinderResult___Windows_Foundation__IAsyncOperation_A_Windows_Services_Maps_MapRouteFinderResult_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_Services_Maps_MapRouteFinderResult___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Services.Maps.MapRouteFinderResult> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_Services_Maps_MapRouteFinderResult_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Windows_Services_Maps_MapRouteFinderResult_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Windows_Services_Maps_MapRouteFinderResult_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Services.Maps.MapRouteFinderResult>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.Services.Maps.MapRouteFinderResult>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Services_Maps_MapRouteFinderResult___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Services_Maps_MapRouteFinderResult_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationCompletedHandler_1_Services_Maps_MapRouteFinderResult___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Services.Maps.MapRouteFinderResult> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Services_Maps_MapRouteFinderResult_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Services_Maps_MapRouteFinderResult_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Services_Maps_MapRouteFinderResult_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Services.Maps.MapRouteFinderResult>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget83>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Services_Maps_MapRouteFinderResult_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.Services.Maps.MapRouteFinderResult>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Services_Maps_MapRouteFinderResult__Windows_Services_Maps__MapRouteFinderResult *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Services.Maps.MapRouteFinderResult Func_Services_Maps_MapRouteFinderResult__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Services.Maps.IMapRouteFinderResult__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Services.Maps.IMapRouteFinderResult__Impl.Vtbl**);
			global::Windows.Services.Maps.MapRouteFinderResult __value__retval = default(global::Windows.Services.Maps.MapRouteFinderResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Services.Maps.MapRouteFinderResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Services.Maps.IMapRouteFinderResult).TypeHandle, 
									typeof(global::Windows.Services.Maps.MapRouteFinderResult).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Background.IBackgroundTaskBuilder.SetTrigger, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Background_IBackgroundTrigger__Windows_ApplicationModel_Background__IBackgroundTrigger *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Background_IBackgroundTrigger__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Background.IBackgroundTrigger trigger, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Background.IBackgroundTrigger__Impl.Vtbl** unsafe_trigger = default(global::Windows.ApplicationModel.Background.IBackgroundTrigger__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_trigger = (global::Windows.ApplicationModel.Background.IBackgroundTrigger__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									trigger, 
									typeof(global::Windows.ApplicationModel.Background.IBackgroundTrigger).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_trigger
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_trigger)));
				global::System.GC.KeepAlive(trigger);
			}
		}

		// Signature, Windows.ApplicationModel.Background.IBackgroundTaskBuilder.AddCondition, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_ApplicationModel_Background_IBackgroundCondition__Windows_ApplicationModel_Background__IBackgroundCondition *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ApplicationModel_Background_IBackgroundCondition__(
					global::System.__ComObject __this, 
					global::Windows.ApplicationModel.Background.IBackgroundCondition condition, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Background.IBackgroundCondition__Impl.Vtbl** unsafe_condition = default(global::Windows.ApplicationModel.Background.IBackgroundCondition__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_condition = (global::Windows.ApplicationModel.Background.IBackgroundCondition__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									condition, 
									typeof(global::Windows.ApplicationModel.Background.IBackgroundCondition).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_condition
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_condition)));
				global::System.GC.KeepAlive(condition);
			}
		}

		// Signature, Windows.ApplicationModel.Background.IBackgroundTaskBuilder.Register, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Background_BackgroundTaskRegistration__Windows_ApplicationModel_Background__BackgroundTaskRegistration *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Background.BackgroundTaskRegistration Func_ApplicationModel_Background_BackgroundTaskRegistration__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration__Impl.Vtbl** unsafe_task__retval = default(global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration__Impl.Vtbl**);
			global::Windows.ApplicationModel.Background.BackgroundTaskRegistration task__retval = default(global::Windows.ApplicationModel.Background.BackgroundTaskRegistration);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_task__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_task__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				task__retval = (global::Windows.ApplicationModel.Background.BackgroundTaskRegistration)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_task__retval), 
									typeof(global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Background.BackgroundTaskRegistration).TypeHandle
								);
				// Return
				return task__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_task__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Background.ITimeTriggerFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_uint__bool__IntPtr__(
					global::System.__ComObject __this, 
					uint freshnessTime, 
					bool oneShot, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			sbyte unsafe_oneShot;
			global::System.IntPtr unsafe_trigger__retval;
			global::System.IntPtr trigger__retval;
			int unsafe___return__;
			// Marshalling
			unsafe_oneShot = (oneShot ? ((sbyte)1) : ((sbyte)0));
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								freshnessTime, 
								unsafe_oneShot, 
								&(unsafe_trigger__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			trigger__retval = unsafe_trigger__retval;
			// Return
			return trigger__retval;
		}

		// Signature, Windows.ApplicationModel.Background.ISystemConditionFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_ApplicationModel_Background_SystemConditionType__Windows_ApplicationModel_Background__SystemConditionType, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_intIntPtr__(
					global::System.__ComObject __this, 
					int conditionType, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_condition__retval;
			global::System.IntPtr condition__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								conditionType, 
								&(unsafe_condition__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			condition__retval = unsafe_condition__retval;
			// Return
			return condition__retval;
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Windows.ApplicationModel.Background.BackgroundAccessStatus>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_ApplicationModel_Background_BackgroundAccessStatus___Windows_Foundation__IAsyncOperation_A_Windows_ApplicationModel_Background_BackgroundAccessStatus_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1_ApplicationModel_Background_BackgroundAccessStatus___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Background.BackgroundAccessStatus> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_ApplicationModel_Background_BackgroundAccessStatus_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_Windows_ApplicationModel_Background_BackgroundAccessStatus_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_Windows_ApplicationModel_Background_BackgroundAccessStatus_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Background.BackgroundAccessStatus>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.BackgroundAccessStatus>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_ApplicationModel_Background_BackgroundAccessStatus___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_ApplicationModel_Background_BackgroundAccessStatus_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationCompletedHandler_1_ApplicationModel_Background_BackgroundAccessStatus___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.ApplicationModel.Background.BackgroundAccessStatus> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_ApplicationModel_Background_BackgroundAccessStatus_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_ApplicationModel_Background_BackgroundAccessStatus_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_ApplicationModel_Background_BackgroundAccessStatus_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.ApplicationModel.Background.BackgroundAccessStatus>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget84>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_ApplicationModel_Background_BackgroundAccessStatus_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<Windows.ApplicationModel.Background.BackgroundAccessStatus>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_ApplicationModel_Background_BackgroundAccessStatus__Windows_ApplicationModel_Background__BackgroundAccessStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Background.BackgroundAccessStatus Func_ApplicationModel_Background_BackgroundAccessStatus__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Background.BackgroundAccessStatus unsafe___value__retval;
			global::Windows.ApplicationModel.Background.BackgroundAccessStatus __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Web.Http.Filters.IHttpBaseProtocolFilter.get_CacheControl, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_Filters_HttpCacheControl__Windows_Web_Http_Filters__HttpCacheControl *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.Filters.HttpCacheControl Func_Web_Http_Filters_HttpCacheControl__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.Filters.IHttpCacheControl__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Web.Http.Filters.IHttpCacheControl__Impl.Vtbl**);
			global::Windows.Web.Http.Filters.HttpCacheControl value__retval = default(global::Windows.Web.Http.Filters.HttpCacheControl);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Web.Http.Filters.HttpCacheControl)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Web.Http.Filters.IHttpCacheControl).TypeHandle, 
									typeof(global::Windows.Web.Http.Filters.HttpCacheControl).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.Filters.IHttpBaseProtocolFilter.put_ClientCertificate, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.Certificate value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe_value = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.Web.Http.Filters.IHttpBaseProtocolFilter.put_ProxyCredential, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Credentials_PasswordCredential__Windows_Security_Credentials__PasswordCredential *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Security_Credentials_PasswordCredential__(
					global::System.__ComObject __this, 
					global::Windows.Security.Credentials.PasswordCredential value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Credentials.IPasswordCredential__Impl.Vtbl** unsafe_value = default(global::Windows.Security.Credentials.IPasswordCredential__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Security.Credentials.IPasswordCredential__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Security.Credentials.IPasswordCredential).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.Web.Http.Filters.IHttpFilter.SendRequestAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_HttpRequestMessage__Windows_Web_Http__HttpRequestMessage *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> Func_Web_Http_HttpRequestMessage___IAsyncOperationWithProgress_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___(
					global::System.__ComObject __this, 
					global::Windows.Web.Http.HttpRequestMessage request, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.IHttpRequestMessage__Impl.Vtbl** unsafe_request = default(global::Windows.Web.Http.IHttpRequestMessage__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe_operation__retval = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> operation__retval = default(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_request = (global::Windows.Web.Http.IHttpRequestMessage__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									request, 
									typeof(global::Windows.Web.Http.IHttpRequestMessage).TypeHandle
								);
				unsafe_operation__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_request, 
									&(unsafe_operation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				operation__retval = (global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_operation__retval), 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle
								);
				// Return
				return operation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_request)));
				global::System.GC.KeepAlive(request);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_operation__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpRequestMessageFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_HttpMethod__Windows_Web_Http__HttpMethod *, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Web_Http_HttpMethod__Uri__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.Web.Http.HttpMethod method, 
					global::System.Uri uri, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.IHttpMethod__Impl.Vtbl** unsafe_method = default(global::Windows.Web.Http.IHttpMethod__Impl.Vtbl**);
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_uri = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			global::System.IntPtr unsafe_httpRequestMessage__retval;
			global::System.IntPtr httpRequestMessage__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_method = (global::Windows.Web.Http.IHttpMethod__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									method, 
									typeof(global::Windows.Web.Http.IHttpMethod).TypeHandle
								);
				if (uri != null)
					unsafe_uri = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(uri);
				else
					unsafe_uri = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_method, 
									unsafe_uri, 
									&(unsafe_httpRequestMessage__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				httpRequestMessage__retval = unsafe_httpRequestMessage__retval;
				// Return
				return httpRequestMessage__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_method)));
				global::System.GC.KeepAlive(method);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_uri)));
			}
		}

		// Signature, Windows.Web.Http.IHttpRequestMessage.put_Content, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Web_Http_IHttpContent__Windows_Web_Http__IHttpContent *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Web_Http_IHttpContent__(
					global::System.__ComObject __this, 
					global::Windows.Web.Http.IHttpContent value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.IHttpContent__Impl.Vtbl** unsafe_value = default(global::Windows.Web.Http.IHttpContent__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Web.Http.IHttpContent__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Web.Http.IHttpContent).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, Windows.Web.Http.IHttpRequestMessage.get_Headers, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_Headers_HttpRequestHeaderCollection__Windows_Web_Http_Headers__HttpRequestHeaderCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.Headers.HttpRequestHeaderCollection Func_Web_Http_Headers_HttpRequestHeaderCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.Headers.IHttpRequestHeaderCollection__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Web.Http.Headers.IHttpRequestHeaderCollection__Impl.Vtbl**);
			global::Windows.Web.Http.Headers.HttpRequestHeaderCollection value__retval = default(global::Windows.Web.Http.Headers.HttpRequestHeaderCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Web.Http.Headers.HttpRequestHeaderCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Web.Http.Headers.IHttpRequestHeaderCollection).TypeHandle, 
									typeof(global::Windows.Web.Http.Headers.HttpRequestHeaderCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpRequestMessage.get_Properties, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IDictionary_2_string__object___Windows_Foundation_Collections__IMap_A_string_j_object_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IDictionary<string, object> Func__IDictionary_2_string__object___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IDictionary_A_string_j_System_Object_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IDictionary_A_string_j_System_Object_V___Impl.Vtbl**);
			global::System.Collections.Generic.IDictionary<string, object> value__retval = default(global::System.Collections.Generic.IDictionary<string, object>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IDictionary<string, object>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IDictionary<string, object>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpContent.get_Headers, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_Headers_HttpContentHeaderCollection__Windows_Web_Http_Headers__HttpContentHeaderCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.Headers.HttpContentHeaderCollection Func_Web_Http_Headers_HttpContentHeaderCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.Headers.IHttpContentHeaderCollection__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Web.Http.Headers.IHttpContentHeaderCollection__Impl.Vtbl**);
			global::Windows.Web.Http.Headers.HttpContentHeaderCollection value__retval = default(global::Windows.Web.Http.Headers.HttpContentHeaderCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Web.Http.Headers.HttpContentHeaderCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Web.Http.Headers.IHttpContentHeaderCollection).TypeHandle, 
									typeof(global::Windows.Web.Http.Headers.HttpContentHeaderCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpContent.ReadAsInputStreamAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> Func__IAsyncOperationWithProgress_2_Storage_Streams_IInputStream__ulong___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe_operation__retval = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> operation__retval = default(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_operation__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_operation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				operation__retval = (global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_operation__retval), 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle
								);
				// Return
				return operation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_operation__retval)));
			}
		}

		// Signature, Windows.Web.Http.Headers.IHttpContentHeaderCollection.TryAppendWithoutValidation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_string__string__bool__(
					global::System.__ComObject __this, 
					string name, 
					string value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_name = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			bool succeeded__retval;
			sbyte unsafe_succeeded__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_name = name)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_name;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_name, name, &(hstring_header_name), &(unsafe_name));
				fixed (char* pBuffer_value = value)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_name, 
										unsafe_value, 
										&(unsafe_succeeded__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					succeeded__retval = unsafe_succeeded__retval != 0;
				}
			}
			// Return
			return succeeded__retval;
		}

		// Signature, Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IInputStream,ulong>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperationWithProgress_2_Storage_Streams_IInputStream__ulong___ulong__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> asyncInfo, 
					ulong progressInfo, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									progressInfo
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,ulong>.put_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationProgressHandler_2_Storage_Streams_IInputStream__ulong___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget85>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,ulong>.get_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong> Func__AsyncOperationProgressHandler_2_Storage_Streams_IInputStream__ulong___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget85>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IInputStream,ulong>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperationWithProgress_2_Storage_Streams_IInputStream__ulong___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,ulong>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationWithProgressCompletedHandler_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationWithProgressCompletedHandler_2_Storage_Streams_IInputStream__ulong___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget86>(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,ulong>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IInputStream__Windows_Storage_Streams__IInputStream *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.IInputStream Func_Storage_Streams_IInputStream__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IInputStream__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Storage.Streams.IInputStream__Impl.Vtbl**);
			global::Windows.Storage.Streams.IInputStream __value__retval = default(global::Windows.Storage.Streams.IInputStream);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Storage.Streams.IInputStream)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Storage.Streams.IInputStream).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpResponseMessage.get_Content, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Web_Http_IHttpContent__Windows_Web_Http__IHttpContent *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.IHttpContent Func_Web_Http_IHttpContent__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.IHttpContent__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Web.Http.IHttpContent__Impl.Vtbl**);
			global::Windows.Web.Http.IHttpContent value__retval = default(global::Windows.Web.Http.IHttpContent);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Web.Http.IHttpContent)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Web.Http.IHttpContent).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpResponseMessage.get_Headers, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_Headers_HttpResponseHeaderCollection__Windows_Web_Http_Headers__HttpResponseHeaderCollection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.Headers.HttpResponseHeaderCollection Func_Web_Http_Headers_HttpResponseHeaderCollection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.Headers.IHttpResponseHeaderCollection__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Web.Http.Headers.IHttpResponseHeaderCollection__Impl.Vtbl**);
			global::Windows.Web.Http.Headers.HttpResponseHeaderCollection value__retval = default(global::Windows.Web.Http.Headers.HttpResponseHeaderCollection);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Web.Http.Headers.HttpResponseHeaderCollection)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Web.Http.Headers.IHttpResponseHeaderCollection).TypeHandle, 
									typeof(global::Windows.Web.Http.Headers.HttpResponseHeaderCollection).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpResponseMessage.get_StatusCode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Web_Http_HttpStatusCode__Windows_Web_Http__HttpStatusCode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpStatusCode Func_Web_Http_HttpStatusCode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.HttpStatusCode unsafe_value__retval;
			global::Windows.Web.Http.HttpStatusCode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Web.Http.IHttpResponseMessage.get_Version, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Web_Http_HttpVersion__Windows_Web_Http__HttpVersion, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpVersion Func_Web_Http_HttpVersion__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.HttpVersion unsafe_value__retval;
			global::Windows.Web.Http.HttpVersion value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Foundation.AsyncOperationProgressHandler<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, [fwd] [in] [Mcg.CodeGen.StructMarshaller] Windows_Web_Http_HttpProgress__Windows_Web_Http__HttpProgress, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperationWithProgress_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___Web_Http_HttpProgress__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> asyncInfo, 
					global::Windows.Web.Http.HttpProgress progressInfo, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			global::Windows.Web.Http.HttpProgress__Impl.UnsafeType unsafe_progressInfo = default(global::Windows.Web.Http.HttpProgress__Impl.UnsafeType);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle
								);
				global::Windows.Web.Http.HttpProgress__Impl.Marshal__SafeToUnsafe(
									ref progressInfo, 
									out unsafe_progressInfo
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									unsafe_progressInfo
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
				global::Windows.Web.Http.HttpProgress__Impl.Cleanup__Unsafe(ref unsafe_progressInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.put_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationProgressHandler_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget87>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.get_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> Func__AsyncOperationProgressHandler_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget87>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperationWithProgress_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperationWithProgress_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperationWithProgress_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationWithProgressCompletedHandler_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationWithProgressCompletedHandler_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget88>(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Web_Http_HttpResponseMessage__Windows_Web_Http__HttpResponseMessage *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpResponseMessage Func_Web_Http_HttpResponseMessage__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.IHttpResponseMessage__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Web.Http.IHttpResponseMessage__Impl.Vtbl**);
			global::Windows.Web.Http.HttpResponseMessage __value__retval = default(global::Windows.Web.Http.HttpResponseMessage);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Web.Http.HttpResponseMessage)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Web.Http.IHttpResponseMessage).TypeHandle, 
									typeof(global::Windows.Web.Http.HttpResponseMessage).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Foundation.IStringable>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Foundation_IStringable___Windows_Foundation_Collections__IIterator_A_Windows_Foundation_IStringable_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.IStringable> Func__Collections_IIterator_1__IStringable___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Foundation_IStringable_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Foundation_IStringable_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.IStringable> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.IStringable>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.IStringable>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Foundation.IStringable>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Foundation.IStringable>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IStringable Func__IStringable__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IStringable__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.IStringable__Impl.Vtbl**);
			global::Windows.Foundation.IStringable __value__retval = default(global::Windows.Foundation.IStringable);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.IStringable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.IStringable).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Foundation.IStringable>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Foundation_IStringable__Windows_Foundation__IStringable * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__IStringable__uint__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IStringable[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Foundation.IStringable__Impl.Vtbl*** unsafe_items = default(global::Windows.Foundation.IStringable__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Foundation.IStringable__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Foundation.IStringable__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable * items
						items[mcgIdx] = (global::Windows.Foundation.IStringable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.IStringable).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<NotificationsExtensions.Toasts.IToastSelectionBoxItemClass>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastSelectionBoxItemClass__NotificationsExtensions_Toasts__IToastSelectionBoxItemClass *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass Func_uint__NotificationsExtensions_Toasts_IToastSelectionBoxItemClass__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl**);
			global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass __value__retval = default(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<NotificationsExtensions.Toasts.IToastSelectionBoxItemClass>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastSelectionBoxItemClass__NotificationsExtensions_Toasts__IToastSelectionBoxItemClass *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_NotificationsExtensions_Toasts_IToastSelectionBoxItemClass__out_uint__bool__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<NotificationsExtensions.Toasts.IToastSelectionBoxItemClass>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Toasts_IToastSelectionBoxItemClass__NotificationsExtensions_Toasts__IToastSelectionBoxItemClass * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_NotificationsExtensions_Toasts_IToastSelectionBoxItemClass__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastSelectionBoxItemClass__NotificationsExtensions_Toasts__IToastSelectionBoxItemClass * items
						items[mcgIdx] = (global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Toasts.IToastSelectionBoxItemClass).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastSelectionBoxItemClass__NotificationsExtensions_Toasts__IToastSelectionBoxItemClass * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Foundation.IStringable>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IStringable Func_uint___IStringable__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IStringable__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.IStringable__Impl.Vtbl**);
			global::Windows.Foundation.IStringable __value__retval = default(global::Windows.Foundation.IStringable);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.IStringable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.IStringable).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Foundation.IStringable>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func__IStringable__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IStringable value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IStringable__Impl.Vtbl** unsafe_value = default(global::Windows.Foundation.IStringable__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Foundation.IStringable__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Foundation.IStringable).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Foundation.IStringable>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Foundation_IStringable__Windows_Foundation__IStringable * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg__IStringable__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Foundation.IStringable[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Foundation.IStringable__Impl.Vtbl*** unsafe_items = default(global::Windows.Foundation.IStringable__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Foundation.IStringable__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Foundation.IStringable__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable * items
						items[mcgIdx] = (global::Windows.Foundation.IStringable)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.IStringable).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IStringable__Windows_Foundation__IStringable * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<NotificationsExtensions.Toasts.IToastImageClass>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastImageClass__NotificationsExtensions_Toasts__IToastImageClass *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Toasts.IToastImageClass Func_uint__NotificationsExtensions_Toasts_IToastImageClass__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl** unsafe___value__retval = default(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl**);
			global::NotificationsExtensions.Toasts.IToastImageClass __value__retval = default(global::NotificationsExtensions.Toasts.IToastImageClass);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::NotificationsExtensions.Toasts.IToastImageClass)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::NotificationsExtensions.Toasts.IToastImageClass).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<NotificationsExtensions.Toasts.IToastImageClass>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastImageClass__NotificationsExtensions_Toasts__IToastImageClass *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_NotificationsExtensions_Toasts_IToastImageClass__out_uint__bool__(
					global::System.__ComObject __this, 
					global::NotificationsExtensions.Toasts.IToastImageClass value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl** unsafe_value = default(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::NotificationsExtensions.Toasts.IToastImageClass).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<NotificationsExtensions.Toasts.IToastImageClass>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Toasts_IToastImageClass__NotificationsExtensions_Toasts__IToastImageClass * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_NotificationsExtensions_Toasts_IToastImageClass__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::NotificationsExtensions.Toasts.IToastImageClass[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl*** unsafe_items = default(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::NotificationsExtensions.Toasts.IToastImageClass__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastImageClass__NotificationsExtensions_Toasts__IToastImageClass * items
						items[mcgIdx] = (global::NotificationsExtensions.Toasts.IToastImageClass)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::NotificationsExtensions.Toasts.IToastImageClass).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] NotificationsExtensions_Toasts_IToastImageClass__NotificationsExtensions_Toasts__IToastImageClass * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.System.Threading.IThreadPoolStatics.RunAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_System_Threading_WorkItemHandler__Windows_System_Threading__WorkItemHandler *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_System_Threading_WorkItemPriority__Windows_System_Threading__WorkItemPriority, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_System_Threading_WorkItemOptions__Windows_System_Threading__WorkItemOptions, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncAction__Windows_Foundation__IAsyncAction *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncAction Func_Threading_WorkItemHandler__intThreading_WorkItemOptions___IAsyncAction__(
					global::System.__ComObject __this, 
					global::Windows.System.Threading.WorkItemHandler handler, 
					int priority, 
					global::Windows.System.Threading.WorkItemOptions options, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.WorkItemHandler__Impl.Vtbl** unsafe_handler = default(global::Windows.System.Threading.WorkItemHandler__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction__Impl.Vtbl** unsafe_operation__retval = default(global::Windows.Foundation.IAsyncAction__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncAction operation__retval = default(global::Windows.Foundation.IAsyncAction);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.System.Threading.WorkItemHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.System.Threading.WorkItemHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget89>(global::Windows.System.Threading.WorkItemHandler__Impl.Invoke)
								);
				unsafe_operation__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									priority, 
									options, 
									&(unsafe_operation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				operation__retval = (global::Windows.Foundation.IAsyncAction)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_operation__retval), 
									typeof(global::Windows.Foundation.IAsyncAction).TypeHandle
								);
				// Return
				return operation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_operation__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceManagerStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceManager__Windows_ApplicationModel_Resources_Core__ResourceManager *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.ResourceManager Func_ApplicationModel_Resources_Core_ResourceManager__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Resources.Core.IResourceManager__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.Resources.Core.IResourceManager__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.ResourceManager value__retval = default(global::Windows.ApplicationModel.Resources.Core.ResourceManager);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.Resources.Core.ResourceManager)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceManager).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Resources.Core.ResourceManager).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Resources.Core.IResourceManager.get_MainResourceMap, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Resources_Core_ResourceMap__Windows_ApplicationModel_Resources_Core__ResourceMap *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Resources.Core.ResourceMap Func_ApplicationModel_Resources_Core_ResourceMap__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Vtbl**);
			global::Windows.ApplicationModel.Resources.Core.ResourceMap value__retval = default(global::Windows.ApplicationModel.Resources.Core.ResourceMap);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.Resources.Core.ResourceMap)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceMap).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Resources.Core.ResourceMap).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Security.Cryptography.ICryptographicBufferStatics.CreateFromByteArray, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.IBuffer Func_rg_byte__Storage_Streams_IBuffer__(
					global::System.__ComObject __this, 
					byte[] value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_value_mcgLength = 0;
			byte* unsafe_value;
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer__retval = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer buffer__retval = default(global::Windows.Storage.Streams.IBuffer);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (value != null)
					unsafe_value_mcgLength = (uint)value.Length;
				fixed (byte* pinned_value = global::McgInterop.McgCoreHelpers.GetArrayForCompat(value))
				{
					unsafe_value = (byte*)pinned_value;
					unsafe_buffer__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_value_mcgLength, 
										unsafe_value, 
										&(unsafe_buffer__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					buffer__retval = (global::Windows.Storage.Streams.IBuffer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_buffer__retval), 
										typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
									);
				}
				// Return
				return buffer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer__retval)));
			}
		}

		// Signature, Windows.Security.Cryptography.ICryptographicBufferStatics.CopyToByteArray, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Storage_Streams_IBuffer__out_rg_byte__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer buffer, 
					out byte[] value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			byte* unsafe_value = default(byte*);
			uint unsafe_value_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_buffer = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									buffer, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_value = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_buffer, 
									&(unsafe_value_mcgLength), 
									&(unsafe_value)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value == null)
					value = null;
				else
				{
					value = new byte[unsafe_value_mcgLength];
					if (value != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe_value_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [managedbyref] [nativebyref] [optional] [Mcg.CodeGen.BlittableValueMarshaller] byte__unsigned char value
							value[mcgIdx] = unsafe_value[mcgIdx];
						}
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer)));
				global::System.GC.KeepAlive(buffer);
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_value);
			}
		}

		// Signature, Windows.Security.Cryptography.ICryptographicBufferStatics.EncodeToHexString, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_Storage_Streams_IBuffer__string__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer buffer, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::System.Runtime.InteropServices.HSTRING unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_buffer = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									buffer, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_buffer, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value__retval);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer)));
				global::System.GC.KeepAlive(buffer);
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_value__retval.handle);
			}
		}

		// Signature, Windows.Security.Cryptography.ICryptographicBufferStatics.ConvertStringToBinary, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Security_Cryptography_BinaryStringEncoding__Windows_Security_Cryptography__BinaryStringEncoding, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.IBuffer Func_string__intStorage_Streams_IBuffer__(
					global::System.__ComObject __this, 
					string value, 
					int encoding, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_buffer__retval = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer buffer__retval = default(global::Windows.Storage.Streams.IBuffer);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_value = value)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
					unsafe_buffer__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_value, 
										encoding, 
										&(unsafe_buffer__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					buffer__retval = (global::Windows.Storage.Streams.IBuffer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_buffer__retval), 
										typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
									);
				}
				// Return
				return buffer__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_buffer__retval)));
			}
		}

		// Signature, Windows.Security.Cryptography.Core.IHashAlgorithmProviderStatics.OpenAlgorithm, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Core_HashAlgorithmProvider__Windows_Security_Cryptography_Core__HashAlgorithmProvider *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Core.HashAlgorithmProvider Func_string__Security_Cryptography_Core_HashAlgorithmProvider__(
					global::System.__ComObject __this, 
					string algorithm, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_algorithm = default(global::System.Runtime.InteropServices.HSTRING);
			global::Windows.Security.Cryptography.Core.IHashAlgorithmProvider__Impl.Vtbl** unsafe_provider__retval = default(global::Windows.Security.Cryptography.Core.IHashAlgorithmProvider__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Core.HashAlgorithmProvider provider__retval = default(global::Windows.Security.Cryptography.Core.HashAlgorithmProvider);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_algorithm = algorithm)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_algorithm;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_algorithm, algorithm, &(hstring_header_algorithm), &(unsafe_algorithm));
					unsafe_provider__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_algorithm, 
										&(unsafe_provider__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					provider__retval = (global::Windows.Security.Cryptography.Core.HashAlgorithmProvider)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_provider__retval), 
										typeof(global::Windows.Security.Cryptography.Core.IHashAlgorithmProvider).TypeHandle, 
										typeof(global::Windows.Security.Cryptography.Core.HashAlgorithmProvider).TypeHandle
									);
				}
				// Return
				return provider__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_provider__retval)));
			}
		}

		// Signature, Windows.Security.Cryptography.Core.IHashAlgorithmProvider.HashData, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.IBuffer Func_Storage_Streams_IBuffer__Storage_Streams_IBuffer__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer data, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_data = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer value__retval = default(global::Windows.Storage.Streams.IBuffer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_data = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									data, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_data, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Storage.Streams.IBuffer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_data)));
				global::System.GC.KeepAlive(data);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.IPackageStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_Package__Windows_ApplicationModel__Package *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Package Func_ApplicationModel_Package__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.IPackage__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.IPackage__Impl.Vtbl**);
			global::Windows.ApplicationModel.Package value__retval = default(global::Windows.ApplicationModel.Package);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.Package)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.IPackage).TypeHandle, 
									typeof(global::Windows.ApplicationModel.Package).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.IPackage.get_Id, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_PackageId__Windows_ApplicationModel__PackageId *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.PackageId Func_ApplicationModel_PackageId__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.IPackageId__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.IPackageId__Impl.Vtbl**);
			global::Windows.ApplicationModel.PackageId value__retval = default(global::Windows.ApplicationModel.PackageId);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.PackageId)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.IPackageId).TypeHandle, 
									typeof(global::Windows.ApplicationModel.PackageId).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.IPackage.get_InstalledLocation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Storage_StorageFolder__Windows_Storage__StorageFolder *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.StorageFolder Func_Storage_StorageFolder__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.IStorageFolder__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Storage.IStorageFolder__Impl.Vtbl**);
			global::Windows.Storage.StorageFolder value__retval = default(global::Windows.Storage.StorageFolder);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Storage.StorageFolder)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Storage.IStorageFolder).TypeHandle, 
									typeof(global::Windows.Storage.StorageFolder).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.IPackageId.get_Version, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_ApplicationModel_PackageVersion__Windows_ApplicationModel__PackageVersion, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.PackageVersion Func_ApplicationModel_PackageVersion__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.PackageVersion unsafe_value__retval;
			global::Windows.ApplicationModel.PackageVersion value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.ApplicationModel.IPackage3.get_Status, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_PackageStatus__Windows_ApplicationModel__PackageStatus *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.PackageStatus Func_ApplicationModel_PackageStatus__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.IPackageStatus__Impl.Vtbl** unsafe_value__retval = default(global::Windows.ApplicationModel.IPackageStatus__Impl.Vtbl**);
			global::Windows.ApplicationModel.PackageStatus value__retval = default(global::Windows.ApplicationModel.PackageStatus);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.ApplicationModel.PackageStatus)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.ApplicationModel.IPackageStatus).TypeHandle, 
									typeof(global::Windows.ApplicationModel.PackageStatus).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics.TraceOperationCreation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalityTraceLevel__Windows_Foundation_Diagnostics__CausalityTraceLevel, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySource__Windows_Foundation_Diagnostics__CausalitySource, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_intintGuid__ulong__string__ulong__(
					global::System.__ComObject __this, 
					int traceLevel, 
					int source, 
					global::System.Guid platformId, 
					ulong operationId, 
					string operationName, 
					ulong relatedContext, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_operationName = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_operationName = operationName)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_operationName;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_operationName, operationName, &(hstring_header_operationName), &(unsafe_operationName));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									traceLevel, 
									source, 
									platformId, 
									operationId, 
									unsafe_operationName, 
									relatedContext
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics.TraceOperationCompletion, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalityTraceLevel__Windows_Foundation_Diagnostics__CausalityTraceLevel, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySource__Windows_Foundation_Diagnostics__CausalitySource, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_intintGuid__ulong__int(
					global::System.__ComObject __this, 
					int traceLevel, 
					int source, 
					global::System.Guid platformId, 
					ulong operationId, 
					int status, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								status
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics.TraceSynchronousWorkCompletion, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalityTraceLevel__Windows_Foundation_Diagnostics__CausalityTraceLevel, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySource__Windows_Foundation_Diagnostics__CausalitySource, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySynchronousWork__Windows_Foundation_Diagnostics__CausalitySynchronousWork, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_intintint(
					global::System.__ComObject __this, 
					int traceLevel, 
					int source, 
					int work, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								traceLevel, 
								source, 
								work
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics.add_TracingStatusChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs___Windows_Foundation__EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1__Diagnostics_TracingStatusChangedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_cookie__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken cookie__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget90>(global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_cookie__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				cookie__retval = unsafe_cookie__retval;
				// Return
				return cookie__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.IWindowStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Window__Windows_UI_Xaml__Window *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Window Func_UI_Xaml_Window__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IWindow__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.Xaml.IWindow__Impl.Vtbl**);
			global::Windows.UI.Xaml.Window value__retval = default(global::Windows.UI.Xaml.Window);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.Xaml.Window)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.Xaml.IWindow).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Window).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.WindowActivatedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_WindowActivatedEventArgs__Windows_UI_Core__WindowActivatedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Core_WindowActivatedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Core.WindowActivatedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Core.IWindowActivatedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Core.IWindowActivatedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Core.IWindowActivatedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Core.IWindowActivatedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IWindow.add_Activated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowActivatedEventHandler__Windows_UI_Xaml__WindowActivatedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_WindowActivatedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.WindowActivatedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.WindowActivatedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget91>(global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IWindow.add_Closed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowClosedEventHandler__Windows_UI_Xaml__WindowClosedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_WindowClosedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.WindowClosedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.WindowClosedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget92>(global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.WindowSizeChangedEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_WindowSizeChangedEventArgs__Windows_UI_Core__WindowSizeChangedEventArgs *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__UI_Core_WindowSizeChangedEventArgs__(
					global::System.__ComObject __this, 
					object sender, 
					global::Windows.UI.Core.WindowSizeChangedEventArgs e, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::Windows.UI.Core.IWindowSizeChangedEventArgs__Impl.Vtbl** unsafe_e = default(global::Windows.UI.Core.IWindowSizeChangedEventArgs__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_e = (global::Windows.UI.Core.IWindowSizeChangedEventArgs__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(global::Windows.UI.Core.IWindowSizeChangedEventArgs).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_e)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IWindow.add_SizeChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowSizeChangedEventHandler__Windows_UI_Xaml__WindowSizeChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_WindowSizeChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.WindowSizeChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.WindowSizeChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget93>(global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IWindow.add_VisibilityChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowVisibilityChangedEventHandler__Windows_UI_Xaml__WindowVisibilityChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_WindowVisibilityChangedEventHandler___WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget94>(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.ViewManagement.IApplicationViewStatics2.GetForCurrentView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_ViewManagement_ApplicationView__Windows_UI_ViewManagement__ApplicationView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.ViewManagement.ApplicationView Func_UI_ViewManagement_ApplicationView__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.ViewManagement.IApplicationView__Impl.Vtbl** unsafe_current__retval = default(global::Windows.UI.ViewManagement.IApplicationView__Impl.Vtbl**);
			global::Windows.UI.ViewManagement.ApplicationView current__retval = default(global::Windows.UI.ViewManagement.ApplicationView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_current__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_current__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				current__retval = (global::Windows.UI.ViewManagement.ApplicationView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_current__retval), 
									typeof(global::Windows.UI.ViewManagement.IApplicationView).TypeHandle, 
									typeof(global::Windows.UI.ViewManagement.ApplicationView).TypeHandle
								);
				// Return
				return current__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_current__retval)));
			}
		}

		// Signature, Windows.UI.ViewManagement.IApplicationView3.get_TitleBar, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_ViewManagement_ApplicationViewTitleBar__Windows_UI_ViewManagement__ApplicationViewTitleBar *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.ViewManagement.ApplicationViewTitleBar Func_UI_ViewManagement_ApplicationViewTitleBar__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.ViewManagement.IApplicationViewTitleBar__Impl.Vtbl** unsafe_value__retval = default(global::Windows.UI.ViewManagement.IApplicationViewTitleBar__Impl.Vtbl**);
			global::Windows.UI.ViewManagement.ApplicationViewTitleBar value__retval = default(global::Windows.UI.ViewManagement.ApplicationViewTitleBar);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.UI.ViewManagement.ApplicationViewTitleBar)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.UI.ViewManagement.IApplicationViewTitleBar).TypeHandle, 
									typeof(global::Windows.UI.ViewManagement.ApplicationViewTitleBar).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.ViewManagement.IApplicationViewTitleBar.put_ForegroundColor, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_Windows_UI_Color___Windows_Foundation__IReference_A_Windows_UI_Color_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Nullable_1_UI_Color___(
					global::System.__ComObject __this, 
					global::System.Nullable<global::Windows.UI.Color> value, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_Windows_UI_Color_V___Impl.Vtbl** unsafe_value = default(global::System.Nullable_A_Windows_UI_Color_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (value.HasValue)
				{
					global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<global::Windows.UI.Color> unsafe_value_Wrapper = new global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<global::Windows.UI.Color>(value.Value, 20);
					unsafe_value = (global::System.Nullable_A_Windows_UI_Color_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ManagedObjectToComInterface(
										unsafe_value_Wrapper, 
										typeof(global::Windows.Foundation.IReference<global::Windows.UI.Color>).TypeHandle
									);
				}
				else
					unsafe_value = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Core.ISystemNavigationManagerStatics.GetForCurrentView, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Core_SystemNavigationManager__Windows_UI_Core__SystemNavigationManager *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.SystemNavigationManager Func_UI_Core_SystemNavigationManager__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.ISystemNavigationManager__Impl.Vtbl** unsafe_loader__retval = default(global::Windows.UI.Core.ISystemNavigationManager__Impl.Vtbl**);
			global::Windows.UI.Core.SystemNavigationManager loader__retval = default(global::Windows.UI.Core.SystemNavigationManager);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_loader__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_loader__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				loader__retval = (global::Windows.UI.Core.SystemNavigationManager)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_loader__retval), 
									typeof(global::Windows.UI.Core.ISystemNavigationManager).TypeHandle, 
									typeof(global::Windows.UI.Core.SystemNavigationManager).TypeHandle
								);
				// Return
				return loader__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_loader__retval)));
			}
		}

		// Signature, Windows.UI.Core.ISystemNavigationManager.add_BackRequested, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_UI_Core_BackRequestedEventArgs___Windows_Foundation__EventHandler_A_Windows_UI_Core_BackRequestedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_UI_Core_BackRequestedEventArgs__WindowsRuntime_EventRegistrationToken__(
					global::System.__ComObject __this, 
					global::System.EventHandler<global::Windows.UI.Core.BackRequestedEventArgs> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_UI_Core_BackRequestedEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::System.EventHandler_A_Windows_UI_Core_BackRequestedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::System.EventHandler_A_Windows_UI_Core_BackRequestedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::System.EventHandler<global::Windows.UI.Core.BackRequestedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget95>(global::System.EventHandler_A_Windows_UI_Core_BackRequestedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStreamReferenceStatics.CreateFromUri, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Storage_Streams_RandomAccessStreamReference__Windows_Storage_Streams__RandomAccessStreamReference *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.RandomAccessStreamReference Func_Uri__Storage_Streams_RandomAccessStreamReference__(
					global::System.__ComObject __this, 
					global::System.Uri uri, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_uri = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			global::Windows.Storage.Streams.IRandomAccessStreamReference__Impl.Vtbl** unsafe_streamReference__retval = default(global::Windows.Storage.Streams.IRandomAccessStreamReference__Impl.Vtbl**);
			global::Windows.Storage.Streams.RandomAccessStreamReference streamReference__retval = default(global::Windows.Storage.Streams.RandomAccessStreamReference);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (uri != null)
					unsafe_uri = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(uri);
				else
					unsafe_uri = null;
				unsafe_streamReference__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_uri, 
									&(unsafe_streamReference__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				streamReference__retval = (global::Windows.Storage.Streams.RandomAccessStreamReference)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_streamReference__retval), 
									typeof(global::Windows.Storage.Streams.IRandomAccessStreamReference).TypeHandle, 
									typeof(global::Windows.Storage.Streams.RandomAccessStreamReference).TypeHandle
								);
				// Return
				return streamReference__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_uri)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_streamReference__retval)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Controls.Maps.IMapElement>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Controls_Maps_IMapElement___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Controls_Maps_IMapElement_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapElement> Func__Collections_IIterator_1_UI_Xaml_Controls_Maps_IMapElement___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_Maps_IMapElement_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_Maps_IMapElement_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapElement> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapElement>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapElement>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapElement>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.Maps.IMapElement>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapElement__Windows_UI_Xaml_Controls_Maps__IMapElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.IMapElement Func_UI_Xaml_Controls_Maps_IMapElement__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapElement __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.Maps.IMapElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.Maps.IMapElement>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_IMapElement__Windows_UI_Xaml_Controls_Maps__IMapElement * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Controls_Maps_IMapElement__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.IMapElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapElement__Windows_UI_Xaml_Controls_Maps__IMapElement * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.Maps.IMapElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapElement__Windows_UI_Xaml_Controls_Maps__IMapElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Controls.Maps.IMapElement2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Controls_Maps_IMapElement2___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Controls_Maps_IMapElement2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapElement2> Func__Collections_IIterator_1_UI_Xaml_Controls_Maps_IMapElement2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_Maps_IMapElement2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_Maps_IMapElement2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapElement2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapElement2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapElement2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapElement2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.Maps.IMapElement2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapElement2__Windows_UI_Xaml_Controls_Maps__IMapElement2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.IMapElement2 Func_UI_Xaml_Controls_Maps_IMapElement2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapElement2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement2__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapElement2 __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.Maps.IMapElement2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.Maps.IMapElement2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_IMapElement2__Windows_UI_Xaml_Controls_Maps__IMapElement2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Controls_Maps_IMapElement2__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.IMapElement2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapElement2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapElement2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapElement2__Windows_UI_Xaml_Controls_Maps__IMapElement2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.Maps.IMapElement2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapElement2__Windows_UI_Xaml_Controls_Maps__IMapElement2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Networking.Connectivity.IConnectionProfile.GetNetworkConnectivityLevel, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Networking_Connectivity_NetworkConnectivityLevel__Windows_Networking_Connectivity__NetworkConnectivityLevel, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.Connectivity.NetworkConnectivityLevel Func_Networking_Connectivity_NetworkConnectivityLevel__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.Connectivity.NetworkConnectivityLevel unsafe_value__retval;
			global::Windows.Networking.Connectivity.NetworkConnectivityLevel value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Networking.Connectivity.IConnectionProfile.get_NetworkAdapter, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_Connectivity_NetworkAdapter__Windows_Networking_Connectivity__NetworkAdapter *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.Connectivity.NetworkAdapter Func_Networking_Connectivity_NetworkAdapter__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.Connectivity.INetworkAdapter__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Networking.Connectivity.INetworkAdapter__Impl.Vtbl**);
			global::Windows.Networking.Connectivity.NetworkAdapter value__retval = default(global::Windows.Networking.Connectivity.NetworkAdapter);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Networking.Connectivity.NetworkAdapter)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Networking.Connectivity.INetworkAdapter).TypeHandle, 
									typeof(global::Windows.Networking.Connectivity.NetworkAdapter).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Networking.Connectivity.INetworkInformationStatics.GetInternetConnectionProfile, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_Connectivity_ConnectionProfile__Windows_Networking_Connectivity__ConnectionProfile *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.Connectivity.ConnectionProfile Func_Networking_Connectivity_ConnectionProfile__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.Connectivity.IConnectionProfile__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Networking.Connectivity.IConnectionProfile__Impl.Vtbl**);
			global::Windows.Networking.Connectivity.ConnectionProfile value__retval = default(global::Windows.Networking.Connectivity.ConnectionProfile);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Networking.Connectivity.ConnectionProfile)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Networking.Connectivity.IConnectionProfile).TypeHandle, 
									typeof(global::Windows.Networking.Connectivity.ConnectionProfile).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Networking.Connectivity.INetworkInformationStatics.GetHostNames, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_Networking_HostName___Windows_Foundation_Collections__IVectorView_A_Windows_Networking_HostName_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName> Func__IReadOnlyList_1_Networking_HostName___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_Networking_HostName_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_Networking_HostName_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName> value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Networking.IHostName.get_Type, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Networking_HostNameType__Windows_Networking__HostNameType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.HostNameType Func_Networking_HostNameType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.HostNameType unsafe_value__retval;
			global::Windows.Networking.HostNameType value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.HostName>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.HostName Func_uint__Networking_HostName__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			global::Windows.Networking.HostName __value__retval = default(global::Windows.Networking.HostName);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Networking.HostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Networking.IHostName).TypeHandle, 
									typeof(global::Windows.Networking.HostName).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.HostName>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Networking_HostName__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Networking.HostName value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe_value = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Networking.IHostName__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Networking.IHostName).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.HostName>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Networking_HostName__Windows_Networking__HostName * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Networking_HostName__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Networking.HostName[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Networking.IHostName__Impl.Vtbl*** unsafe_items = default(global::Windows.Networking.IHostName__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Networking.IHostName__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Networking.IHostName__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName * items
						items[mcgIdx] = (global::Windows.Networking.HostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Networking.IHostName).TypeHandle, 
											typeof(global::Windows.Networking.HostName).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Networking.HostName>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Networking_HostName___Windows_Foundation_Collections__IIterator_A_Windows_Networking_HostName_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.HostName> Func__Collections_IIterator_1_Networking_HostName___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Networking_HostName_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Networking_HostName_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.HostName> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.HostName>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.HostName>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.HostName>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Networking.HostName>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.HostName Func_Networking_HostName__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			global::Windows.Networking.HostName __value__retval = default(global::Windows.Networking.HostName);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Networking.HostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Networking.IHostName).TypeHandle, 
									typeof(global::Windows.Networking.HostName).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Networking.HostName>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Networking_HostName__Windows_Networking__HostName * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Networking_HostName__uint__(
					global::System.__ComObject __this, 
					global::Windows.Networking.HostName[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Networking.IHostName__Impl.Vtbl*** unsafe_items = default(global::Windows.Networking.IHostName__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Networking.IHostName__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Networking.IHostName__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName * items
						items[mcgIdx] = (global::Windows.Networking.HostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Networking.IHostName).TypeHandle, 
											typeof(global::Windows.Networking.HostName).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Networking_HostName__Windows_Networking__HostName * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.UI.Notifications.ITileUpdater.Update, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Notifications_TileNotification__Windows_UI_Notifications__TileNotification *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Notifications_TileNotification__(
					global::System.__ComObject __this, 
					global::Windows.UI.Notifications.TileNotification notification, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Notifications.ITileNotification__Impl.Vtbl** unsafe_notification = default(global::Windows.UI.Notifications.ITileNotification__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_notification = (global::Windows.UI.Notifications.ITileNotification__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									notification, 
									typeof(global::Windows.UI.Notifications.ITileNotification).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_notification
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_notification)));
				global::System.GC.KeepAlive(notification);
			}
		}

		// Signature, Windows.UI.Notifications.ITileUpdateManagerStatics.CreateTileUpdaterForApplication, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Notifications_TileUpdater__Windows_UI_Notifications__TileUpdater *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Notifications.TileUpdater Func_UI_Notifications_TileUpdater__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Notifications.ITileUpdater__Impl.Vtbl** unsafe_updater__retval = default(global::Windows.UI.Notifications.ITileUpdater__Impl.Vtbl**);
			global::Windows.UI.Notifications.TileUpdater updater__retval = default(global::Windows.UI.Notifications.TileUpdater);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_updater__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_updater__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				updater__retval = (global::Windows.UI.Notifications.TileUpdater)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_updater__retval), 
									typeof(global::Windows.UI.Notifications.ITileUpdater).TypeHandle, 
									typeof(global::Windows.UI.Notifications.TileUpdater).TypeHandle
								);
				// Return
				return updater__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_updater__retval)));
			}
		}

		// Signature, Windows.UI.Notifications.IToastNotifier.Show, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Notifications_ToastNotification__Windows_UI_Notifications__ToastNotification *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Notifications_ToastNotification__(
					global::System.__ComObject __this, 
					global::Windows.UI.Notifications.ToastNotification notification, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Notifications.IToastNotification__Impl.Vtbl** unsafe_notification = default(global::Windows.UI.Notifications.IToastNotification__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_notification = (global::Windows.UI.Notifications.IToastNotification__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									notification, 
									typeof(global::Windows.UI.Notifications.IToastNotification).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_notification
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_notification)));
				global::System.GC.KeepAlive(notification);
			}
		}

		// Signature, Windows.UI.Notifications.IToastNotificationManagerStatics.CreateToastNotifier, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Notifications_ToastNotifier__Windows_UI_Notifications__ToastNotifier *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Notifications.ToastNotifier Func_UI_Notifications_ToastNotifier__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Notifications.IToastNotifier__Impl.Vtbl** unsafe_notifier__retval = default(global::Windows.UI.Notifications.IToastNotifier__Impl.Vtbl**);
			global::Windows.UI.Notifications.ToastNotifier notifier__retval = default(global::Windows.UI.Notifications.ToastNotifier);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_notifier__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_notifier__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				notifier__retval = (global::Windows.UI.Notifications.ToastNotifier)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_notifier__retval), 
									typeof(global::Windows.UI.Notifications.IToastNotifier).TypeHandle, 
									typeof(global::Windows.UI.Notifications.ToastNotifier).TypeHandle
								);
				// Return
				return notifier__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_notifier__retval)));
			}
		}

		// Signature, Windows.Storage.IApplicationDataStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Storage_ApplicationData__Windows_Storage__ApplicationData *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.ApplicationData Func_Storage_ApplicationData__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.IApplicationData__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Storage.IApplicationData__Impl.Vtbl**);
			global::Windows.Storage.ApplicationData value__retval = default(global::Windows.Storage.ApplicationData);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Storage.ApplicationData)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Storage.IApplicationData).TypeHandle, 
									typeof(global::Windows.Storage.ApplicationData).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Storage.IApplicationData.get_LocalSettings, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Storage_ApplicationDataContainer__Windows_Storage__ApplicationDataContainer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.ApplicationDataContainer Func_Storage_ApplicationDataContainer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.IApplicationDataContainer__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Storage.IApplicationDataContainer__Impl.Vtbl**);
			global::Windows.Storage.ApplicationDataContainer value__retval = default(global::Windows.Storage.ApplicationDataContainer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Storage.ApplicationDataContainer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Storage.IApplicationDataContainer).TypeHandle, 
									typeof(global::Windows.Storage.ApplicationDataContainer).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.System.Profile.IHardwareToken.get_Id, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.IBuffer Func_Storage_Streams_IBuffer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_value__retval = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.Storage.Streams.IBuffer value__retval = default(global::Windows.Storage.Streams.IBuffer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Storage.Streams.IBuffer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.System.Profile.IHardwareIdentificationStatics.GetPackageSpecificToken, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IBuffer__Windows_Storage_Streams__IBuffer *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_System_Profile_HardwareToken__Windows_System_Profile__HardwareToken *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Profile.HardwareToken Func_Storage_Streams_IBuffer__Profile_HardwareToken__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IBuffer nonce, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IBuffer__Impl.Vtbl** unsafe_nonce = default(global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**);
			global::Windows.System.Profile.IHardwareToken__Impl.Vtbl** unsafe_packageSpecificHardwareToken__retval = default(global::Windows.System.Profile.IHardwareToken__Impl.Vtbl**);
			global::Windows.System.Profile.HardwareToken packageSpecificHardwareToken__retval = default(global::Windows.System.Profile.HardwareToken);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_nonce = (global::Windows.Storage.Streams.IBuffer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									nonce, 
									typeof(global::Windows.Storage.Streams.IBuffer).TypeHandle
								);
				unsafe_packageSpecificHardwareToken__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_nonce, 
									&(unsafe_packageSpecificHardwareToken__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				packageSpecificHardwareToken__retval = (global::Windows.System.Profile.HardwareToken)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_packageSpecificHardwareToken__retval), 
									typeof(global::Windows.System.Profile.IHardwareToken).TypeHandle, 
									typeof(global::Windows.System.Profile.HardwareToken).TypeHandle
								);
				// Return
				return packageSpecificHardwareToken__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_nonce)));
				global::System.GC.KeepAlive(nonce);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_packageSpecificHardwareToken__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Media.IVisualTreeHelperStatics.GetChild, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.DependencyObject Func_UI_Xaml_DependencyObject__int__UI_Xaml_DependencyObject__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject reference, 
					int childIndex, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_reference = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_child__retval = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			global::Windows.UI.Xaml.DependencyObject child__retval = default(global::Windows.UI.Xaml.DependencyObject);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_reference = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									reference, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				unsafe_child__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_reference, 
									childIndex, 
									&(unsafe_child__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				child__retval = (global::Windows.UI.Xaml.DependencyObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_child__retval), 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle, 
									typeof(global::Windows.UI.Xaml.DependencyObject).TypeHandle
								);
				// Return
				return child__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_reference)));
				global::System.GC.KeepAlive(reference);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_child__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Media.IVisualTreeHelperStatics.GetChildrenCount, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_DependencyObject__Windows_UI_Xaml__DependencyObject *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_UI_Xaml_DependencyObject__int__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DependencyObject reference, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl** unsafe_reference = default(global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**);
			int unsafe_count__retval;
			int count__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_reference = (global::Windows.UI.Xaml.IDependencyObject__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									reference, 
									typeof(global::Windows.UI.Xaml.IDependencyObject).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_reference, 
									&(unsafe_count__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				count__retval = unsafe_count__retval;
				// Return
				return count__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_reference)));
				global::System.GC.KeepAlive(reference);
			}
		}

		// Signature, Windows.System.ILauncherStatics.LaunchUriAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_bool___Windows_Foundation__IAsyncOperation_A_bool_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<bool> Func_Uri___IAsyncOperation_1_bool___(
					global::System.__ComObject __this, 
					global::System.Uri uri, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_uri = default(global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_bool_V___Impl.Vtbl** unsafe_operation__retval = default(global::Windows.Foundation.IAsyncOperation_A_bool_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<bool> operation__retval = default(global::Windows.Foundation.IAsyncOperation<bool>);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (uri != null)
					unsafe_uri = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(uri);
				else
					unsafe_uri = null;
				unsafe_operation__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_uri, 
									&(unsafe_operation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				operation__retval = (global::Windows.Foundation.IAsyncOperation<bool>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_operation__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<bool>).TypeHandle
								);
				// Return
				return operation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_uri)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_operation__retval)));
			}
		}

		// Signature, Windows.Services.Maps.IMapRouteFinderStatics.GetDrivingRouteAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_Geopoint__Windows_Devices_Geolocation__Geopoint *, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Devices_Geolocation_Geopoint__Windows_Devices_Geolocation__Geopoint *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_Services_Maps_MapRouteFinderResult___Windows_Foundation__IAsyncOperation_A_Windows_Services_Maps_MapRouteFinderResult_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Windows.Services.Maps.MapRouteFinderResult> Func_Devices_Geolocation_Geopoint__Devices_Geolocation_Geopoint___IAsyncOperation_1_Services_Maps_MapRouteFinderResult___(
					global::System.__ComObject __this, 
					global::Windows.Devices.Geolocation.Geopoint startPoint, 
					global::Windows.Devices.Geolocation.Geopoint endPoint, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl** unsafe_startPoint = default(global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**);
			global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl** unsafe_endPoint = default(global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_Windows_Services_Maps_MapRouteFinderResult_V___Impl.Vtbl** unsafe_result__retval = default(global::Windows.Foundation.IAsyncOperation_A_Windows_Services_Maps_MapRouteFinderResult_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Windows.Services.Maps.MapRouteFinderResult> result__retval = default(global::Windows.Foundation.IAsyncOperation<global::Windows.Services.Maps.MapRouteFinderResult>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_startPoint = (global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									startPoint, 
									typeof(global::Windows.Devices.Geolocation.IGeopoint).TypeHandle
								);
				unsafe_endPoint = (global::Windows.Devices.Geolocation.IGeopoint__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									endPoint, 
									typeof(global::Windows.Devices.Geolocation.IGeopoint).TypeHandle
								);
				unsafe_result__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_startPoint, 
									unsafe_endPoint, 
									&(unsafe_result__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				result__retval = (global::Windows.Foundation.IAsyncOperation<global::Windows.Services.Maps.MapRouteFinderResult>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_result__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.Services.Maps.MapRouteFinderResult>).TypeHandle
								);
				// Return
				return result__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_startPoint)));
				global::System.GC.KeepAlive(startPoint);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_endPoint)));
				global::System.GC.KeepAlive(endPoint);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_result__retval)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Controls.Maps.IMapRouteView>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Controls_Maps_IMapRouteView___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Controls_Maps_IMapRouteView_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapRouteView> Func__Collections_IIterator_1_UI_Xaml_Controls_Maps_IMapRouteView___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_Maps_IMapRouteView_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_Maps_IMapRouteView_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapRouteView> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapRouteView>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapRouteView>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapRouteView>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.Maps.IMapRouteView>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapRouteView__Windows_UI_Xaml_Controls_Maps__IMapRouteView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.IMapRouteView Func_UI_Xaml_Controls_Maps_IMapRouteView__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapRouteView __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.Maps.IMapRouteView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.Maps.IMapRouteView>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_IMapRouteView__Windows_UI_Xaml_Controls_Maps__IMapRouteView * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Controls_Maps_IMapRouteView__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.IMapRouteView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapRouteView__Windows_UI_Xaml_Controls_Maps__IMapRouteView * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.Maps.IMapRouteView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapRouteView__Windows_UI_Xaml_Controls_Maps__IMapRouteView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.ApplicationModel.Background.IBackgroundExecutionManagerStatics.RequestAccessAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_Windows_ApplicationModel_Background_BackgroundAccessStatus___Windows_Foundation__IAsyncOperation_A_Windows_ApplicationModel_Background_BackgroundAccessStatus_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Background.BackgroundAccessStatus> Func__IAsyncOperation_1_ApplicationModel_Background_BackgroundAccessStatus___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_Windows_ApplicationModel_Background_BackgroundAccessStatus_V___Impl.Vtbl** unsafe_operation__retval = default(global::Windows.Foundation.IAsyncOperation_A_Windows_ApplicationModel_Background_BackgroundAccessStatus_V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Background.BackgroundAccessStatus> operation__retval = default(global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Background.BackgroundAccessStatus>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_operation__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_operation__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				operation__retval = (global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Background.BackgroundAccessStatus>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_operation__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Background.BackgroundAccessStatus>).TypeHandle
								);
				// Return
				return operation__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_operation__retval)));
			}
		}

		// Signature, Windows.ApplicationModel.Background.IBackgroundWorkCostStatics.get_CurrentBackgroundWorkCost, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_ApplicationModel_Background_BackgroundWorkCostValue__Windows_ApplicationModel_Background__BackgroundWorkCostValue, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Background.BackgroundWorkCostValue Func_ApplicationModel_Background_BackgroundWorkCostValue__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Background.BackgroundWorkCostValue unsafe_value__retval;
			global::Windows.ApplicationModel.Background.BackgroundWorkCostValue value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.Maps.IMapElement>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapElement__Windows_UI_Xaml_Controls_Maps__IMapElement *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.IMapElement Func_uint__UI_Xaml_Controls_Maps_IMapElement__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapElement __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.Maps.IMapElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.Maps.IMapElement>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapElement__Windows_UI_Xaml_Controls_Maps__IMapElement *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Controls_Maps_IMapElement__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.IMapElement value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.Maps.IMapElement>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_IMapElement__Windows_UI_Xaml_Controls_Maps__IMapElement * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Controls_Maps_IMapElement__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Controls.Maps.IMapElement[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapElement__Windows_UI_Xaml_Controls_Maps__IMapElement * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.Maps.IMapElement)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapElement__Windows_UI_Xaml_Controls_Maps__IMapElement * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.Maps.IMapElement2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapElement2__Windows_UI_Xaml_Controls_Maps__IMapElement2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.IMapElement2 Func_uint__UI_Xaml_Controls_Maps_IMapElement2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapElement2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement2__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapElement2 __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.Maps.IMapElement2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.Maps.IMapElement2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapElement2__Windows_UI_Xaml_Controls_Maps__IMapElement2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Controls_Maps_IMapElement2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.IMapElement2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapElement2__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.Maps.IMapElement2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.Maps.IMapElement2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_IMapElement2__Windows_UI_Xaml_Controls_Maps__IMapElement2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Controls_Maps_IMapElement2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Controls.Maps.IMapElement2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapElement2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapElement2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapElement2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapElement2__Windows_UI_Xaml_Controls_Maps__IMapElement2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.Maps.IMapElement2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.Maps.IMapElement2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapElement2__Windows_UI_Xaml_Controls_Maps__IMapElement2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.Maps.IMapRouteView>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapRouteView__Windows_UI_Xaml_Controls_Maps__IMapRouteView *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.IMapRouteView Func_uint__UI_Xaml_Controls_Maps_IMapRouteView__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapRouteView __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.Maps.IMapRouteView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.Maps.IMapRouteView>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapRouteView__Windows_UI_Xaml_Controls_Maps__IMapRouteView *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Controls_Maps_IMapRouteView__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.IMapRouteView value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.Maps.IMapRouteView>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_IMapRouteView__Windows_UI_Xaml_Controls_Maps__IMapRouteView * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Controls_Maps_IMapRouteView__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Controls.Maps.IMapRouteView[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapRouteView__Windows_UI_Xaml_Controls_Maps__IMapRouteView * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.Maps.IMapRouteView)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.Maps.IMapRouteView).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapRouteView__Windows_UI_Xaml_Controls_Maps__IMapRouteView * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Core.CoreWindow,Windows.UI.Core.WindowSizeChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Core_CoreWindow__Windows_UI_Core_WindowSizeChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Core_CoreWindow_j_Windows_UI_Core_WindowSizeChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Core.CoreWindow, global::Windows.UI.Core.WindowSizeChangedEventArgs> Func__TypedEventHandler_2_UI_Core_CoreWindow__UI_Core_WindowSizeChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Core_CoreWindow_j_Windows_UI_Core_WindowSizeChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Core_CoreWindow_j_Windows_UI_Core_WindowSizeChangedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Core.CoreWindow, global::Windows.UI.Core.WindowSizeChangedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Core.CoreWindow, global::Windows.UI.Core.WindowSizeChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Core.CoreWindow, global::Windows.UI.Core.WindowSizeChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Core.CoreWindow, global::Windows.UI.Core.WindowSizeChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget64>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Core_CoreWindow_j_Windows_UI_Core_WindowSizeChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.WindowClosedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowClosedEventHandler__Windows_UI_Xaml__WindowClosedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.WindowClosedEventHandler Func_UI_Xaml_WindowClosedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.WindowClosedEventHandler __value__retval = default(global::Windows.UI.Xaml.WindowClosedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.WindowClosedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.WindowClosedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget92>(global::Windows.UI.Xaml.WindowClosedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.ApplicationInitializationCallback>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_ApplicationInitializationCallback__Windows_UI_Xaml__ApplicationInitializationCallback *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ApplicationInitializationCallback Func_UI_Xaml_ApplicationInitializationCallback__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Vtbl**);
			global::Windows.UI.Xaml.ApplicationInitializationCallback __value__retval = default(global::Windows.UI.Xaml.ApplicationInitializationCallback);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.ApplicationInitializationCallback)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.ApplicationInitializationCallback).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget0>(global::Windows.UI.Xaml.ApplicationInitializationCallback__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Core.DispatchedHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Core_DispatchedHandler__Windows_UI_Core__DispatchedHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.DispatchedHandler Func_UI_Core_DispatchedHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Core.DispatchedHandler__Impl.Vtbl**);
			global::Windows.UI.Core.DispatchedHandler __value__retval = default(global::Windows.UI.Core.DispatchedHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Core.DispatchedHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Core.DispatchedHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget4>(global::Windows.UI.Core.DispatchedHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.System.Threading.WorkItemHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_System_Threading_WorkItemHandler__Windows_System_Threading__WorkItemHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Threading.WorkItemHandler Func_Threading_WorkItemHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.WorkItemHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.System.Threading.WorkItemHandler__Impl.Vtbl**);
			global::Windows.System.Threading.WorkItemHandler __value__retval = default(global::Windows.System.Threading.WorkItemHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.System.Threading.WorkItemHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.System.Threading.WorkItemHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget89>(global::Windows.System.Threading.WorkItemHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.Collections.MapChangedEventHandler<string,string>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_Collections_MapChangedEventHandler_2_string__string___Windows_Foundation_Collections__MapChangedEventHandler_A_string_j_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.MapChangedEventHandler<string, string> Func__Collections_MapChangedEventHandler_2_string__string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.MapChangedEventHandler<string, string> __value__retval = default(global::Windows.Foundation.Collections.MapChangedEventHandler<string, string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.MapChangedEventHandler<string, string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.MapChangedEventHandler<string, string>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget80>(global::Windows.Foundation.Collections.MapChangedEventHandler_A_string_j_string_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.System.Threading.TimerElapsedHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_System_Threading_TimerElapsedHandler__Windows_System_Threading__TimerElapsedHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Threading.TimerElapsedHandler Func_Threading_TimerElapsedHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.TimerElapsedHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.System.Threading.TimerElapsedHandler__Impl.Vtbl**);
			global::Windows.System.Threading.TimerElapsedHandler __value__retval = default(global::Windows.System.Threading.TimerElapsedHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.System.Threading.TimerElapsedHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.System.Threading.TimerElapsedHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget81>(global::Windows.System.Threading.TimerElapsedHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs___Windows_Foundation__EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> Func_EventHandler_1__Diagnostics_TracingStatusChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> __value__retval = default(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget90>(global::System.EventHandler_A_Windows_Foundation_Diagnostics_TracingStatusChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.WindowVisibilityChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowVisibilityChangedEventHandler__Windows_UI_Xaml__WindowVisibilityChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler Func_UI_Xaml_WindowVisibilityChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget94>(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<System.EventHandler<Windows.UI.Core.BackRequestedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_Windows_UI_Core_BackRequestedEventArgs___Windows_Foundation__EventHandler_A_Windows_UI_Core_BackRequestedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.EventHandler<global::Windows.UI.Core.BackRequestedEventArgs> Func_EventHandler_1_UI_Core_BackRequestedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_Windows_UI_Core_BackRequestedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::System.EventHandler_A_Windows_UI_Core_BackRequestedEventArgs_V___Impl.Vtbl**);
			global::System.EventHandler<global::Windows.UI.Core.BackRequestedEventArgs> __value__retval = default(global::System.EventHandler<global::Windows.UI.Core.BackRequestedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.EventHandler<global::Windows.UI.Core.BackRequestedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.EventHandler<global::Windows.UI.Core.BackRequestedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget95>(global::System.EventHandler_A_Windows_UI_Core_BackRequestedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.KeyValuePair<string,byte>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] byte__unsigned char, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static byte Func_byte__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			byte unsafe___value__retval;
			byte __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.Networking.Sockets.IWebSocket,Windows.Networking.Sockets.WebSocketClosedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_Networking_Sockets_IWebSocket__Windows_Networking_Sockets_WebSocketClosedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_Networking_Sockets_IWebSocket_j_Windows_Networking_Sockets_WebSocketClosedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.Networking.Sockets.IWebSocket, global::Windows.Networking.Sockets.WebSocketClosedEventArgs> Func__TypedEventHandler_2_Networking_Sockets_IWebSocket__Networking_Sockets_WebSocketClosedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_Networking_Sockets_IWebSocket_j_Windows_Networking_Sockets_WebSocketClosedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_Networking_Sockets_IWebSocket_j_Windows_Networking_Sockets_WebSocketClosedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.Networking.Sockets.IWebSocket, global::Windows.Networking.Sockets.WebSocketClosedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.Networking.Sockets.IWebSocket, global::Windows.Networking.Sockets.WebSocketClosedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.Networking.Sockets.IWebSocket, global::Windows.Networking.Sockets.WebSocketClosedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.Networking.Sockets.IWebSocket, global::Windows.Networking.Sockets.WebSocketClosedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget77>(global::Windows.Foundation.TypedEventHandler_A_Windows_Networking_Sockets_IWebSocket_j_Windows_Networking_Sockets_WebSocketClosedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.Networking.Sockets.MessageWebSocket,Windows.Networking.Sockets.MessageWebSocketMessageReceivedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_Networking_Sockets_MessageWebSocket__Windows_Networking_Sockets_MessageWebSocketMessageReceivedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_Networking_Sockets_MessageWebSocket_j_Windows_Networking_Sockets_MessageWebSocketMessageReceivedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.Networking.Sockets.MessageWebSocket, global::Windows.Networking.Sockets.MessageWebSocketMessageReceivedEventArgs> Func__TypedEventHandler_2_Networking_Sockets_MessageWebSocket__Networking_Sockets_MessageWebSocketMessageReceivedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_Networking_Sockets_MessageWebSocket_j_Windows_Networking_Sockets_MessageWebSocketMessageReceivedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_Networking_Sockets_MessageWebSocket_j_Windows_Networking_Sockets_MessageWebSocketMessageReceivedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.Networking.Sockets.MessageWebSocket, global::Windows.Networking.Sockets.MessageWebSocketMessageReceivedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.Networking.Sockets.MessageWebSocket, global::Windows.Networking.Sockets.MessageWebSocketMessageReceivedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.Networking.Sockets.MessageWebSocket, global::Windows.Networking.Sockets.MessageWebSocketMessageReceivedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.Networking.Sockets.MessageWebSocket, global::Windows.Networking.Sockets.MessageWebSocketMessageReceivedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget76>(global::Windows.Foundation.TypedEventHandler_A_Windows_Networking_Sockets_MessageWebSocket_j_Windows_Networking_Sockets_MessageWebSocketMessageReceivedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Popups.UICommandInvokedHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Popups_UICommandInvokedHandler__Windows_UI_Popups__UICommandInvokedHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Popups.UICommandInvokedHandler Func_UI_Popups_UICommandInvokedHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Popups.UICommandInvokedHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Popups.UICommandInvokedHandler__Impl.Vtbl**);
			global::Windows.UI.Popups.UICommandInvokedHandler __value__retval = default(global::Windows.UI.Popups.UICommandInvokedHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Popups.UICommandInvokedHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Popups.UICommandInvokedHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget82>(global::Windows.UI.Popups.UICommandInvokedHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.Devices.Geolocation.Geolocator,Windows.Devices.Geolocation.StatusChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_Devices_Geolocation_Geolocator__Windows_Devices_Geolocation_StatusChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_StatusChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Geolocation.Geolocator, global::Windows.Devices.Geolocation.StatusChangedEventArgs> Func__TypedEventHandler_2_Devices_Geolocation_Geolocator__Devices_Geolocation_StatusChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_StatusChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_StatusChangedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Geolocation.Geolocator, global::Windows.Devices.Geolocation.StatusChangedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Geolocation.Geolocator, global::Windows.Devices.Geolocation.StatusChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Geolocation.Geolocator, global::Windows.Devices.Geolocation.StatusChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Geolocation.Geolocator, global::Windows.Devices.Geolocation.StatusChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget68>(global::Windows.Foundation.TypedEventHandler_A_Windows_Devices_Geolocation_Geolocator_j_Windows_Devices_Geolocation_StatusChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<string,double>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__double___Windows_Foundation_Collections__IKeyValuePair_A_string_j_double_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, double>[] Func_rg__KeyValuePair_2_string__double___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_double_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_double_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<string, double>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, double>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<string, double>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__double___Windows_Foundation_Collections__IKeyValuePair_A_string_j_double_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<string, double> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, double>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, double>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, double>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__double___Windows_Foundation_Collections__IKeyValuePair_A_string_j_double_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.ApplicationModel.Core.CoreApplicationView,Windows.ApplicationModel.Activation.IActivatedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_ApplicationModel_Core_CoreApplicationView__Windows_ApplicationModel_Activation_IActivatedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs> Func__TypedEventHandler_2_ApplicationModel_Core_CoreApplicationView__ApplicationModel_Activation_IActivatedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget63>(global::Windows.Foundation.TypedEventHandler_A_Windows_ApplicationModel_Core_CoreApplicationView_j_Windows_ApplicationModel_Activation_IActivatedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.AsyncOperationCompletedHandler<Windows.UI.Popups.IUICommand>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_UI_Popups_IUICommand___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Popups.IUICommand> Func__AsyncOperationCompletedHandler_1_UI_Popups_IUICommand___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Popups.IUICommand> __value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Popups.IUICommand>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Popups.IUICommand>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Popups.IUICommand>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget78>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Popups_IUICommand_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.AsyncOperationCompletedHandler<Windows.UI.Xaml.Controls.ContentDialogResult>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_UI_Xaml_Controls_ContentDialogResult___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_UI_Xaml_Controls_ContentDialogResult_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Xaml.Controls.ContentDialogResult> Func__AsyncOperationCompletedHandler_1_UI_Xaml_Controls_ContentDialogResult___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Xaml_Controls_ContentDialogResult_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Xaml_Controls_ContentDialogResult_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Xaml.Controls.ContentDialogResult> __value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Xaml.Controls.ContentDialogResult>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Xaml.Controls.ContentDialogResult>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.UI.Xaml.Controls.ContentDialogResult>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget75>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_UI_Xaml_Controls_ContentDialogResult_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.AsyncOperationCompletedHandler<Windows.Services.Maps.MapRouteFinderResult>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Services_Maps_MapRouteFinderResult___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Services_Maps_MapRouteFinderResult_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Services.Maps.MapRouteFinderResult> Func__AsyncOperationCompletedHandler_1_Services_Maps_MapRouteFinderResult___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Services_Maps_MapRouteFinderResult_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Services_Maps_MapRouteFinderResult_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Services.Maps.MapRouteFinderResult> __value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Services.Maps.MapRouteFinderResult>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Services.Maps.MapRouteFinderResult>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Services.Maps.MapRouteFinderResult>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget83>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Services_Maps_MapRouteFinderResult_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_ApplicationModel_Background_BackgroundTaskCompletedEventHandler__Windows_ApplicationModel_Background__BackgroundTaskCompletedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler Func_ApplicationModel_Background_BackgroundTaskCompletedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler__Impl.Vtbl**);
			global::Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler __value__retval = default(global::Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget70>(global::Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.AsyncOperationCompletedHandler<Windows.ApplicationModel.Background.BackgroundAccessStatus>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_ApplicationModel_Background_BackgroundAccessStatus___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_ApplicationModel_Background_BackgroundAccessStatus_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.ApplicationModel.Background.BackgroundAccessStatus> Func__AsyncOperationCompletedHandler_1_ApplicationModel_Background_BackgroundAccessStatus___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_ApplicationModel_Background_BackgroundAccessStatus_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_ApplicationModel_Background_BackgroundAccessStatus_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.ApplicationModel.Background.BackgroundAccessStatus> __value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.ApplicationModel.Background.BackgroundAccessStatus>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.ApplicationModel.Background.BackgroundAccessStatus>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.ApplicationModel.Background.BackgroundAccessStatus>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget84>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_ApplicationModel_Background_BackgroundAccessStatus_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.AsyncOperationCompletedHandler<Windows.Devices.Geolocation.GeolocationAccessStatus>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Devices_Geolocation_GeolocationAccessStatus___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_GeolocationAccessStatus_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Geolocation.GeolocationAccessStatus> Func__AsyncOperationCompletedHandler_1_Devices_Geolocation_GeolocationAccessStatus___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_GeolocationAccessStatus_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_GeolocationAccessStatus_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Geolocation.GeolocationAccessStatus> __value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Geolocation.GeolocationAccessStatus>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Geolocation.GeolocationAccessStatus>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Geolocation.GeolocationAccessStatus>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget66>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_GeolocationAccessStatus_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.AsyncOperationCompletedHandler<Windows.Devices.Geolocation.Geoposition>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Devices_Geolocation_Geoposition___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_Geoposition_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Geolocation.Geoposition> Func__AsyncOperationCompletedHandler_1_Devices_Geolocation_Geoposition___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_Geoposition_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_Geoposition_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Geolocation.Geoposition> __value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Geolocation.Geoposition>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Geolocation.Geoposition>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Geolocation.Geoposition>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget69>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Geolocation_Geoposition_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Foundation.AsyncOperationCompletedHandler<Windows.Devices.Enumeration.Pnp.PnpObjectCollection>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Devices_Enumeration_Pnp_PnpObjectCollection___Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> Func__AsyncOperationCompletedHandler_1_Devices_Enumeration_Pnp_PnpObjectCollection___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> __value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget79>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_Windows_Devices_Enumeration_Pnp_PnpObjectCollection_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<NotificationsExtensions.Badges.GlyphValue>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_NotificationsExtensions_Badges_GlyphValue__NotificationsExtensions_Badges__GlyphValue *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::NotificationsExtensions.Badges.GlyphValue[] Func_rg_NotificationsExtensions_Badges_GlyphValue__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::NotificationsExtensions.Badges.GlyphValue* unsafe___value__retval = default(global::NotificationsExtensions.Badges.GlyphValue*);
			global::NotificationsExtensions.Badges.GlyphValue[] __value__retval = default(global::NotificationsExtensions.Badges.GlyphValue[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::NotificationsExtensions.Badges.GlyphValue[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Badges_GlyphValue__NotificationsExtensions_Badges__GlyphValue __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeer___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer Func_UI_Xaml_Automation_Peers_IAutomationPeer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeer__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerOverrides___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerProtected___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected Func_UI_Xaml_Automation_Peers_IAutomationPeerProtected__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerProtected__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeer2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2 Func_UI_Xaml_Automation_Peers_IAutomationPeer2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeer2__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2 Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeer3___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3 Func_UI_Xaml_Automation_Peers_IAutomationPeer3__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeer3__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3 Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeer4___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4 Func_UI_Xaml_Automation_Peers_IAutomationPeer4__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeer4__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4 Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer Func_uint__UI_Xaml_Automation_Peers_IAutomationPeer__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeer__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeer__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer__Windows_UI_Xaml_Automation_Peers__IAutomationPeer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerOverrides__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerProtected__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerProtected__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerProtected__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerProtected__Windows_UI_Xaml_Automation_Peers__IAutomationPeerProtected * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeer2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeer2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeer2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer2__Windows_UI_Xaml_Automation_Peers__IAutomationPeer2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides2__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeer3__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeer3__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeer3__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer3__Windows_UI_Xaml_Automation_Peers__IAutomationPeer3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides3__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides3 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeer4__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeer4__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeer4>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeer4__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeer4__Windows_UI_Xaml_Automation_Peers__IAutomationPeer4 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4 Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4 __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerOverrides4__Windows_UI_Xaml_Automation_Peers__IAutomationPeerOverrides4 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation> Func__Collections_IIterator_1_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation Func_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<string,bool>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__bool___Windows_Foundation_Collections__IKeyValuePair_A_string_j_bool_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, bool>[] Func_rg__KeyValuePair_2_string__bool___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_bool_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_bool_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<string, bool>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, bool>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<string, bool>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__bool___Windows_Foundation_Collections__IKeyValuePair_A_string_j_bool_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<string, bool> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, bool>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, bool>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, bool>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__bool___Windows_Foundation_Collections__IKeyValuePair_A_string_j_bool_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.System.Threading.WorkItemPriority>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_System_Threading_WorkItemPriority__Windows_System_Threading__WorkItemPriority, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Threading.WorkItemPriority Func_Threading_WorkItemPriority__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.WorkItemPriority unsafe___value__retval;
			global::Windows.System.Threading.WorkItemPriority __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.System.Threading.WorkItemOptions>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_System_Threading_WorkItemOptions__Windows_System_Threading__WorkItemOptions, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Threading.WorkItemOptions Func_Threading_WorkItemOptions__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Threading.WorkItemOptions unsafe___value__retval;
			global::Windows.System.Threading.WorkItemOptions __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.Diagnostics.CausalityTraceLevel>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalityTraceLevel__Windows_Foundation_Diagnostics__CausalityTraceLevel, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Diagnostics.CausalityTraceLevel Func__Diagnostics_CausalityTraceLevel__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Diagnostics.CausalityTraceLevel unsafe___value__retval;
			global::Windows.Foundation.Diagnostics.CausalityTraceLevel __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.Diagnostics.CausalitySource>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySource__Windows_Foundation_Diagnostics__CausalitySource, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Diagnostics.CausalitySource Func__Diagnostics_CausalitySource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Diagnostics.CausalitySource unsafe___value__retval;
			global::Windows.Foundation.Diagnostics.CausalitySource __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.Diagnostics.CausalityRelation>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalityRelation__Windows_Foundation_Diagnostics__CausalityRelation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Diagnostics.CausalityRelation Func__Diagnostics_CausalityRelation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Diagnostics.CausalityRelation unsafe___value__retval;
			global::Windows.Foundation.Diagnostics.CausalityRelation __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Foundation.Diagnostics.CausalitySynchronousWork>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_Diagnostics_CausalitySynchronousWork__Windows_Foundation_Diagnostics__CausalitySynchronousWork, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Diagnostics.CausalitySynchronousWork Func__Diagnostics_CausalitySynchronousWork__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Diagnostics.CausalitySynchronousWork unsafe___value__retval;
			global::Windows.Foundation.Diagnostics.CausalitySynchronousWork __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Core.AppViewBackButtonVisibility>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Core_AppViewBackButtonVisibility__Windows_UI_Core__AppViewBackButtonVisibility, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.AppViewBackButtonVisibility Func_UI_Core_AppViewBackButtonVisibility__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.AppViewBackButtonVisibility unsafe___value__retval;
			global::Windows.UI.Core.AppViewBackButtonVisibility __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Primitives_ComponentResourceLocation__Windows_UI_Xaml_Controls_Primitives__ComponentResourceLocation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation Func_UI_Xaml_Controls_Primitives_ComponentResourceLocation__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation unsafe___value__retval;
			global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Storage.Streams.UnicodeEncoding>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Storage_Streams_UnicodeEncoding__Windows_Storage_Streams__UnicodeEncoding, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.UnicodeEncoding Func_Storage_Streams_UnicodeEncoding__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.UnicodeEncoding unsafe___value__retval;
			global::Windows.Storage.Streams.UnicodeEncoding __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Storage.Streams.ByteOrder>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Storage_Streams_ByteOrder__Windows_Storage_Streams__ByteOrder, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Storage.Streams.ByteOrder Func_Storage_Streams_ByteOrder__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.ByteOrder unsafe___value__retval;
			global::Windows.Storage.Streams.ByteOrder __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Security.Cryptography.BinaryStringEncoding>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Security_Cryptography_BinaryStringEncoding__Windows_Security_Cryptography__BinaryStringEncoding, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.BinaryStringEncoding Func_Security_Cryptography_BinaryStringEncoding__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.BinaryStringEncoding unsafe___value__retval;
			global::Windows.Security.Cryptography.BinaryStringEncoding __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Controls.Maps.MapAnimationKind>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Maps_MapAnimationKind__Windows_UI_Xaml_Controls_Maps__MapAnimationKind, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapAnimationKind Func_UI_Xaml_Controls_Maps_MapAnimationKind__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.MapAnimationKind unsafe___value__retval;
			global::Windows.UI.Xaml.Controls.Maps.MapAnimationKind __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.ApplicationModel.Background.SystemConditionType>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_ApplicationModel_Background_SystemConditionType__Windows_ApplicationModel_Background__SystemConditionType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.ApplicationModel.Background.SystemConditionType Func_ApplicationModel_Background_SystemConditionType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.ApplicationModel.Background.SystemConditionType unsafe___value__retval;
			global::Windows.ApplicationModel.Background.SystemConditionType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Devices.Enumeration.Pnp.PnpObjectType>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Devices_Enumeration_Pnp_PnpObjectType__Windows_Devices_Enumeration_Pnp__PnpObjectType, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Enumeration.Pnp.PnpObjectType Func_Devices_Enumeration_Pnp_PnpObjectType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Enumeration.Pnp.PnpObjectType unsafe___value__retval;
			global::Windows.Devices.Enumeration.Pnp.PnpObjectType __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.Web.Http.Filters.HttpCacheReadBehavior>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Web_Http_Filters_HttpCacheReadBehavior__Windows_Web_Http_Filters__HttpCacheReadBehavior, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.Filters.HttpCacheReadBehavior Func_Web_Http_Filters_HttpCacheReadBehavior__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.Filters.HttpCacheReadBehavior unsafe___value__retval;
			global::Windows.Web.Http.Filters.HttpCacheReadBehavior __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<System.Guid,Windows.ApplicationModel.Background.IBackgroundTaskRegistration>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_System_Guid__Windows_ApplicationModel_Background_IBackgroundTaskRegistration___Windows_Foundation_Collections__IKeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>[] Func_rg__KeyValuePair_2_Guid__ApplicationModel_Background_IBackgroundTaskRegistration___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Guid__Windows_ApplicationModel_Background_IBackgroundTaskRegistration___Windows_Foundation_Collections__IKeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<global::System.Guid, global::Windows.ApplicationModel.Background.IBackgroundTaskRegistration>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Guid__Windows_ApplicationModel_Background_IBackgroundTaskRegistration___Windows_Foundation_Collections__IKeyValuePair_A_System_Guid_j_Windows_ApplicationModel_Background_IBackgroundTaskRegistration_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.WindowActivatedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowActivatedEventHandler__Windows_UI_Xaml__WindowActivatedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.WindowActivatedEventHandler Func_UI_Xaml_WindowActivatedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.WindowActivatedEventHandler __value__retval = default(global::Windows.UI.Xaml.WindowActivatedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.WindowActivatedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.WindowActivatedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget91>(global::Windows.UI.Xaml.WindowActivatedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.WindowSizeChangedEventHandler>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_WindowSizeChangedEventHandler__Windows_UI_Xaml__WindowSizeChangedEventHandler *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.WindowSizeChangedEventHandler Func_UI_Xaml_WindowSizeChangedEventHandler__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Vtbl**);
			global::Windows.UI.Xaml.WindowSizeChangedEventHandler __value__retval = default(global::Windows.UI.Xaml.WindowSizeChangedEventHandler);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.WindowSizeChangedEventHandler)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.WindowSizeChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget93>(global::Windows.UI.Xaml.WindowSizeChangedEventHandler__Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.System.Profile.ProfileHardwareTokenContract>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_System_Profile_ProfileHardwareTokenContract__Windows_System_Profile__ProfileHardwareTokenContract, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.Profile.ProfileHardwareTokenContract Func_Profile_ProfileHardwareTokenContract__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.Profile.ProfileHardwareTokenContract unsafe___value__retval;
			global::Windows.System.Profile.ProfileHardwareTokenContract __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation Func_uint__UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation __value__retval = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Automation_Peers_IAutomationPeerAnnotation__Windows_UI_Xaml_Automation_Peers__IAutomationPeerAnnotation * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Controls.Maps.IMapTileSource>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Controls_Maps_IMapTileSource___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Controls_Maps_IMapTileSource_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapTileSource> Func__Collections_IIterator_1_UI_Xaml_Controls_Maps_IMapTileSource___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_Maps_IMapTileSource_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Controls_Maps_IMapTileSource_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapTileSource> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapTileSource>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapTileSource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Controls.Maps.IMapTileSource>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.Maps.IMapTileSource>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapTileSource__Windows_UI_Xaml_Controls_Maps__IMapTileSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.IMapTileSource Func_UI_Xaml_Controls_Maps_IMapTileSource__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapTileSource __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.Maps.IMapTileSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Controls.Maps.IMapTileSource>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_IMapTileSource__Windows_UI_Xaml_Controls_Maps__IMapTileSource * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Controls_Maps_IMapTileSource__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.IMapTileSource[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapTileSource__Windows_UI_Xaml_Controls_Maps__IMapTileSource * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.Maps.IMapTileSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapTileSource__Windows_UI_Xaml_Controls_Maps__IMapTileSource * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.Maps.IMapTileSource>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapTileSource__Windows_UI_Xaml_Controls_Maps__IMapTileSource *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.IMapTileSource Func_uint__UI_Xaml_Controls_Maps_IMapTileSource__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl**);
			global::Windows.UI.Xaml.Controls.Maps.IMapTileSource __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Controls.Maps.IMapTileSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.Maps.IMapTileSource>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapTileSource__Windows_UI_Xaml_Controls_Maps__IMapTileSource *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Controls_Maps_IMapTileSource__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.Maps.IMapTileSource value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Controls.Maps.IMapTileSource>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_IMapTileSource__Windows_UI_Xaml_Controls_Maps__IMapTileSource * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Controls_Maps_IMapTileSource__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Controls.Maps.IMapTileSource[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapTileSource__Windows_UI_Xaml_Controls_Maps__IMapTileSource * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Controls.Maps.IMapTileSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Controls.Maps.IMapTileSource).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Controls_Maps_IMapTileSource__Windows_UI_Xaml_Controls_Maps__IMapTileSource * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<string>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IEnumerable_1_string___Windows_Foundation_Collections__IIterable_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IEnumerable<string> Func__IEnumerable_1_string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IEnumerable_A_string_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IEnumerable_A_string_V___Impl.Vtbl**);
			global::System.Collections.Generic.IEnumerable<string> __value__retval = default(global::System.Collections.Generic.IEnumerable<string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IEnumerable<string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IEnumerable<string>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.Visibility>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Visibility__Windows_UI_Xaml__Visibility *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Visibility[] Func_rg_UI_Xaml_Visibility__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Visibility* unsafe___value__retval = default(global::Windows.UI.Xaml.Visibility*);
			global::Windows.UI.Xaml.Visibility[] __value__retval = default(global::Windows.UI.Xaml.Visibility[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.Visibility[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Visibility__Windows_UI_Xaml__Visibility __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.HorizontalAlignment>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_HorizontalAlignment__Windows_UI_Xaml__HorizontalAlignment *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.HorizontalAlignment[] Func_rg_UI_Xaml_HorizontalAlignment__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.HorizontalAlignment* unsafe___value__retval = default(global::Windows.UI.Xaml.HorizontalAlignment*);
			global::Windows.UI.Xaml.HorizontalAlignment[] __value__retval = default(global::Windows.UI.Xaml.HorizontalAlignment[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.HorizontalAlignment[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_HorizontalAlignment__Windows_UI_Xaml__HorizontalAlignment __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<string,Windows.UI.Xaml.Markup.IXamlType>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlType_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>[] Func_rg__KeyValuePair_2_string__UI_Xaml_Markup_IXamlType___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlType_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlType_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlType_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlType>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlType_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<System.Type,Windows.UI.Xaml.Markup.IXamlType>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_System_Type__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_Windows_UI_Xaml_Interop_TypeName_j_Windows_UI_Xaml_Markup_IXamlType_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>[] Func_rg__KeyValuePair_2_Type__UI_Xaml_Markup_IXamlType___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_System_Type_j_Windows_UI_Xaml_Markup_IXamlType_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_System_Type_j_Windows_UI_Xaml_Markup_IXamlType_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Type__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_Windows_UI_Xaml_Interop_TypeName_j_Windows_UI_Xaml_Markup_IXamlType_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Type__Windows_UI_Xaml_Markup_IXamlType___Windows_Foundation_Collections__IKeyValuePair_A_Windows_UI_Xaml_Interop_TypeName_j_Windows_UI_Xaml_Markup_IXamlType_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<string,Windows.UI.Xaml.Markup.IXamlMember>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlMember___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlMember_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>[] Func_rg__KeyValuePair_2_string__UI_Xaml_Markup_IXamlMember___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlMember_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlMember_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlMember___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlMember_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.UI.Xaml.Markup.IXamlMember>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_UI_Xaml_Markup_IXamlMember___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_UI_Xaml_Markup_IXamlMember_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<string,byte>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__byte___Windows_Foundation_Collections__IKeyValuePair_A_string_j_byte_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, byte>[] Func_rg__KeyValuePair_2_string__byte___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_byte_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_byte_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<string, byte>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, byte>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<string, byte>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__byte___Windows_Foundation_Collections__IKeyValuePair_A_string_j_byte_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<string, byte> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, byte>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, byte>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, byte>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__byte___Windows_Foundation_Collections__IKeyValuePair_A_string_j_byte_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<byte,string>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_byte__string___Windows_Foundation_Collections__IKeyValuePair_A_byte_j_string_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<byte, string>[] Func_rg__KeyValuePair_2_byte__string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_byte_j_string_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_byte_j_string_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<byte, string>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<byte, string>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<byte, string>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_byte__string___Windows_Foundation_Collections__IKeyValuePair_A_byte_j_string_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<byte, string> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<byte, string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<byte, string>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<byte, string>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_byte__string___Windows_Foundation_Collections__IKeyValuePair_A_byte_j_string_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<System.Type,System.Type>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_System_Type__System_Type___Windows_Foundation_Collections__IKeyValuePair_A_Windows_UI_Xaml_Interop_TypeName_j_Windows_UI_Xaml_Interop_TypeName_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<global::System.Type, global::System.Type>[] Func_rg__KeyValuePair_2_Type__Type___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_System_Type_j_System_Type_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_System_Type_j_System_Type_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<global::System.Type, global::System.Type>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<global::System.Type, global::System.Type>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<global::System.Type, global::System.Type>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Type__System_Type___Windows_Foundation_Collections__IKeyValuePair_A_Windows_UI_Xaml_Interop_TypeName_j_Windows_UI_Xaml_Interop_TypeName_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<global::System.Type, global::System.Type> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<global::System.Type, global::System.Type>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<global::System.Type, global::System.Type>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<global::System.Type, global::System.Type>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_System_Type__System_Type___Windows_Foundation_Collections__IKeyValuePair_A_Windows_UI_Xaml_Interop_TypeName_j_Windows_UI_Xaml_Interop_TypeName_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<System.Object,string>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_object__string___Windows_Foundation_Collections__IKeyValuePair_A_object_j_string_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<object, string>[] Func_rg__KeyValuePair_2_object__string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_System_Object_j_string_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_System_Object_j_string_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<object, string>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<object, string>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<object, string>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__string___Windows_Foundation_Collections__IKeyValuePair_A_object_j_string_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<object, string> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<object, string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<object, string>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<object, string>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_object__string___Windows_Foundation_Collections__IKeyValuePair_A_object_j_string_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Automation.Peers.PatternInterface>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_PatternInterface__Windows_UI_Xaml_Automation_Peers__PatternInterface, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.PatternInterface Func_UI_Xaml_Automation_Peers_PatternInterface__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.PatternInterface unsafe___value__retval;
			global::Windows.UI.Xaml.Automation.Peers.PatternInterface __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, System.Nullable<Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Automation_Peers_AutomationNavigationDirection__Windows_UI_Xaml_Automation_Peers__AutomationNavigationDirection, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection Func_UI_Xaml_Automation_Peers_AutomationNavigationDirection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection unsafe___value__retval;
			global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Foundation.IReferenceArray<System.Collections.Generic.KeyValuePair<string,Windows.ApplicationModel.Resources.Core.NamedResource>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>[] Func_rg__KeyValuePair_2_string__ApplicationModel_Resources_Core_NamedResource___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl*** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V___Impl.Vtbl***);
			global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>[] __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * __value__retval
							global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
												((global::System.IntPtr)unsafe___value__retval[mcgIdx]), 
												typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>).TypeHandle
											));
							__value__retval[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe___value__retval != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe___value__retval_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__Windows_ApplicationModel_Resources_Core_NamedResource___Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_ApplicationModel_Resources_Core_NamedResource_V_ * __value__retval
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.Controls.Maps.MapScene,Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_Maps_MapScene__Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapScene_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapScene, global::Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs> Func__TypedEventHandler_2_UI_Xaml_Controls_Maps_MapScene__UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapScene_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapScene_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V___Impl.Vtbl**);
			global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapScene, global::Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs> __value__retval = default(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapScene, global::Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapScene, global::Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Maps.MapScene, global::Windows.UI.Xaml.Controls.Maps.MapTargetCameraChangedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget52>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_Maps_MapScene_j_Windows_UI_Xaml_Controls_Maps_MapTargetCameraChangedEventArgs_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.ITriggerBase>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_ITriggerBase___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_ITriggerBase_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.ITriggerBase> Func__Collections_IIterator_1_UI_Xaml_ITriggerBase___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_ITriggerBase_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_ITriggerBase_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.ITriggerBase> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.ITriggerBase>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.ITriggerBase>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.ITriggerBase>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.ITriggerBase>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_ITriggerBase__Windows_UI_Xaml__ITriggerBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ITriggerBase Func_UI_Xaml_ITriggerBase__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.ITriggerBase __value__retval = default(global::Windows.UI.Xaml.ITriggerBase);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.ITriggerBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.ITriggerBase).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.ITriggerBase>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_ITriggerBase__Windows_UI_Xaml__ITriggerBase * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_ITriggerBase__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ITriggerBase[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_ITriggerBase__Windows_UI_Xaml__ITriggerBase * items
						items[mcgIdx] = (global::Windows.UI.Xaml.ITriggerBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.ITriggerBase).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_ITriggerBase__Windows_UI_Xaml__ITriggerBase * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.ITriggerBase>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_ITriggerBase__Windows_UI_Xaml__ITriggerBase *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ITriggerBase Func_uint__UI_Xaml_ITriggerBase__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl**);
			global::Windows.UI.Xaml.ITriggerBase __value__retval = default(global::Windows.UI.Xaml.ITriggerBase);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.ITriggerBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.ITriggerBase).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.ITriggerBase>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_ITriggerBase__Windows_UI_Xaml__ITriggerBase *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_ITriggerBase__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ITriggerBase value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.ITriggerBase).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.ITriggerBase>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_ITriggerBase__Windows_UI_Xaml__ITriggerBase * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_ITriggerBase__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.ITriggerBase[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.ITriggerBase__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_ITriggerBase__Windows_UI_Xaml__ITriggerBase * items
						items[mcgIdx] = (global::Windows.UI.Xaml.ITriggerBase)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.ITriggerBase).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_ITriggerBase__Windows_UI_Xaml__ITriggerBase * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.Devices.Geolocation.GeoshapeType>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Devices_Geolocation_GeoshapeType__Windows_Devices_Geolocation__GeoshapeType *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Geolocation.GeoshapeType[] Func_rg_Devices_Geolocation_GeoshapeType__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.GeoshapeType* unsafe___value__retval = default(global::Windows.Devices.Geolocation.GeoshapeType*);
			global::Windows.Devices.Geolocation.GeoshapeType[] __value__retval = default(global::Windows.Devices.Geolocation.GeoshapeType[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.Devices.Geolocation.GeoshapeType[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_Devices_Geolocation_GeoshapeType__Windows_Devices_Geolocation__GeoshapeType __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.Devices.Geolocation.AltitudeReferenceSystem>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Devices_Geolocation_AltitudeReferenceSystem__Windows_Devices_Geolocation__AltitudeReferenceSystem *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Devices.Geolocation.AltitudeReferenceSystem[] Func_rg_Devices_Geolocation_AltitudeReference_(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Devices.Geolocation.AltitudeReferenceSystem* unsafe___value__retval = default(global::Windows.Devices.Geolocation.AltitudeReferenceSystem*);
			global::Windows.Devices.Geolocation.AltitudeReferenceSystem[] __value__retval = default(global::Windows.Devices.Geolocation.AltitudeReferenceSystem[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.Devices.Geolocation.AltitudeReferenceSystem[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_Devices_Geolocation_AltitudeReferenceSystem__Windows_Devices_Geolocation__AltitudeReferenceSystem __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.Controls.Maps.MapColorScheme>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_MapColorScheme__Windows_UI_Xaml_Controls_Maps__MapColorScheme *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapColorScheme[] Func_rg_UI_Xaml_Controls_Maps_MapColorScheme__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.MapColorScheme* unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapColorScheme*);
			global::Windows.UI.Xaml.Controls.Maps.MapColorScheme[] __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapColorScheme[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.Controls.Maps.MapColorScheme[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Maps_MapColorScheme__Windows_UI_Xaml_Controls_Maps__MapColorScheme __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.Controls.Maps.MapLoadingStatus>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_MapLoadingStatus__Windows_UI_Xaml_Controls_Maps__MapLoadingStatus *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapLoadingStatus[] Func_rg_UI_Xaml_Controls_Maps_MapLoadingStatus__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.MapLoadingStatus* unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapLoadingStatus*);
			global::Windows.UI.Xaml.Controls.Maps.MapLoadingStatus[] __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapLoadingStatus[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.Controls.Maps.MapLoadingStatus[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Maps_MapLoadingStatus__Windows_UI_Xaml_Controls_Maps__MapLoadingStatus __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.Controls.Maps.MapStyle>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_MapStyle__Windows_UI_Xaml_Controls_Maps__MapStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapStyle[] Func_rg_UI_Xaml_Controls_Maps_MapStyle__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.MapStyle* unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapStyle*);
			global::Windows.UI.Xaml.Controls.Maps.MapStyle[] __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapStyle[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.Controls.Maps.MapStyle[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Maps_MapStyle__Windows_UI_Xaml_Controls_Maps__MapStyle __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.Controls.Maps.MapWatermarkMode>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_MapWatermarkMode__Windows_UI_Xaml_Controls_Maps__MapWatermarkMode *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapWatermarkMode[] Func_rg_UI_Xaml_Controls_Maps_MapWatermarkMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.MapWatermarkMode* unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapWatermarkMode*);
			global::Windows.UI.Xaml.Controls.Maps.MapWatermarkMode[] __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapWatermarkMode[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.Controls.Maps.MapWatermarkMode[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Maps_MapWatermarkMode__Windows_UI_Xaml_Controls_Maps__MapWatermarkMode __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_MapPanInteractionMode__Windows_UI_Xaml_Controls_Maps__MapPanInteractionMode *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode[] Func_rg_UI_Xaml_Controls_Maps_MapPanInteractionMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode* unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode*);
			global::Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode[] __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.Controls.Maps.MapPanInteractionMode[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Maps_MapPanInteractionMode__Windows_UI_Xaml_Controls_Maps__MapPanInteractionMode __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.Controls.Maps.MapInteractionMode>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Controls_Maps_MapInteractionMode__Windows_UI_Xaml_Controls_Maps__MapInteractionMode *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Maps.MapInteractionMode[] Func_rg_UI_Xaml_Controls_Maps_MapInteractionMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Maps.MapInteractionMode* unsafe___value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapInteractionMode*);
			global::Windows.UI.Xaml.Controls.Maps.MapInteractionMode[] __value__retval = default(global::Windows.UI.Xaml.Controls.Maps.MapInteractionMode[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.Controls.Maps.MapInteractionMode[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Maps_MapInteractionMode__Windows_UI_Xaml_Controls_Maps__MapInteractionMode __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Networking.IHostName>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Networking_IHostName___Windows_Foundation_Collections__IIterator_A_Windows_Networking_IHostName_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.IHostName> Func__Collections_IIterator_1_Networking_IHostName___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Networking_IHostName_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Networking_IHostName_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.IHostName> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.IHostName>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.IHostName>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Networking.IHostName>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Networking.IHostName>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.IHostName Func_Networking_IHostName__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			global::Windows.Networking.IHostName __value__retval = default(global::Windows.Networking.IHostName);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Networking.IHostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Networking.IHostName).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Networking.IHostName>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Networking_IHostName__Windows_Networking__IHostName * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Networking_IHostName__uint__(
					global::System.__ComObject __this, 
					global::Windows.Networking.IHostName[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Networking.IHostName__Impl.Vtbl*** unsafe_items = default(global::Windows.Networking.IHostName__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Networking.IHostName__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Networking.IHostName__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName * items
						items[mcgIdx] = (global::Windows.Networking.IHostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Networking.IHostName).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.IHostName>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Networking.IHostName Func_uint__Networking_IHostName__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			global::Windows.Networking.IHostName __value__retval = default(global::Windows.Networking.IHostName);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Networking.IHostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Networking.IHostName).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.IHostName>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Networking_IHostName__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Networking.IHostName value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Networking.IHostName__Impl.Vtbl** unsafe_value = default(global::Windows.Networking.IHostName__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Networking.IHostName__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Networking.IHostName).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Networking.IHostName>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Networking_IHostName__Windows_Networking__IHostName * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Networking_IHostName__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Networking.IHostName[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Networking.IHostName__Impl.Vtbl*** unsafe_items = default(global::Windows.Networking.IHostName__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Networking.IHostName__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Networking.IHostName__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName * items
						items[mcgIdx] = (global::Windows.Networking.IHostName)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Networking.IHostName).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Networking_IHostName__Windows_Networking__IHostName * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.UI.Xaml.Input.IPointer>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_UI_Xaml_Input_IPointer___Windows_Foundation_Collections__IIterator_A_Windows_UI_Xaml_Input_IPointer_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Input.IPointer> Func__Collections_IIterator_1_UI_Xaml_Input_IPointer___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Input_IPointer_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_UI_Xaml_Input_IPointer_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Input.IPointer> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Input.IPointer>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Input.IPointer>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.UI.Xaml.Input.IPointer>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Input.IPointer>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Input_IPointer__Windows_UI_Xaml_Input__IPointer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.IPointer Func_UI_Xaml_Input_IPointer__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.IPointer __value__retval = default(global::Windows.UI.Xaml.Input.IPointer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.IPointer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.IPointer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.UI.Xaml.Input.IPointer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Input_IPointer__Windows_UI_Xaml_Input__IPointer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_UI_Xaml_Input_IPointer__uint__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.IPointer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Input_IPointer__Windows_UI_Xaml_Input__IPointer * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Input.IPointer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Input.IPointer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Input_IPointer__Windows_UI_Xaml_Input__IPointer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Input.IPointer>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Input_IPointer__Windows_UI_Xaml_Input__IPointer *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.IPointer Func_uint__UI_Xaml_Input_IPointer__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl** unsafe___value__retval = default(global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl**);
			global::Windows.UI.Xaml.Input.IPointer __value__retval = default(global::Windows.UI.Xaml.Input.IPointer);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.UI.Xaml.Input.IPointer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.UI.Xaml.Input.IPointer).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Input.IPointer>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Input_IPointer__Windows_UI_Xaml_Input__IPointer *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_UI_Xaml_Input_IPointer__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.IPointer value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl** unsafe_value = default(global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.UI.Xaml.Input.IPointer).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.UI.Xaml.Input.IPointer>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Input_IPointer__Windows_UI_Xaml_Input__IPointer * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_UI_Xaml_Input_IPointer__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.UI.Xaml.Input.IPointer[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl*** unsafe_items = default(global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.UI.Xaml.Input.IPointer__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Input_IPointer__Windows_UI_Xaml_Input__IPointer * items
						items[mcgIdx] = (global::Windows.UI.Xaml.Input.IPointer)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.UI.Xaml.Input.IPointer).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Input_IPointer__Windows_UI_Xaml_Input__IPointer * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Text.FontStyle>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Text_FontStyle__Windows_UI_Text__FontStyle *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Text.FontStyle[] Func_rg_UI_Text_FontStyle__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Text.FontStyle* unsafe___value__retval = default(global::Windows.UI.Text.FontStyle*);
			global::Windows.UI.Text.FontStyle[] __value__retval = default(global::Windows.UI.Text.FontStyle[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Text.FontStyle[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Text_FontStyle__Windows_UI_Text__FontStyle __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Text.FontStretch>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Text_FontStretch__Windows_UI_Text__FontStretch *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Text.FontStretch[] Func_rg_UI_Text_FontStretch__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Text.FontStretch* unsafe___value__retval = default(global::Windows.UI.Text.FontStretch*);
			global::Windows.UI.Text.FontStretch[] __value__retval = default(global::Windows.UI.Text.FontStretch[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Text.FontStretch[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Text_FontStretch__Windows_UI_Text__FontStretch __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.Input.KeyboardNavigationMode>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Input_KeyboardNavigationMode__Windows_UI_Xaml_Input__KeyboardNavigationMode *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.KeyboardNavigationMode[] Func_rg_UI_Xaml_Input_KeyboardNavigationMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.KeyboardNavigationMode* unsafe___value__retval = default(global::Windows.UI.Xaml.Input.KeyboardNavigationMode*);
			global::Windows.UI.Xaml.Input.KeyboardNavigationMode[] __value__retval = default(global::Windows.UI.Xaml.Input.KeyboardNavigationMode[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.Input.KeyboardNavigationMode[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Input_KeyboardNavigationMode__Windows_UI_Xaml_Input__KeyboardNavigationMode __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.VerticalAlignment>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_VerticalAlignment__Windows_UI_Xaml__VerticalAlignment *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.VerticalAlignment[] Func_rg_UI_Xaml_VerticalAlignment__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.VerticalAlignment* unsafe___value__retval = default(global::Windows.UI.Xaml.VerticalAlignment*);
			global::Windows.UI.Xaml.VerticalAlignment[] __value__retval = default(global::Windows.UI.Xaml.VerticalAlignment[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.VerticalAlignment[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_VerticalAlignment__Windows_UI_Xaml__VerticalAlignment __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.FocusState>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_FocusState__Windows_UI_Xaml__FocusState *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.FocusState[] Func_rg_UI_Xaml_FocusState__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.FocusState* unsafe___value__retval = default(global::Windows.UI.Xaml.FocusState*);
			global::Windows.UI.Xaml.FocusState[] __value__retval = default(global::Windows.UI.Xaml.FocusState[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.FocusState[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_FocusState__Windows_UI_Xaml__FocusState __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.FlowDirection>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_FlowDirection__Windows_UI_Xaml__FlowDirection *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.FlowDirection[] Func_rg_UI_Xaml_FlowDirection__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.FlowDirection* unsafe___value__retval = default(global::Windows.UI.Xaml.FlowDirection*);
			global::Windows.UI.Xaml.FlowDirection[] __value__retval = default(global::Windows.UI.Xaml.FlowDirection[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.FlowDirection[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_FlowDirection__Windows_UI_Xaml__FlowDirection __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.ElementTheme>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_ElementTheme__Windows_UI_Xaml__ElementTheme *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ElementTheme[] Func_rg_UI_Xaml_ElementTheme__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ElementTheme* unsafe___value__retval = default(global::Windows.UI.Xaml.ElementTheme*);
			global::Windows.UI.Xaml.ElementTheme[] __value__retval = default(global::Windows.UI.Xaml.ElementTheme[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.ElementTheme[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_ElementTheme__Windows_UI_Xaml__ElementTheme __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<string>>>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_string____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_string_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>> Func__KeyValuePair_2_string___IEnumerable_1_string__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl**);
			global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>> __value__retval = default(global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>> pair___value__retval = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>).TypeHandle
								));
				__value__retval = new global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>(pair___value__retval.get_Key(), pair___value__retval.get_Value());
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<string>>>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_string____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_string_V__V_ * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg__KeyValuePair_2_string___IEnumerable_1_string__uint__(
					global::System.__ComObject __this, 
					global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl*** unsafe_items = default(global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::System.Collections.Generic.KeyValuePair_A_string_j_System_Collections_Generic_IEnumerable_A_string_V__V___Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_string____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_string_V__V_ * items
						global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>> pair_items = ((global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Foundation.Collections.IKeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>).TypeHandle
										));
						items[mcgIdx] = new global::System.Collections.Generic.KeyValuePair<string, global::System.Collections.Generic.IEnumerable<string>>(pair_items.get_Key(), pair_items.get_Value());
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTKeyValuePairMarshaller] System_Collections_Generic_KeyValuePair_2_string__System_Collections_Generic_IEnumerable_1_string____Windows_Foundation_Collections__IKeyValuePair_A_string_j_Windows_Foundation_Collections_IIterable_A_string_V__V_ * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.Input.ManipulationModes>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Input_ManipulationModes__Windows_UI_Xaml_Input__ManipulationModes *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Input.ManipulationModes[] Func_rg_UI_Xaml_Input_ManipulationModes__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.ManipulationModes* unsafe___value__retval = default(global::Windows.UI.Xaml.Input.ManipulationModes*);
			global::Windows.UI.Xaml.Input.ManipulationModes[] __value__retval = default(global::Windows.UI.Xaml.Input.ManipulationModes[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.Input.ManipulationModes[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Input_ManipulationModes__Windows_UI_Xaml_Input__ManipulationModes __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.Media.ElementCompositeMode>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Media_ElementCompositeMode__Windows_UI_Xaml_Media__ElementCompositeMode *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.ElementCompositeMode[] Func_rg_UI_Xaml_Media_ElementCompositeMode__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.ElementCompositeMode* unsafe___value__retval = default(global::Windows.UI.Xaml.Media.ElementCompositeMode*);
			global::Windows.UI.Xaml.Media.ElementCompositeMode[] __value__retval = default(global::Windows.UI.Xaml.Media.ElementCompositeMode[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.Media.ElementCompositeMode[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Media_ElementCompositeMode__Windows_UI_Xaml_Media__ElementCompositeMode __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Core.CoreDispatcherPriority>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Core_CoreDispatcherPriority__Windows_UI_Core__CoreDispatcherPriority *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Core.CoreDispatcherPriority[] Func_rg_UI_Core_CoreDispatcherPriority__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Core.CoreDispatcherPriority* unsafe___value__retval = default(global::Windows.UI.Core.CoreDispatcherPriority*);
			global::Windows.UI.Core.CoreDispatcherPriority[] __value__retval = default(global::Windows.UI.Core.CoreDispatcherPriority[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Core.CoreDispatcherPriority[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Core_CoreDispatcherPriority__Windows_UI_Core__CoreDispatcherPriority __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, Windows.Foundation.IReferenceArray<Windows.UI.Xaml.Interop.TypeKind>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Interop_TypeKind__Windows_UI_Xaml_Interop__TypeKind *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Interop.TypeKind[] Func_rg_UI_Xaml_Interop_TypeKind__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Interop.TypeKind* unsafe___value__retval = default(global::Windows.UI.Xaml.Interop.TypeKind*);
			global::Windows.UI.Xaml.Interop.TypeKind[] __value__retval = default(global::Windows.UI.Xaml.Interop.TypeKind[]);
			uint unsafe___value__retval_mcgLength = 0;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval_mcgLength), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe___value__retval == null)
					__value__retval = null;
				else
				{
					__value__retval = new global::Windows.UI.Xaml.Interop.TypeKind[unsafe___value__retval_mcgLength];
					if (__value__retval != null)
						for (uint mcgIdx = 0; (mcgIdx < unsafe___value__retval_mcgLength); mcgIdx++)
						{
							// [fwd] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Interop_TypeKind__Windows_UI_Xaml_Interop__TypeKind __value__retval
							__value__retval[mcgIdx] = unsafe___value__retval[mcgIdx];
						}
				}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationWithProgressCompletedHandler_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> Func__AsyncOperationWithProgressCompletedHandler_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> __value__retval = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget88>(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Web.Http.HttpProgress>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.StructMarshaller] Windows_Web_Http_HttpProgress__Windows_Web_Http__HttpProgress, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpProgress Func_Web_Http_HttpProgress__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.HttpProgress__Impl.UnsafeType unsafe___value__retval = default(global::Windows.Web.Http.HttpProgress__Impl.UnsafeType);
			global::Windows.Web.Http.HttpProgress __value__retval = default(global::Windows.Web.Http.HttpProgress);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = default(global::Windows.Web.Http.HttpProgress__Impl.UnsafeType);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::Windows.Web.Http.HttpProgress__Impl.Marshal__UnsafeToSafe(
									ref unsafe___value__retval, 
									out __value__retval
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::Windows.Web.Http.HttpProgress__Impl.Cleanup__Unsafe(ref unsafe___value__retval);
			}
		}

		// Signature, System.Nullable<Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IInputStream,ulong>>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationWithProgressCompletedHandler_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong> Func__AsyncOperationWithProgressCompletedHandler_2_Storage_Streams_IInputStream__ulong___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong> __value__retval = default(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget86>(global::Windows.Foundation.AsyncOperationWithProgressCompletedHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Nullable<Windows.Web.Http.HttpProgressStage>.get_Value, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Web_Http_HttpProgressStage__Windows_Web_Http__HttpProgressStage, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpProgressStage Func_Web_Http_HttpProgressStage__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.HttpProgressStage unsafe___value__retval;
			global::Windows.Web.Http.HttpProgressStage __value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe___value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			__value__retval = unsafe___value__retval;
			// Return
			return __value__retval;
		}

		// Signature, Windows.Security.Cryptography.Certificates.ICertificateQuery.get_EnhancedKeyUsages, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_string___Windows_Foundation_Collections__IVector_A_string_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IList<string> Func__IList_1_string___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IList_A_string_V___Impl.Vtbl** unsafe_value__retval = default(global::System.Collections.Generic.IList_A_string_V___Impl.Vtbl**);
			global::System.Collections.Generic.IList<string> value__retval = default(global::System.Collections.Generic.IList<string>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::System.Collections.Generic.IList<string>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::System.Collections.Generic.IList<string>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpStreamContentFactory.CreateFromInputStream, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Storage_Streams_IInputStream__Windows_Storage_Streams__IInputStream *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_Storage_Streams_IInputStream__IntPtr__(
					global::System.__ComObject __this, 
					global::Windows.Storage.Streams.IInputStream content, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Storage.Streams.IInputStream__Impl.Vtbl** unsafe_content = default(global::Windows.Storage.Streams.IInputStream__Impl.Vtbl**);
			global::System.IntPtr unsafe_streamContent__retval;
			global::System.IntPtr streamContent__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_content = (global::Windows.Storage.Streams.IInputStream__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									content, 
									typeof(global::Windows.Storage.Streams.IInputStream).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_content, 
									&(unsafe_streamContent__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				streamContent__retval = unsafe_streamContent__retval;
				// Return
				return streamContent__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_content)));
				global::System.GC.KeepAlive(content);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.Certificate Func_uint__Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.Certificate __value__retval = default(global::Windows.Security.Cryptography.Certificates.Certificate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.Certificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle, 
									typeof(global::Windows.Security.Cryptography.Certificates.Certificate).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Security_Cryptography_Certificates_Certificate__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.Certificate value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe_value = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Security_Cryptography_Certificates_Certificate__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Security.Cryptography.Certificates.Certificate[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.Certificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle, 
											typeof(global::Windows.Security.Cryptography.Certificates.Certificate).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Security.Cryptography.Certificates.Certificate>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Security_Cryptography_Certificates_Certificate___Windows_Foundation_Collections__IIterator_A_Windows_Security_Cryptography_Certificates_Certificate_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.Certificate> Func__Collections_IIterator_1_Security_Cryptography_Certificates_Certificate___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_Certificate_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_Certificate_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.Certificate> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.Certificate>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.Certificate>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.Certificate>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.Certificate>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.Certificate Func_Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.Certificate __value__retval = default(global::Windows.Security.Cryptography.Certificates.Certificate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.Certificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle, 
									typeof(global::Windows.Security.Cryptography.Certificates.Certificate).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.Certificate>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Security_Cryptography_Certificates_Certificate__uint__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.Certificate[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.Certificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle, 
											typeof(global::Windows.Security.Cryptography.Certificates.Certificate).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_Certificate__Windows_Security_Cryptography_Certificates__Certificate * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_System_Collections_Generic_IReadOnlyList_1_Windows_Security_Cryptography_Certificates_Certificate____Windows_Foundation__IAsyncOperation_A_Windows_Foundation_Collections_IVectorView_A_Windows_Security_Cryptography_Certificates_Certificate_V__V_ *, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__IAsyncOperation_1__IReadOnlyList_1_Security_Cryptography_Certificates_Certificate__int(
					global::System.__ComObject __this, 
					global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> asyncInfo, 
					int asyncStatus, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.IAsyncOperation_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl** unsafe_asyncInfo = default(global::Windows.Foundation.IAsyncOperation_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_asyncInfo = (global::Windows.Foundation.IAsyncOperation_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_asyncInfo, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_asyncInfo)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>>.put_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_System_Collections_Generic_IReadOnlyList_1_Windows_Security_Cryptography_Certificates_Certificate____Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Foundation_Collections_IVectorView_A_Windows_Security_Cryptography_Certificates_Certificate_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__AsyncOperationCompletedHandler_1__IReadOnlyList_1_Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> handler, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget96>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_handler
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>>.get_Completed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationCompletedHandler_1_System_Collections_Generic_IReadOnlyList_1_Windows_Security_Cryptography_Certificates_Certificate____Windows_Foundation__AsyncOperationCompletedHandler_A_Windows_Foundation_Collections_IVectorView_A_Windows_Security_Cryptography_Certificates_Certificate_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> Func__AsyncOperationCompletedHandler_1__IReadOnlyList_1_Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> __value__retval = default(global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationCompletedHandler<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget96>(global::Windows.Foundation.AsyncOperationCompletedHandler_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperation<System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.Certificate>>.GetResults, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IReadOnlyList_1_Windows_Security_Cryptography_Certificates_Certificate___Windows_Foundation_Collections__IVectorView_A_Windows_Security_Cryptography_Certificates_Certificate_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate> Func__IReadOnlyList_1_Security_Cryptography_Certificates_Certificate___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Collections.Generic.IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V___Impl.Vtbl** unsafe___value__retval = default(global::System.Collections.Generic.IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V___Impl.Vtbl**);
			global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate> __value__retval = default(global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Security.Cryptography.Certificates.ICertificateStoresStatics.FindAllAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Security_Cryptography_Certificates_CertificateQuery__Windows_Security_Cryptography_Certificates__CertificateQuery *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_IAsyncOperation_1_System_Collections_Generic_IReadOnlyList_1_Windows_Security_Cryptography_Certificates_Certificate____Windows_Foundation__IAsyncOperation_A_Windows_Foundation_Collections_IVectorView_A_Windows_Security_Cryptography_Certificates_Certificate_V__V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> Func_Security_Cryptography_Certificates_CertificateQuery___IAsyncOperation_1__IReadOnlyList_1_Security_Cryptography_Certificates_Certificate__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.CertificateQuery query, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificateQuery__Impl.Vtbl** unsafe_query = default(global::Windows.Security.Cryptography.Certificates.ICertificateQuery__Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl** unsafe_value__retval = default(global::Windows.Foundation.IAsyncOperation_A_System_Collections_Generic_IReadOnlyList_A_Windows_Security_Cryptography_Certificates_Certificate_V__V___Impl.Vtbl**);
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> value__retval = default(global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_query = (global::Windows.Security.Cryptography.Certificates.ICertificateQuery__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									query, 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificateQuery).TypeHandle
								);
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_query, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = (global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value__retval), 
									typeof(global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>>).TypeHandle
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_query)));
				global::System.GC.KeepAlive(query);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Security.Cryptography.Certificates.ICertificate>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Security_Cryptography_Certificates_ICertificate___Windows_Foundation_Collections__IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate> Func__Collections_IIterator_1_Security_Cryptography_Certificates_ICertificate___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.ICertificate>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.ICertificate Func_Security_Cryptography_Certificates_ICertificate__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.ICertificate __value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.ICertificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.ICertificate>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Security_Cryptography_Certificates_ICertificate__uint__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.ICertificate[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.ICertificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IEnumerable<Windows.Security.Cryptography.Certificates.ICertificate2>.First, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Foundation_Collections_IIterator_1_Windows_Security_Cryptography_Certificates_ICertificate2___Windows_Foundation_Collections__IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate2_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate2> Func__Collections_IIterator_1_Security_Cryptography_Certificates_ICertificate2___(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate2_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.Collections.IIterator_A_Windows_Security_Cryptography_Certificates_ICertificate2_V___Impl.Vtbl**);
			global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate2> __value__retval = default(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate2>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate2>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.Collections.IIterator<global::Windows.Security.Cryptography.Certificates.ICertificate2>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.ICertificate2>.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.ICertificate2 Func_Security_Cryptography_Certificates_ICertificate2__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.ICertificate2 __value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.ICertificate2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Collections.IIterator<Windows.Security.Cryptography.Certificates.ICertificate2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_out_rg_Security_Cryptography_Certificates_ICertificate2__uint__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.ICertificate2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.ICertificate2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.ICertificate Func_uint__Security_Cryptography_Certificates_ICertificate__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.ICertificate __value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.ICertificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Security_Cryptography_Certificates_ICertificate__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.ICertificate value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl** unsafe_value = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Security_Cryptography_Certificates_ICertificate__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Security.Cryptography.Certificates.ICertificate[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.ICertificate)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate__Windows_Security_Cryptography_Certificates__ICertificate * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate2>.GetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Security.Cryptography.Certificates.ICertificate2 Func_uint__Security_Cryptography_Certificates_ICertificate2__(
					global::System.__ComObject __this, 
					uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl** unsafe___value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**);
			global::Windows.Security.Cryptography.Certificates.ICertificate2 __value__retval = default(global::Windows.Security.Cryptography.Certificates.ICertificate2);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Security.Cryptography.Certificates.ICertificate2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate2).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate2>.IndexOf, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_Security_Cryptography_Certificates_ICertificate2__out_uint__bool__(
					global::System.__ComObject __this, 
					global::Windows.Security.Cryptography.Certificates.ICertificate2 value, 
					out uint index, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl** unsafe_value = default(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**);
			uint unsafe_index;
			bool __value__retval;
			sbyte unsafe___value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									value, 
									typeof(global::Windows.Security.Cryptography.Certificates.ICertificate2).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_value, 
									&(unsafe_index), 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
				index = unsafe_index;
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.GC.KeepAlive(value);
			}
		}

		// Signature, System.Collections.Generic.IReadOnlyList<Windows.Security.Cryptography.Certificates.ICertificate2>.GetMany, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__out_rg_Security_Cryptography_Certificates_ICertificate2__uint__(
					global::System.__ComObject __this, 
					uint startIndex, 
					global::Windows.Security.Cryptography.Certificates.ICertificate2[] items, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_items_mcgLength = 0;
			global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl*** unsafe_items = default(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl***);
			uint unsafe___value__retval;
			uint __value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (items != null)
					unsafe_items_mcgLength = (uint)items.Length;
				if (items != null)
					unsafe_items = (global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(unsafe_items_mcgLength * sizeof(global::Windows.Security.Cryptography.Certificates.ICertificate2__Impl.Vtbl**))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									startIndex, 
									unsafe_items_mcgLength, 
									unsafe_items, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval;
				if (items != null)
					for (uint mcgIdx = 0; (mcgIdx < unsafe_items_mcgLength); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * items
						items[mcgIdx] = (global::Windows.Security.Cryptography.Certificates.ICertificate2)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
											((global::System.IntPtr)unsafe_items[mcgIdx]), 
											typeof(global::Windows.Security.Cryptography.Certificates.ICertificate2).TypeHandle
										);
					}
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				if (unsafe_items != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < unsafe_items_mcgLength); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_Security_Cryptography_Certificates_ICertificate2__Windows_Security_Cryptography_Certificates__ICertificate2 * items
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_items[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_items);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetTypeAttr, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out_IntPtr__(
					global::System.__ComObject __this, 
					out global::System.IntPtr ppTypeAttr, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_ppTypeAttr;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								&(unsafe_ppTypeAttr)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			ppTypeAttr = unsafe_ppTypeAttr;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetTypeComp, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeComp__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeComp__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out__ComTypes_ITypeComp__Private_Interop__(
					global::System.__ComObject __this, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop ppTComp, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop__Impl.Vtbl** unsafe_ppTComp = default(global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_ppTComp = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_ppTComp)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				ppTComp = (global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTComp), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeComp,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
											"icKeyToken=b03f5f7f11d50a3a")
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTComp)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetFuncDesc, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_IntPtr__(
					global::System.__ComObject __this, 
					int index, 
					out global::System.IntPtr ppFuncDesc, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_ppFuncDesc;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe_ppFuncDesc)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			ppFuncDesc = unsafe_ppFuncDesc;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetNames, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_string__wchar_t * *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_rg_string__int__out_int__(
					global::System.__ComObject __this, 
					int memid, 
					string[] rgBstrNames, 
					int cMaxNames, 
					out int pcNames, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort** unsafe_rgBstrNames = default(ushort**);
			int unsafe_pcNames;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (rgBstrNames != null)
					unsafe_rgBstrNames = (ushort**)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(rgBstrNames.Length * sizeof(ushort*))));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									memid, 
									unsafe_rgBstrNames, 
									cMaxNames, 
									&(unsafe_pcNames)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				pcNames = unsafe_pcNames;
				if (rgBstrNames != null)
					for (uint mcgIdx = 0; (mcgIdx < rgBstrNames.Length); mcgIdx++)
					{
						// [fwd] [out] [optional] [Mcg.CodeGen.BstrMarshaller] string__wchar_t * rgBstrNames
						rgBstrNames[mcgIdx] = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_rgBstrNames[mcgIdx]);
					}
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_rgBstrNames != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < rgBstrNames.Length); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.BstrMarshaller] string__wchar_t * rgBstrNames
						global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_rgBstrNames[mcgIdx_1]);
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_rgBstrNames);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetRefTypeOfImplType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_int__(
					global::System.__ComObject __this, 
					int index, 
					out int href, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe_href;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe_href)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			href = unsafe_href;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetImplTypeFlags, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.EnumMarshaller] System_Runtime_InteropServices_ComTypes_IMPLTYPEFLAGS__System_Private_Interop__IMPLTYPEFLAGS__System_Private_Interop, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out__ComTypes_IMPLTYPEFLAGS__Private_Interop__(
					global::System.__ComObject __this, 
					int index, 
					out global::System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS__System_Private_Interop pImplTypeFlags, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS__System_Private_Interop unsafe_pImplTypeFlags;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe_pImplTypeFlags)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			pImplTypeFlags = unsafe_pImplTypeFlags;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetIDsOfNames, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ArrayMarshaller] rg_string__wchar_t * *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_int__int *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_rg_string__int__out_rg_int__(
					global::System.__ComObject __this, 
					string[] rgszNames, 
					int cNames, 
					int[] pMemId, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort** unsafe_rgszNames = default(ushort**);
			int* unsafe_pMemId;
			int unsafe___return__;
			try
			{
				// Marshalling
				if (rgszNames == null)
					unsafe_rgszNames = null;
				else
				{
					if (rgszNames != null)
						unsafe_rgszNames = (ushort**)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(rgszNames.Length * sizeof(ushort*))));
					for (uint mcgIdx = 0; (mcgIdx < rgszNames.Length); mcgIdx++)
					{
						// [fwd] [in] [optional] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t * rgszNames
						unsafe_rgszNames[mcgIdx] = (ushort*)global::McgInterop.McgHelpers.AllocUnicodeBuffer(rgszNames[mcgIdx]);
						global::McgInterop.McgHelpers.CopyUnicodeString(
											rgszNames[mcgIdx], 
											unsafe_rgszNames[mcgIdx]
										);
					}
				}
				fixed (int* pinned_pMemId = global::McgInterop.McgCoreHelpers.GetArrayForCompat(pMemId))
				{
					unsafe_pMemId = (int*)pinned_pMemId;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_rgszNames, 
										cNames, 
										unsafe_pMemId
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_rgszNames != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < rgszNames.Length); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t * rgszNames
						global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_rgszNames[mcgIdx_1]);
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_rgszNames);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ObjectMarshaller] object____mcg_IUnknown *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] short__short, [fwd] [in] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] System_Runtime_InteropServices_ComTypes_DISPPARAMS__System_Private_Interop__System_Runtime_InteropServices_ComTypes__DISPPARAMS__System_Private_Interop, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__int__short__out__ComTypes_DISPPARAMS__Private_Interop__IntPtr__IntPtr__out_int__(
					global::System.__ComObject __this, 
					object pvInstance, 
					int memid, 
					short wFlags, 
					ref global::System.Runtime.InteropServices.ComTypes.DISPPARAMS__System_Private_Interop pDispParams, 
					global::System.IntPtr pVarResult, 
					global::System.IntPtr pExcepInfo, 
					out int puArgErr, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IUnknown** unsafe_pvInstance = default(global::System.Runtime.InteropServices.__vtable_IUnknown**);
			global::System.Runtime.InteropServices.ComTypes.DISPPARAMS__System_Private_Interop unsafe_pDispParams;
			int unsafe_puArgErr;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_pvInstance = (global::System.Runtime.InteropServices.__vtable_IUnknown**)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									pvInstance, 
									global::System.Runtime.InteropServices.McgModuleManager.IUnknown
								);
				unsafe_pDispParams = pDispParams;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_pvInstance, 
									memid, 
									wFlags, 
									&(unsafe_pDispParams), 
									pVarResult, 
									pExcepInfo, 
									&(unsafe_puArgErr)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				puArgErr = unsafe_puArgErr;
				pDispParams = unsafe_pDispParams;
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_pvInstance)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetDocumentation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_string__out_string__out_int__out_string__(
					global::System.__ComObject __this, 
					int index, 
					out string strName, 
					out string strDocString, 
					out int dwHelpContext, 
					out string strHelpFile, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_strName = default(ushort*);
			ushort* unsafe_strDocString = default(ushort*);
			int unsafe_dwHelpContext;
			ushort* unsafe_strHelpFile = default(ushort*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strName = null;
				unsafe_strDocString = null;
				unsafe_strHelpFile = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									index, 
									&(unsafe_strName), 
									&(unsafe_strDocString), 
									&(unsafe_dwHelpContext), 
									&(unsafe_strHelpFile)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				strHelpFile = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_strHelpFile);
				dwHelpContext = unsafe_dwHelpContext;
				strDocString = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_strDocString);
				strName = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_strName);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_strName);
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_strDocString);
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_strHelpFile);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetDllEntry, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] System_Runtime_InteropServices_ComTypes_INVOKEKIND__System_Private_Interop__INVOKEKIND__System_Private_Interop, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int___ComTypes_INVOKEKIND__Private_Interop__IntPtr__IntPtr__IntPtr__(
					global::System.__ComObject __this, 
					int memid, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop invKind, 
					global::System.IntPtr pBstrDllName, 
					global::System.IntPtr pBstrName, 
					global::System.IntPtr pwOrdinal, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								memid, 
								invKind, 
								pBstrDllName, 
								pBstrName, 
								pwOrdinal
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetRefTypeInfo, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out__ComTypes_ITypeInfo__Private_Interop__(
					global::System.__ComObject __this, 
					int hRef, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTI, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl** unsafe_ppTI = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_ppTI = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									hRef, 
									&(unsafe_ppTI)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				ppTI = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTI), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
											"icKeyToken=b03f5f7f11d50a3a")
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTI)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.AddressOfMember, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller] System_Runtime_InteropServices_ComTypes_INVOKEKIND__System_Private_Interop__INVOKEKIND__System_Private_Interop, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int___ComTypes_INVOKEKIND__Private_Interop__out_IntPtr__(
					global::System.__ComObject __this, 
					int memid, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop invKind, 
					out global::System.IntPtr ppv, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_ppv;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								memid, 
								invKind, 
								&(unsafe_ppv)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			ppv = unsafe_ppv;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.ObjectMarshaller] object____mcg_IUnknown *, [fwd] [in] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ObjectMarshaller] object____mcg_IUnknown *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__Guid__out_object__(
					global::System.__ComObject __this, 
					object pUnkOuter, 
					ref global::System.Guid riid, 
					out object ppvObj, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IUnknown** unsafe_pUnkOuter = default(global::System.Runtime.InteropServices.__vtable_IUnknown**);
			global::System.Guid unsafe_riid;
			global::System.Runtime.InteropServices.__vtable_IUnknown** unsafe_ppvObj = default(global::System.Runtime.InteropServices.__vtable_IUnknown**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_pUnkOuter = (global::System.Runtime.InteropServices.__vtable_IUnknown**)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									pUnkOuter, 
									global::System.Runtime.InteropServices.McgModuleManager.IUnknown
								);
				unsafe_riid = riid;
				unsafe_ppvObj = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_pUnkOuter, 
									&(unsafe_riid), 
									&(unsafe_ppvObj)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				ppvObj = (object)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppvObj), 
									global::System.Runtime.InteropServices.McgModuleManager.IUnknown
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_pUnkOuter)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppvObj)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetMops, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_string__(
					global::System.__ComObject __this, 
					int memid, 
					out string pBstrMops, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_pBstrMops = default(ushort*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_pBstrMops = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									memid, 
									&(unsafe_pBstrMops)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				pBstrMops = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_pBstrMops);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_pBstrMops);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetContainingTypeLib, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeLib__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeLib__System_Private_Interop *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out__ComTypes_ITypeLib__Private_Interop__out_int__(
					global::System.__ComObject __this, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop ppTLB, 
					out int pIndex, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop__Impl.Vtbl** unsafe_ppTLB = default(global::System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop__Impl.Vtbl**);
			int unsafe_pIndex;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_ppTLB = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_ppTLB), 
									&(unsafe_pIndex)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				pIndex = unsafe_pIndex;
				ppTLB = (global::System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTLB), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeLib,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publi" +
											"cKeyToken=b03f5f7f11d50a3a")
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTLB)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.ReleaseTypeAttr, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_void__IntPtr__(
					global::System.__ComObject __this, 
					global::System.IntPtr pTypeAttr, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Marshalling
			// Call to native method
			global::McgInterop.ComCallHelpers.ComCall__void__(
								__this, 
								__typeHnd, 
								__targetIndex, 
								pTypeAttr
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop.Bind, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] short__short, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.EnumMarshaller] System_Runtime_InteropServices_ComTypes_DESCKIND__System_Private_Interop__DESCKIND__System_Private_Interop, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] System_Runtime_InteropServices_ComTypes_BINDPTR__System_Private_Interop__System_Runtime_InteropServices_ComTypes__BINDPTR__System_Private_Interop, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__int__short__out__ComTypes_ITypeInfo__Private_Interop__out__ComTypes_DESCKIND__Private_Interop__out__ComTypes_BINDPTR__Private_Interop__(
					global::System.__ComObject __this, 
					string szName, 
					int lHashVal, 
					short wFlags, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					out global::System.Runtime.InteropServices.ComTypes.DESCKIND__System_Private_Interop pDescKind, 
					out global::System.Runtime.InteropServices.ComTypes.BINDPTR__System_Private_Interop pBindPtr, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_szName = default(ushort*);
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl** unsafe_ppTInfo = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**);
			global::System.Runtime.InteropServices.ComTypes.DESCKIND__System_Private_Interop unsafe_pDescKind;
			global::System.Runtime.InteropServices.ComTypes.BINDPTR__System_Private_Interop unsafe_pBindPtr;
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pinned_szName = szName)
				{
					unsafe_szName = (ushort*)pinned_szName;
					unsafe_ppTInfo = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_szName, 
										lHashVal, 
										wFlags, 
										&(unsafe_ppTInfo), 
										&(unsafe_pDescKind), 
										&(unsafe_pBindPtr)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					pBindPtr = unsafe_pBindPtr;
					pDescKind = unsafe_pDescKind;
					ppTInfo = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_ppTInfo), 
										global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
												"icKeyToken=b03f5f7f11d50a3a")
									);
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTInfo)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop.BindType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeComp__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeComp__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__int__out__ComTypes_ITypeInfo__Private_Interop__out__ComTypes_ITypeComp__Private_Interop__(
					global::System.__ComObject __this, 
					string szName, 
					int lHashVal, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop ppTComp, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_szName = default(ushort*);
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl** unsafe_ppTInfo = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**);
			global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop__Impl.Vtbl** unsafe_ppTComp = default(global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pinned_szName = szName)
				{
					unsafe_szName = (ushort*)pinned_szName;
					unsafe_ppTInfo = null;
					unsafe_ppTComp = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										__typeHnd, 
										__targetIndex, 
										unsafe_szName, 
										lHashVal, 
										&(unsafe_ppTInfo), 
										&(unsafe_ppTComp)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					ppTComp = (global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_ppTComp), 
										global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeComp,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
												"icKeyToken=b03f5f7f11d50a3a")
									);
					ppTInfo = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_ppTInfo), 
										global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
												"icKeyToken=b03f5f7f11d50a3a")
									);
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTInfo)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTComp)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop.GetTypeInfoCount, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_int___2(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::McgInterop.ComCallHelpers.ComCall__int__(
								__this, 
								__typeHnd, 
								__targetIndex
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop.GetTypeInfoType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.EnumMarshaller] System_Runtime_InteropServices_ComTypes_TYPEKIND__System_Private_Interop__TYPEKIND__System_Private_Interop, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out__ComTypes_TYPEKIND__Private_Interop__(
					global::System.__ComObject __this, 
					int index, 
					out global::System.Runtime.InteropServices.ComTypes.TYPEKIND__System_Private_Interop pTKind, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.TYPEKIND__System_Private_Interop unsafe_pTKind;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								__typeHnd, 
								__targetIndex, 
								index, 
								&(unsafe_pTKind)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			pTKind = unsafe_pTKind;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop.GetTypeInfoOfGuid, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out_Guid__out__ComTypes_ITypeInfo__Private_Interop__(
					global::System.__ComObject __this, 
					ref global::System.Guid guid, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			global::System.Guid unsafe_guid;
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl** unsafe_ppTInfo = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_guid = guid;
				unsafe_ppTInfo = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									&(unsafe_guid), 
									&(unsafe_ppTInfo)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				ppTInfo = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTInfo), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
											"icKeyToken=b03f5f7f11d50a3a")
								);
				guid = unsafe_guid;
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTInfo)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop.IsName, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.Win32BoolMarshaller] bool__System.Boolean, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_string__int__bool__(
					global::System.__ComObject __this, 
					string szNameBuf, 
					int lHashVal, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_szNameBuf = default(ushort*);
			int unsafe___value__retval;
			bool __value__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pinned_szNameBuf = szNameBuf)
			{
				unsafe_szNameBuf = (ushort*)pinned_szNameBuf;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									__typeHnd, 
									__targetIndex, 
									unsafe_szNameBuf, 
									lHashVal, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = unsafe___value__retval != 0;
			}
			// Return
			return __value__retval;
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop.FindName, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.UnicodeStringMarshaller] string__wchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [Mcg.CodeGen.ArrayMarshaller] rg_System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop * *, [fwd] [out] [Mcg.CodeGen.BlittableArrayMarshaller] rg_int__int *, [fwd] [in] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] short__short, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__int__out_rg__ComTypes_ITypeInfo__Private_Interop__out_rg_int__out_short__(
					global::System.__ComObject __this, 
					string szNameBuf, 
					int lHashVal, 
					global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop[] ppTInfo, 
					int[] rgMemId, 
					ref short pcFound, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_szNameBuf = default(ushort*);
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl*** unsafe_ppTInfo = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl***);
			int* unsafe_rgMemId;
			short unsafe_pcFound;
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pinned_szNameBuf = szNameBuf)
				{
					unsafe_szNameBuf = (ushort*)pinned_szNameBuf;
					if (ppTInfo != null)
						unsafe_ppTInfo = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl***)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked(ppTInfo.Length * sizeof(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**))));
					fixed (int* pinned_rgMemId = global::McgInterop.McgCoreHelpers.GetArrayForCompat(rgMemId))
					{
						unsafe_rgMemId = (int*)pinned_rgMemId;
						unsafe_pcFound = pcFound;
						// Call to native method
						unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
											__this, 
											__typeHnd, 
											__targetIndex, 
											unsafe_szNameBuf, 
											lHashVal, 
											unsafe_ppTInfo, 
											unsafe_rgMemId, 
											&(unsafe_pcFound)
										);
						global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
						pcFound = unsafe_pcFound;
					}
					if (ppTInfo != null)
						for (uint mcgIdx = 0; (mcgIdx < ppTInfo.Length); mcgIdx++)
						{
							// [fwd] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop * ppTInfo
							ppTInfo[mcgIdx] = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
												((global::System.IntPtr)unsafe_ppTInfo[mcgIdx]), 
												global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
														"icKeyToken=b03f5f7f11d50a3a")
											);
						}
				}
				// Return
			}
			finally
			{
				// Cleanup
				if (unsafe_ppTInfo != null)
					for (uint mcgIdx_1 = 0; (mcgIdx_1 < ppTInfo.Length); mcgIdx_1++)
					{
						// [fwd] [in] [out] [optional] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop * ppTInfo
						global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTInfo[mcgIdx_1])));
					}
				global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree(unsafe_ppTInfo);
			}
		}
	}

	internal unsafe static partial class ComCallHelpers
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Type__Impl.UnsafeType arg1, 
					void* arg2, 
					global::System.Runtime.InteropServices.HSTRING arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					uint arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					sbyte arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					double arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.Input.ManipulationModes arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0, 
					global::Windows.Foundation.Rect arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.Thickness arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Type__Impl.UnsafeType arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Type__Impl.UnsafeType arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Size arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					sbyte arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Text.FontWeight arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.IntPtr arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.GridLength arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.CornerRadius arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Color arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Color arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.Duration arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.Media.Animation.KeyTime arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					sbyte arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					double arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Devices.Geolocation.BasicGeoposition arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Devices.Geolocation.BasicGeoposition arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Devices.Geolocation.BasicGeoposition arg0, 
					int arg1, 
					uint arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					int arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.IntPtr arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					double arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					double arg1, 
					double arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					double arg1, 
					double arg2, 
					double arg3, 
					double arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Windows.Foundation.Point arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Type__Impl.UnsafeType arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					double arg0, 
					double arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Guid arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					ushort arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					global::System.Runtime.InteropServices.HSTRING arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.TimeSpan arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.TimeSpan arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Graphics.Display.DisplayOrientations arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					sbyte arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					ulong arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Web.Http.HttpProgress__Impl.UnsafeType arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					global::Windows.System.Threading.WorkItemOptions arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::System.Guid arg2, 
					ulong arg3, 
					global::System.Runtime.InteropServices.HSTRING arg4, 
					ulong arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::System.Guid arg2, 
					ulong arg3, 
					int arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					int arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					int arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					short arg2, 
					void* arg3, 
					global::System.IntPtr arg4, 
					global::System.IntPtr arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop arg1, 
					global::System.IntPtr arg2, 
					global::System.IntPtr arg3, 
					global::System.IntPtr arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void ComCall__void__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			global::McgInterop.Intrinsics.StdCall__void__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					short arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__int__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}
	}

	internal unsafe static partial class ReverseComSharedStubs
	{
		// Signature, Windows.Foundation.IStringable.ToString, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_string__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.HSTRING* unsafe_value__retval)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.Foundation.IStringable>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).ToString();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = global::System.Runtime.InteropServices.McgMarshal.StringToHString(value__retval);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.FreeHString((*(unsafe_value__retval)).handle);
					(*(unsafe_value__retval)) = default(global::System.Runtime.InteropServices.HSTRING);
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Data.IValueConverter.Convert, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_object__Type__object__string__object__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value, 
					global::System.Type__Impl.UnsafeType unsafe_targetType, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_parameter, 
					global::System.Runtime.InteropServices.HSTRING unsafe_language, 
					global::System.Runtime.InteropServices.__vtable_IInspectable** unsafe_returnValue__retval)
		{
			// Setup
			object value = default(object);
			global::System.Type targetType;
			object parameter = default(object);
			string language = default(string);
			if (unsafe_returnValue__retval != null)
				(*(unsafe_returnValue__retval)) = null;
			object returnValue__retval = default(object);
			try
			{
				// Marshalling
				value = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value));
				targetType = global::System.Runtime.InteropServices.McgMarshal.TypeNameToType(
									unsafe_targetType.Name, 
									((int)unsafe_targetType.Kind)
								);
				parameter = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_parameter));
				language = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_language);
				// Call to managed method
				returnValue__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Data.IValueConverter>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).Convert(
									value, 
									targetType, 
									parameter, 
									language
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_returnValue__retval != null)
					(*(unsafe_returnValue__retval)) = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(returnValue__retval);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_returnValue__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_returnValue__retval)))));
					(*(unsafe_returnValue__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Toasts.IToastSelectionBoxItemFactory.CreateToastSelectionBoxItem, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [rev] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_string__string__IntPtr__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.HSTRING unsafe_id, 
					global::System.Runtime.InteropServices.HSTRING unsafe_content, 
					global::System.IntPtr* unsafe_value__retval)
		{
			// Setup
			string id = default(string);
			string content = default(string);
			global::System.IntPtr value__retval;
			try
			{
				// Marshalling
				id = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_id);
				content = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_content);
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Toasts.IToastSelectionBoxItemFactory>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).CreateToastSelectionBoxItem(
									id, 
									content
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = default(global::System.IntPtr);
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Toasts.IToastImageClass.get_Source, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastImageSource__NotificationsExtensions_Toasts__ToastImageSource *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_NotificationsExtensions_Toasts_ToastImageSource__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Toasts.IToastImageSourceClass__Impl.Vtbl*** unsafe_value__retval)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = null;
			global::NotificationsExtensions.Toasts.ToastImageSource value__retval = default(global::NotificationsExtensions.Toasts.ToastImageSource);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Toasts.IToastImageClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_Source();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (global::NotificationsExtensions.Toasts.IToastImageSourceClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										value__retval, 
										typeof(global::NotificationsExtensions.Toasts.IToastImageSourceClass).TypeHandle
									);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_value__retval)))));
					(*(unsafe_value__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Toasts.IToastImageClass.put_Source, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastImageSource__NotificationsExtensions_Toasts__ToastImageSource *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_NotificationsExtensions_Toasts_ToastImageSource__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Toasts.IToastImageSourceClass__Impl.Vtbl** unsafe_value)
		{
			// Setup
			global::NotificationsExtensions.Toasts.ToastImageSource value = default(global::NotificationsExtensions.Toasts.ToastImageSource);
			try
			{
				// Marshalling
				value = (global::NotificationsExtensions.Toasts.ToastImageSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value), 
									typeof(global::NotificationsExtensions.Toasts.IToastImageSourceClass).TypeHandle, 
									typeof(global::NotificationsExtensions.Toasts.ToastImageSource).TypeHandle
								);
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Toasts.IToastImageClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).put_Source(value);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Toasts.IToastImageSourceFactory.CreateToastImageSource, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_string__IntPtr__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.HSTRING unsafe_src, 
					global::System.IntPtr* unsafe_value__retval)
		{
			// Setup
			string src = default(string);
			global::System.IntPtr value__retval;
			try
			{
				// Marshalling
				src = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_src);
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Toasts.IToastImageSourceFactory>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).CreateToastImageSource(src);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = default(global::System.IntPtr);
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Toasts.IToastImageSourceClass.get_AddImageQuery, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_bool__(
					global::System.IntPtr pComThis, 
					sbyte* unsafe_value__retval)
		{
			// Setup
			bool value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Toasts.IToastImageSourceClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_AddImageQuery();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (value__retval ? ((sbyte)1) : ((sbyte)0));
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = 0;
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Toasts.IToastImageSourceClass.put_AddImageQuery, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_bool__(
					global::System.IntPtr pComThis, 
					sbyte unsafe_value)
		{
			// Setup
			bool value;
			try
			{
				// Marshalling
				value = unsafe_value != 0;
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Toasts.IToastImageSourceClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).put_AddImageQuery(value);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Toasts.IToastImageSourceClass.put_Alt, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_string__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.HSTRING unsafe_value)
		{
			// Setup
			string value = default(string);
			try
			{
				// Marshalling
				value = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value);
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Toasts.IToastImageSourceClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).put_Alt(value);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileSubgroupClass.get_TextStacking, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Tiles_TileTextStacking__NotificationsExtensions_Tiles__TileTextStacking, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_NotificationsExtensions_Tiles_TileTextStacking__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Tiles.TileTextStacking* unsafe_value__retval)
		{
			// Setup
			global::NotificationsExtensions.Tiles.TileTextStacking value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileSubgroupClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_TextStacking();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = default(global::NotificationsExtensions.Tiles.TileTextStacking);
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileSubgroupClass.get_Weight, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_int___Windows_Foundation__IReference_A_int_V_ *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_Nullable_1_int___(
					global::System.IntPtr pComThis, 
					global::System.Nullable_A_int_V___Impl.Vtbl*** unsafe_value__retval)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = null;
			global::System.Nullable<int> value__retval = default(global::System.Nullable<int>);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileSubgroupClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_Weight();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					if (value__retval.HasValue)
					{
						global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<int> unsafe_value__retval_Wrapper = new global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<int>(value__retval.Value, 4);
						(*(unsafe_value__retval)) = (global::System.Nullable_A_int_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ManagedObjectToComInterface(
											unsafe_value__retval_Wrapper, 
											typeof(global::Windows.Foundation.IReference<int>).TypeHandle
										);
					}
					else
						(*(unsafe_value__retval)) = null;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_value__retval)))));
					(*(unsafe_value__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileSubgroupClass.put_TextStacking, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Tiles_TileTextStacking__NotificationsExtensions_Tiles__TileTextStacking, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_int(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Tiles.TileTextStacking unsafe_value)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileSubgroupClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).put_TextStacking(unsafe_value);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileSubgroupClass.put_Weight, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_int___Windows_Foundation__IReference_A_int_V_ *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_Nullable_1_int___(
					global::System.IntPtr pComThis, 
					global::System.Nullable_A_int_V___Impl.Vtbl** unsafe_value)
		{
			// Setup
			global::System.Nullable<int> value = default(global::System.Nullable<int>);
			try
			{
				// Marshalling
				if (unsafe_value != null)
					value = (int)global::System.Runtime.InteropServices.McgModuleManager.UnboxIfBoxed(
										global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
															((global::System.IntPtr)unsafe_value), 
															typeof(global::Windows.Foundation.IReference<int>).TypeHandle
														), 
										"Windows.Foundation.IReference`1<Int32>"
									);
				else
					value = null;
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileSubgroupClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).put_Weight(value);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Core.DispatchedHandler.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_(global::System.IntPtr pComThis)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Core.DispatchedHandler>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).Invoke();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.SuspendingEventHandler.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_ApplicationModel_SuspendingEventArgs__Windows_ApplicationModel__SuspendingEventArgs *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_object__ApplicationModel_SuspendingEventArgs__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender, 
					global::Windows.ApplicationModel.ISuspendingEventArgs__Impl.Vtbl** unsafe_e)
		{
			// Setup
			object sender = default(object);
			global::Windows.ApplicationModel.SuspendingEventArgs e = default(global::Windows.ApplicationModel.SuspendingEventArgs);
			try
			{
				// Marshalling
				sender = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_sender));
				e = (global::Windows.ApplicationModel.SuspendingEventArgs)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_e), 
									typeof(global::Windows.ApplicationModel.ISuspendingEventArgs).TypeHandle, 
									typeof(global::Windows.ApplicationModel.SuspendingEventArgs).TypeHandle
								);
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.SuspendingEventHandler>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).Invoke(
									sender, 
									e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Navigation.NavigatedEventHandler.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.WinRTClassMarshaller] Windows_UI_Xaml_Navigation_NavigationEventArgs__Windows_UI_Xaml_Navigation__NavigationEventArgs *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_object__UI_Xaml_Navigation_NavigationEventArgs__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender, 
					global::Windows.UI.Xaml.Navigation.INavigationEventArgs__Impl.Vtbl** unsafe_e)
		{
			// Setup
			object sender = default(object);
			global::Windows.UI.Xaml.Navigation.NavigationEventArgs e = default(global::Windows.UI.Xaml.Navigation.NavigationEventArgs);
			try
			{
				// Marshalling
				sender = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_sender));
				e = (global::Windows.UI.Xaml.Navigation.NavigationEventArgs)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_e), 
									typeof(global::Windows.UI.Xaml.Navigation.INavigationEventArgs).TypeHandle, 
									typeof(global::Windows.UI.Xaml.Navigation.NavigationEventArgs).TypeHandle
								);
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Navigation.NavigatedEventHandler>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).Invoke(
									sender, 
									e
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlMetadataProvider.GetXmlnsDefinitions, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.ArrayMarshaller] rg_Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_rg_UI_Xaml_Markup_XmlnsDefinition__(
					global::System.IntPtr pComThis, 
					uint* unsafe_definitions__retval_mcgLength, 
					global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType** unsafe_definitions__retval)
		{
			// Setup
			if (unsafe_definitions__retval != null)
				(*(unsafe_definitions__retval)) = null;
			global::Windows.UI.Xaml.Markup.XmlnsDefinition[] definitions__retval = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition[]);
			try
			{
				// Marshalling
				// Call to managed method
				definitions__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).GetXmlnsDefinitions();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_definitions__retval != null)
					if (definitions__retval == null)
						(*(unsafe_definitions__retval)) = null;
					else
					{
						if (definitions__retval != null)
							(*(unsafe_definitions__retval_mcgLength)) = (uint)definitions__retval.Length;
						if (definitions__retval != null)
							(*(unsafe_definitions__retval)) = (global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType*)global::McgInterop.McgHelpers.CoTaskMemAllocAndZeroMemory(((global::System.IntPtr)checked((*(unsafe_definitions__retval_mcgLength)) * sizeof(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType))));
						for (uint mcgIdx = 0; (mcgIdx < (*(unsafe_definitions__retval_mcgLength))); mcgIdx++)
						{
							// [rev] [out] [retval] [nativebyref] [optional] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition definitions__retval
							global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__SafeToUnsafe(
												ref definitions__retval[mcgIdx], 
												out (*(unsafe_definitions__retval))[mcgIdx]
											);
						}
					}
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_definitions__retval != null)
				{
					global::System.Runtime.InteropServices.ExternalInterop.SafeCoTaskMemFree((*(unsafe_definitions__retval)));
					(*(unsafe_definitions__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_BaseType, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] Windows_UI_Xaml_Markup_IXamlType__Windows_UI_Xaml_Markup__IXamlType *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_UI_Xaml_Markup_IXamlType__(
					global::System.IntPtr pComThis, 
					global::Windows.UI.Xaml.Markup.IXamlType__Impl.Vtbl*** unsafe_value__retval)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = null;
			global::Windows.UI.Xaml.Markup.IXamlType value__retval = default(global::Windows.UI.Xaml.Markup.IXamlType);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Markup.IXamlType>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_BaseType();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (global::Windows.UI.Xaml.Markup.IXamlType__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										value__retval, 
										typeof(global::Windows.UI.Xaml.Markup.IXamlType).TypeHandle
									);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_value__retval)))));
					(*(unsafe_value__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.AddToVector, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_object__object__(
					global::System.IntPtr pComThis, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_instance, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value)
		{
			// Setup
			object instance = default(object);
			object value = default(object);
			try
			{
				// Marshalling
				instance = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_instance));
				value = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value));
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::Windows.UI.Xaml.Markup.IXamlType>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).AddToVector(
									instance, 
									value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Toasts.IToastAppLogoClass.get_Crop, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Toasts_ToastImageCrop__NotificationsExtensions_Toasts__ToastImageCrop, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_NotificationsExtensions_Toasts_ToastImageCrop__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Toasts.ToastImageCrop* unsafe_value__retval)
		{
			// Setup
			global::NotificationsExtensions.Toasts.ToastImageCrop value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Toasts.IToastAppLogoClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_Crop();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = default(global::NotificationsExtensions.Toasts.ToastImageCrop);
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Toasts.IToastAudioClass.get_Src, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_Uri__(
					global::System.IntPtr pComThis, 
					global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl*** unsafe_value__retval)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = null;
			global::System.Uri value__retval = default(global::System.Uri);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Toasts.IToastAudioClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_Src();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					if (value__retval != null)
						(*(unsafe_value__retval)) = (global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl**)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(value__retval);
					else
						(*(unsafe_value__retval)) = null;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_value__retval)))));
					(*(unsafe_value__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Toasts.IToastAudioClass.put_Src, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_Uri__(
					global::System.IntPtr pComThis, 
					global::Windows.Foundation.IUriRuntimeClass__Impl.Vtbl** unsafe_value)
		{
			// Setup
			global::System.Uri value = default(global::System.Uri);
			try
			{
				// Marshalling
				if (unsafe_value != null)
					value = global::McgInterop.McgHelpers.WindowsFoundationUri2SystemUri(((global::System.__ComObject)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject_NoUnboxing(
											((global::System.IntPtr)unsafe_value), 
											typeof(global::Windows.Foundation.IUriRuntimeClass).TypeHandle
										)));
				else
					value = null;
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Toasts.IToastAudioClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).put_Src(value);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Toasts.IToastButtonClass.get_ActivationType, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Toasts_ToastActivationType__NotificationsExtensions_Toasts__ToastActivationType, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_NotificationsExtensions_Toasts_ToastActivationType__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Toasts.ToastActivationType* unsafe_value__retval)
		{
			// Setup
			global::NotificationsExtensions.Toasts.ToastActivationType value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Toasts.IToastButtonClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_ActivationType();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = default(global::NotificationsExtensions.Toasts.ToastActivationType);
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Toasts.IToastButtonClass.put_ActivationType, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Toasts_ToastActivationType__NotificationsExtensions_Toasts__ToastActivationType, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_int_2(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Toasts.ToastActivationType unsafe_value)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Toasts.IToastButtonClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).put_ActivationType(unsafe_value);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.INotificationContent.GetXml, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] Windows_Data_Xml_Dom_XmlDocument__Windows_Data_Xml_Dom__XmlDocument *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_Data_Xml_Dom_XmlDocument__(
					global::System.IntPtr pComThis, 
					global::Windows.Data.Xml.Dom.IXmlDocument__Impl.Vtbl*** unsafe_value__retval)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = null;
			global::Windows.Data.Xml.Dom.XmlDocument value__retval = default(global::Windows.Data.Xml.Dom.XmlDocument);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.INotificationContent>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).GetXml();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (global::Windows.Data.Xml.Dom.IXmlDocument__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										value__retval, 
										typeof(global::Windows.Data.Xml.Dom.IXmlDocument).TypeHandle
									);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_value__retval)))));
					(*(unsafe_value__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Toasts.IToastContentClass.get_Duration, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Toasts_ToastDuration__NotificationsExtensions_Toasts__ToastDuration, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_NotificationsExtensions_Toasts_ToastDuration__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Toasts.ToastDuration* unsafe_value__retval)
		{
			// Setup
			global::NotificationsExtensions.Toasts.ToastDuration value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Toasts.IToastContentClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_Duration();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = default(global::NotificationsExtensions.Toasts.ToastDuration);
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Toasts.IToastContentClass.get_Scenario, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Toasts_ToastScenario__NotificationsExtensions_Toasts__ToastScenario, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_NotificationsExtensions_Toasts_ToastScenario__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Toasts.ToastScenario* unsafe_value__retval)
		{
			// Setup
			global::NotificationsExtensions.Toasts.ToastScenario value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Toasts.IToastContentClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_Scenario();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = default(global::NotificationsExtensions.Toasts.ToastScenario);
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Toasts.IToastVisualClass.get_BodyTextLine1, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastText__NotificationsExtensions_Toasts__ToastText *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_NotificationsExtensions_Toasts_ToastText__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Toasts.IToastTextClass__Impl.Vtbl*** unsafe_value__retval)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = null;
			global::NotificationsExtensions.Toasts.ToastText value__retval = default(global::NotificationsExtensions.Toasts.ToastText);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Toasts.IToastVisualClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_BodyTextLine1();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (global::NotificationsExtensions.Toasts.IToastTextClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										value__retval, 
										typeof(global::NotificationsExtensions.Toasts.IToastTextClass).TypeHandle
									);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_value__retval)))));
					(*(unsafe_value__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Toasts.IToastVisualClass.put_BodyTextLine1, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Toasts_ToastText__NotificationsExtensions_Toasts__ToastText *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_NotificationsExtensions_Toasts_ToastText__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Toasts.IToastTextClass__Impl.Vtbl** unsafe_value)
		{
			// Setup
			global::NotificationsExtensions.Toasts.ToastText value = default(global::NotificationsExtensions.Toasts.ToastText);
			try
			{
				// Marshalling
				value = (global::NotificationsExtensions.Toasts.ToastText)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value), 
									typeof(global::NotificationsExtensions.Toasts.IToastTextClass).TypeHandle, 
									typeof(global::NotificationsExtensions.Toasts.ToastText).TypeHandle
								);
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Toasts.IToastVisualClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).put_BodyTextLine1(value);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileBackgroundImageClass.get_Crop, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Tiles_TileImageCrop__NotificationsExtensions_Tiles__TileImageCrop, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_NotificationsExtensions_Tiles_TileImageCrop__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Tiles.TileImageCrop* unsafe_value__retval)
		{
			// Setup
			global::NotificationsExtensions.Tiles.TileImageCrop value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileBackgroundImageClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_Crop();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = default(global::NotificationsExtensions.Tiles.TileImageCrop);
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileBackgroundImageClass.get_Overlay, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_int__(
					global::System.IntPtr pComThis, 
					int* unsafe_value__retval)
		{
			// Setup
			int value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileBackgroundImageClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_Overlay();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = 0;
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileBackgroundImageClass.get_Source, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileImageSource__NotificationsExtensions_Tiles__TileImageSource *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_NotificationsExtensions_Tiles_TileImageSource__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl*** unsafe_value__retval)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = null;
			global::NotificationsExtensions.Tiles.TileImageSource value__retval = default(global::NotificationsExtensions.Tiles.TileImageSource);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileBackgroundImageClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_Source();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										value__retval, 
										typeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass).TypeHandle
									);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_value__retval)))));
					(*(unsafe_value__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileBackgroundImageClass.put_Crop, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Tiles_TileImageCrop__NotificationsExtensions_Tiles__TileImageCrop, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_int_3(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Tiles.TileImageCrop unsafe_value)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileBackgroundImageClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).put_Crop(unsafe_value);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileBackgroundImageClass.put_Overlay, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_int__(
					global::System.IntPtr pComThis, 
					int unsafe_value)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileBackgroundImageClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).put_Overlay(unsafe_value);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileBackgroundImageClass.put_Source, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileImageSource__NotificationsExtensions_Tiles__TileImageSource *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_NotificationsExtensions_Tiles_TileImageSource__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Tiles.ITileImageSourceClass__Impl.Vtbl** unsafe_value)
		{
			// Setup
			global::NotificationsExtensions.Tiles.TileImageSource value = default(global::NotificationsExtensions.Tiles.TileImageSource);
			try
			{
				// Marshalling
				value = (global::NotificationsExtensions.Tiles.TileImageSource)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value), 
									typeof(global::NotificationsExtensions.Tiles.ITileImageSourceClass).TypeHandle, 
									typeof(global::NotificationsExtensions.Tiles.TileImageSource).TypeHandle
								);
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileBackgroundImageClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).put_Source(value);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileImageClass.get_Align, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Tiles_TileImageAlign__NotificationsExtensions_Tiles__TileImageAlign, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_NotificationsExtensions_Tiles_TileImageAlign__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Tiles.TileImageAlign* unsafe_value__retval)
		{
			// Setup
			global::NotificationsExtensions.Tiles.TileImageAlign value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileImageClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_Align();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = default(global::NotificationsExtensions.Tiles.TileImageAlign);
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileTextClass.get_Align, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Tiles_TileTextAlign__NotificationsExtensions_Tiles__TileTextAlign, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_NotificationsExtensions_Tiles_TileTextAlign__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Tiles.TileTextAlign* unsafe_value__retval)
		{
			// Setup
			global::NotificationsExtensions.Tiles.TileTextAlign value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileTextClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_Align();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = default(global::NotificationsExtensions.Tiles.TileTextAlign);
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileTextClass.get_Style, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Tiles_TileTextStyle__NotificationsExtensions_Tiles__TileTextStyle, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_NotificationsExtensions_Tiles_TileTextStyle__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Tiles.TileTextStyle* unsafe_value__retval)
		{
			// Setup
			global::NotificationsExtensions.Tiles.TileTextStyle value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileTextClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_Style();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = default(global::NotificationsExtensions.Tiles.TileTextStyle);
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileBindingContentPeopleClass.get_Images, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Collections_Generic_IList_1_NotificationsExtensions_Tiles_TileImageSource___Windows_Foundation_Collections__IVector_A_NotificationsExtensions_Tiles_TileImageSource_V_ *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func__IList_1_NotificationsExtensions_Tiles_TileImageSource___(
					global::System.IntPtr pComThis, 
					global::System.Collections.Generic.IList_A_NotificationsExtensions_Tiles_TileImageSource_V___Impl.Vtbl*** unsafe_value__retval)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = null;
			global::System.Collections.Generic.IList<global::NotificationsExtensions.Tiles.TileImageSource> value__retval = default(global::System.Collections.Generic.IList<global::NotificationsExtensions.Tiles.TileImageSource>);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileBindingContentPeopleClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_Images();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (global::System.Collections.Generic.IList_A_NotificationsExtensions_Tiles_TileImageSource_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										value__retval, 
										typeof(global::System.Collections.Generic.IList<global::NotificationsExtensions.Tiles.TileImageSource>).TypeHandle
									);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_value__retval)))));
					(*(unsafe_value__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileBindingClass.get_Branding, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Tiles_TileBranding__NotificationsExtensions_Tiles__TileBranding, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_NotificationsExtensions_Tiles_TileBranding__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Tiles.TileBranding* unsafe_value__retval)
		{
			// Setup
			global::NotificationsExtensions.Tiles.TileBranding value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileBindingClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_Branding();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = default(global::NotificationsExtensions.Tiles.TileBranding);
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileBindingClass.put_Branding, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Tiles_TileBranding__NotificationsExtensions_Tiles__TileBranding, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_int_4(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Tiles.TileBranding unsafe_value)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileBindingClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).put_Branding(unsafe_value);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileVisualClass.get_TileLarge, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileBinding__NotificationsExtensions_Tiles__TileBinding *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_NotificationsExtensions_Tiles_TileBinding__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Tiles.ITileBindingClass__Impl.Vtbl*** unsafe_value__retval)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = null;
			global::NotificationsExtensions.Tiles.TileBinding value__retval = default(global::NotificationsExtensions.Tiles.TileBinding);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileVisualClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_TileLarge();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (global::NotificationsExtensions.Tiles.ITileBindingClass__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										value__retval, 
										typeof(global::NotificationsExtensions.Tiles.ITileBindingClass).TypeHandle
									);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_value__retval)))));
					(*(unsafe_value__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Tiles.ITileVisualClass.put_TileLarge, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTClassMarshaller] NotificationsExtensions_Tiles_TileBinding__NotificationsExtensions_Tiles__TileBinding *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Proc_NotificationsExtensions_Tiles_TileBinding__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Tiles.ITileBindingClass__Impl.Vtbl** unsafe_value)
		{
			// Setup
			global::NotificationsExtensions.Tiles.TileBinding value = default(global::NotificationsExtensions.Tiles.TileBinding);
			try
			{
				// Marshalling
				value = (global::NotificationsExtensions.Tiles.TileBinding)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_value), 
									typeof(global::NotificationsExtensions.Tiles.ITileBindingClass).TypeHandle, 
									typeof(global::NotificationsExtensions.Tiles.TileBinding).TypeHandle
								);
				// Call to managed method
				global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Tiles.ITileVisualClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).put_TileLarge(value);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, NotificationsExtensions.Badges.IBadgeGlyphNotificationContentClass.get_Glyph, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] NotificationsExtensions_Badges_GlyphValue__NotificationsExtensions_Badges__GlyphValue, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int Func_NotificationsExtensions_Badges_GlyphValue__(
					global::System.IntPtr pComThis, 
					global::NotificationsExtensions.Badges.GlyphValue* unsafe_value__retval)
		{
			// Setup
			global::NotificationsExtensions.Badges.GlyphValue value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::NotificationsExtensions.Badges.IBadgeGlyphNotificationContentClass>(global::System.Runtime.InteropServices.McgMarshal.ThisPointerToTargetObject(pComThis)).get_Glyph();
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = default(global::NotificationsExtensions.Badges.GlyphValue);
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}
	}
}

